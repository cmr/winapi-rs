/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Copy)]
pub struct Struct_DICONSTANTFORCE {
    pub lMagnitude: LONG,
}
impl ::std::default::Default for Struct_DICONSTANTFORCE {
    fn default() -> Struct_DICONSTANTFORCE { unsafe { ::std::mem::zeroed() } }
}
pub type DICONSTANTFORCE = Struct_DICONSTANTFORCE;
pub type LPDICONSTANTFORCE = *mut Struct_DICONSTANTFORCE;
pub type LPCDICONSTANTFORCE = *const DICONSTANTFORCE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIRAMPFORCE {
    pub lStart: LONG,
    pub lEnd: LONG,
}
impl ::std::default::Default for Struct_DIRAMPFORCE {
    fn default() -> Struct_DIRAMPFORCE { unsafe { ::std::mem::zeroed() } }
}
pub type DIRAMPFORCE = Struct_DIRAMPFORCE;
pub type LPDIRAMPFORCE = *mut Struct_DIRAMPFORCE;
pub type LPCDIRAMPFORCE = *const DIRAMPFORCE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPERIODIC {
    pub dwMagnitude: DWORD,
    pub lOffset: LONG,
    pub dwPhase: DWORD,
    pub dwPeriod: DWORD,
}
impl ::std::default::Default for Struct_DIPERIODIC {
    fn default() -> Struct_DIPERIODIC { unsafe { ::std::mem::zeroed() } }
}
pub type DIPERIODIC = Struct_DIPERIODIC;
pub type LPDIPERIODIC = *mut Struct_DIPERIODIC;
pub type LPCDIPERIODIC = *const DIPERIODIC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DICONDITION {
    pub lOffset: LONG,
    pub lPositiveCoefficient: LONG,
    pub lNegativeCoefficient: LONG,
    pub dwPositiveSaturation: DWORD,
    pub dwNegativeSaturation: DWORD,
    pub lDeadBand: LONG,
}
impl ::std::default::Default for Struct_DICONDITION {
    fn default() -> Struct_DICONDITION { unsafe { ::std::mem::zeroed() } }
}
pub type DICONDITION = Struct_DICONDITION;
pub type LPDICONDITION = *mut Struct_DICONDITION;
pub type LPCDICONDITION = *const DICONDITION;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DICUSTOMFORCE {
    pub cChannels: DWORD,
    pub dwSamplePeriod: DWORD,
    pub cSamples: DWORD,
    pub rglForceData: LPLONG,
}
impl ::std::default::Default for Struct_DICUSTOMFORCE {
    fn default() -> Struct_DICUSTOMFORCE { unsafe { ::std::mem::zeroed() } }
}
pub type DICUSTOMFORCE = Struct_DICUSTOMFORCE;
pub type LPDICUSTOMFORCE = *mut Struct_DICUSTOMFORCE;
pub type LPCDICUSTOMFORCE = *const DICUSTOMFORCE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIENVELOPE {
    pub dwSize: DWORD,
    pub dwAttackLevel: DWORD,
    pub dwAttackTime: DWORD,
    pub dwFadeLevel: DWORD,
    pub dwFadeTime: DWORD,
}
impl ::std::default::Default for Struct_DIENVELOPE {
    fn default() -> Struct_DIENVELOPE { unsafe { ::std::mem::zeroed() } }
}
pub type DIENVELOPE = Struct_DIENVELOPE;
pub type LPDIENVELOPE = *mut Struct_DIENVELOPE;
pub type LPCDIENVELOPE = *const DIENVELOPE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIEFFECT_DX5 {
    pub dwSize: DWORD,
    pub dwFlags: DWORD,
    pub dwDuration: DWORD,
    pub dwSamplePeriod: DWORD,
    pub dwGain: DWORD,
    pub dwTriggerButton: DWORD,
    pub dwTriggerRepeatInterval: DWORD,
    pub cAxes: DWORD,
    pub rgdwAxes: LPDWORD,
    pub rglDirection: LPLONG,
    pub lpEnvelope: LPDIENVELOPE,
    pub cbTypeSpecificParams: DWORD,
    pub lpvTypeSpecificParams: LPVOID,
}
impl ::std::default::Default for Struct_DIEFFECT_DX5 {
    fn default() -> Struct_DIEFFECT_DX5 { unsafe { ::std::mem::zeroed() } }
}
pub type DIEFFECT_DX5 = Struct_DIEFFECT_DX5;
pub type LPDIEFFECT_DX5 = *mut Struct_DIEFFECT_DX5;
pub type LPCDIEFFECT_DX5 = *const DIEFFECT_DX5;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIEFFECT {
    pub dwSize: DWORD,
    pub dwFlags: DWORD,
    pub dwDuration: DWORD,
    pub dwSamplePeriod: DWORD,
    pub dwGain: DWORD,
    pub dwTriggerButton: DWORD,
    pub dwTriggerRepeatInterval: DWORD,
    pub cAxes: DWORD,
    pub rgdwAxes: LPDWORD,
    pub rglDirection: LPLONG,
    pub lpEnvelope: LPDIENVELOPE,
    pub cbTypeSpecificParams: DWORD,
    pub lpvTypeSpecificParams: LPVOID,
    pub dwStartDelay: DWORD,
}
impl ::std::default::Default for Struct_DIEFFECT {
    fn default() -> Struct_DIEFFECT { unsafe { ::std::mem::zeroed() } }
}
pub type DIEFFECT = Struct_DIEFFECT;
pub type LPDIEFFECT = *mut Struct_DIEFFECT;
pub type DIEFFECT_DX6 = DIEFFECT;
pub type LPDIEFFECT_DX6 = LPDIEFFECT;
pub type LPCDIEFFECT = *const DIEFFECT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIFILEEFFECT {
    pub dwSize: DWORD,
    pub GuidEffect: GUID,
    pub lpDiEffect: LPCDIEFFECT,
    pub szFriendlyName: [CHAR; 260usize],
}
impl ::std::default::Default for Struct_DIFILEEFFECT {
    fn default() -> Struct_DIFILEEFFECT { unsafe { ::std::mem::zeroed() } }
}
pub type DIFILEEFFECT = Struct_DIFILEEFFECT;
pub type LPDIFILEEFFECT = *mut Struct_DIFILEEFFECT;
pub type LPCDIFILEEFFECT = *const DIFILEEFFECT;
pub type LPDIENUMEFFECTSINFILECALLBACK =
    ::std::option::Option<extern "C" fn(arg1: LPCDIFILEEFFECT, arg2: LPVOID)
                              -> BOOL>;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIEFFESCAPE {
    pub dwSize: DWORD,
    pub dwCommand: DWORD,
    pub lpvInBuffer: LPVOID,
    pub cbInBuffer: DWORD,
    pub lpvOutBuffer: LPVOID,
    pub cbOutBuffer: DWORD,
}
impl ::std::default::Default for Struct_DIEFFESCAPE {
    fn default() -> Struct_DIEFFESCAPE { unsafe { ::std::mem::zeroed() } }
}
pub type DIEFFESCAPE = Struct_DIEFFESCAPE;
pub type LPDIEFFESCAPE = *mut Struct_DIEFFESCAPE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputEffect {
    pub lpVtbl: *mut Struct_IDirectInputEffectVtbl,
}
impl ::std::default::Default for Struct_IDirectInputEffect {
    fn default() -> Struct_IDirectInputEffect {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputEffect = Struct_IDirectInputEffect;
pub type IDirectInputEffectVtbl = Struct_IDirectInputEffectVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputEffectVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputEffect,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputEffect)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputEffect)
                                           -> ULONG>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInputEffect,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
    pub GetEffectGuid: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputEffect,
                                                  arg1: LPGUID) -> HRESULT>,
    pub GetParameters: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputEffect,
                                                  arg1: LPDIEFFECT,
                                                  arg2: DWORD) -> HRESULT>,
    pub SetParameters: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputEffect,
                                                  arg1: LPCDIEFFECT,
                                                  arg2: DWORD) -> HRESULT>,
    pub Start: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirectInputEffect,
                                          arg1: DWORD, arg2: DWORD)
                                         -> HRESULT>,
    pub Stop: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirectInputEffect)
                                        -> HRESULT>,
    pub GetEffectStatus: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputEffect,
                                                    arg1: LPDWORD)
                                                   -> HRESULT>,
    pub Download: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirectInputEffect)
                                            -> HRESULT>,
    pub Unload: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputEffect)
                                          -> HRESULT>,
    pub Escape: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputEffect,
                                           arg1: LPDIEFFESCAPE) -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputEffectVtbl {
    fn default() -> Struct_IDirectInputEffectVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTEFFECT = *mut Struct_IDirectInputEffect;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVCAPS_DX3 {
    pub dwSize: DWORD,
    pub dwFlags: DWORD,
    pub dwDevType: DWORD,
    pub dwAxes: DWORD,
    pub dwButtons: DWORD,
    pub dwPOVs: DWORD,
}
impl ::std::default::Default for Struct_DIDEVCAPS_DX3 {
    fn default() -> Struct_DIDEVCAPS_DX3 { unsafe { ::std::mem::zeroed() } }
}
pub type DIDEVCAPS_DX3 = Struct_DIDEVCAPS_DX3;
pub type LPDIDEVCAPS_DX3 = *mut Struct_DIDEVCAPS_DX3;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVCAPS {
    pub dwSize: DWORD,
    pub dwFlags: DWORD,
    pub dwDevType: DWORD,
    pub dwAxes: DWORD,
    pub dwButtons: DWORD,
    pub dwPOVs: DWORD,
    pub dwFFSamplePeriod: DWORD,
    pub dwFFMinTimeResolution: DWORD,
    pub dwFirmwareRevision: DWORD,
    pub dwHardwareRevision: DWORD,
    pub dwFFDriverVersion: DWORD,
}
impl ::std::default::Default for Struct_DIDEVCAPS {
    fn default() -> Struct_DIDEVCAPS { unsafe { ::std::mem::zeroed() } }
}
pub type DIDEVCAPS = Struct_DIDEVCAPS;
pub type LPDIDEVCAPS = *mut Struct_DIDEVCAPS;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIOBJECTDATAFORMAT {
    pub pguid: *const GUID,
    pub dwOfs: DWORD,
    pub dwType: DWORD,
    pub dwFlags: DWORD,
}
impl ::std::default::Default for Struct__DIOBJECTDATAFORMAT {
    fn default() -> Struct__DIOBJECTDATAFORMAT {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIOBJECTDATAFORMAT = Struct__DIOBJECTDATAFORMAT;
pub type LPDIOBJECTDATAFORMAT = *mut Struct__DIOBJECTDATAFORMAT;
pub type LPCDIOBJECTDATAFORMAT = *const DIOBJECTDATAFORMAT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIDATAFORMAT {
    pub dwSize: DWORD,
    pub dwObjSize: DWORD,
    pub dwFlags: DWORD,
    pub dwDataSize: DWORD,
    pub dwNumObjs: DWORD,
    pub rgodf: LPDIOBJECTDATAFORMAT,
}
impl ::std::default::Default for Struct__DIDATAFORMAT {
    fn default() -> Struct__DIDATAFORMAT { unsafe { ::std::mem::zeroed() } }
}
pub type DIDATAFORMAT = Struct__DIDATAFORMAT;
pub type LPDIDATAFORMAT = *mut Struct__DIDATAFORMAT;
pub type LPCDIDATAFORMAT = *const DIDATAFORMAT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIACTIONA {
    pub uAppData: UINT_PTR,
    pub dwSemantic: DWORD,
    pub dwFlags: DWORD,
    pub _bindgen_data_1_: [u64; 1usize],
    pub guidInstance: GUID,
    pub dwObjID: DWORD,
    pub dwHow: DWORD,
}
impl Struct__DIACTIONA {
    pub unsafe fn lptszActionName(&mut self) -> *mut LPCSTR {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn uResIdString(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
}
impl ::std::default::Default for Struct__DIACTIONA {
    fn default() -> Struct__DIACTIONA { unsafe { ::std::mem::zeroed() } }
}
pub type DIACTIONA = Struct__DIACTIONA;
pub type LPDIACTIONA = *mut Struct__DIACTIONA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIACTIONW {
    pub uAppData: UINT_PTR,
    pub dwSemantic: DWORD,
    pub dwFlags: DWORD,
    pub _bindgen_data_1_: [u64; 1usize],
    pub guidInstance: GUID,
    pub dwObjID: DWORD,
    pub dwHow: DWORD,
}
impl Struct__DIACTIONW {
    pub unsafe fn lptszActionName(&mut self) -> *mut LPCWSTR {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn uResIdString(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
}
impl ::std::default::Default for Struct__DIACTIONW {
    fn default() -> Struct__DIACTIONW { unsafe { ::std::mem::zeroed() } }
}
pub type DIACTIONW = Struct__DIACTIONW;
pub type LPDIACTIONW = *mut Struct__DIACTIONW;
pub type DIACTION = DIACTIONA;
pub type LPDIACTION = LPDIACTIONA;
pub type LPCDIACTIONA = *const DIACTIONA;
pub type LPCDIACTIONW = *const DIACTIONW;
pub type LPCDIACTION = *const DIACTION;
pub type LPCDIACTION = *const DIACTION;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIACTIONFORMATA {
    pub dwSize: DWORD,
    pub dwActionSize: DWORD,
    pub dwDataSize: DWORD,
    pub dwNumActions: DWORD,
    pub rgoAction: LPDIACTIONA,
    pub guidActionMap: GUID,
    pub dwGenre: DWORD,
    pub dwBufferSize: DWORD,
    pub lAxisMin: LONG,
    pub lAxisMax: LONG,
    pub hInstString: HINSTANCE,
    pub ftTimeStamp: FILETIME,
    pub dwCRC: DWORD,
    pub tszActionMap: [CHAR; 260usize],
}
impl ::std::default::Default for Struct__DIACTIONFORMATA {
    fn default() -> Struct__DIACTIONFORMATA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIACTIONFORMATA = Struct__DIACTIONFORMATA;
pub type LPDIACTIONFORMATA = *mut Struct__DIACTIONFORMATA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIACTIONFORMATW {
    pub dwSize: DWORD,
    pub dwActionSize: DWORD,
    pub dwDataSize: DWORD,
    pub dwNumActions: DWORD,
    pub rgoAction: LPDIACTIONW,
    pub guidActionMap: GUID,
    pub dwGenre: DWORD,
    pub dwBufferSize: DWORD,
    pub lAxisMin: LONG,
    pub lAxisMax: LONG,
    pub hInstString: HINSTANCE,
    pub ftTimeStamp: FILETIME,
    pub dwCRC: DWORD,
    pub tszActionMap: [WCHAR; 260usize],
}
impl ::std::default::Default for Struct__DIACTIONFORMATW {
    fn default() -> Struct__DIACTIONFORMATW {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIACTIONFORMATW = Struct__DIACTIONFORMATW;
pub type LPDIACTIONFORMATW = *mut Struct__DIACTIONFORMATW;
pub type DIACTIONFORMAT = DIACTIONFORMATA;
pub type LPDIACTIONFORMAT = LPDIACTIONFORMATA;
pub type LPCDIACTIONFORMATA = *const DIACTIONFORMATA;
pub type LPCDIACTIONFORMATW = *const DIACTIONFORMATW;
pub type LPCDIACTIONFORMAT = *const DIACTIONFORMAT;
pub type LPCDIACTIONFORMAT = *const DIACTIONFORMAT;
pub type D3DCOLOR = DWORD;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DICOLORSET {
    pub dwSize: DWORD,
    pub cTextFore: D3DCOLOR,
    pub cTextHighlight: D3DCOLOR,
    pub cCalloutLine: D3DCOLOR,
    pub cCalloutHighlight: D3DCOLOR,
    pub cBorder: D3DCOLOR,
    pub cControlFill: D3DCOLOR,
    pub cHighlightFill: D3DCOLOR,
    pub cAreaFill: D3DCOLOR,
}
impl ::std::default::Default for Struct__DICOLORSET {
    fn default() -> Struct__DICOLORSET { unsafe { ::std::mem::zeroed() } }
}
pub type DICOLORSET = Struct__DICOLORSET;
pub type LPDICOLORSET = *mut Struct__DICOLORSET;
pub type LPCDICOLORSET = *const DICOLORSET;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DICONFIGUREDEVICESPARAMSA {
    pub dwSize: DWORD,
    pub dwcUsers: DWORD,
    pub lptszUserNames: LPSTR,
    pub dwcFormats: DWORD,
    pub lprgFormats: LPDIACTIONFORMATA,
    pub hwnd: HWND,
    pub dics: DICOLORSET,
    pub lpUnkDDSTarget: *mut IUnknown,
}
impl ::std::default::Default for Struct__DICONFIGUREDEVICESPARAMSA {
    fn default() -> Struct__DICONFIGUREDEVICESPARAMSA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DICONFIGUREDEVICESPARAMSA = Struct__DICONFIGUREDEVICESPARAMSA;
pub type LPDICONFIGUREDEVICESPARAMSA = *mut Struct__DICONFIGUREDEVICESPARAMSA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DICONFIGUREDEVICESPARAMSW {
    pub dwSize: DWORD,
    pub dwcUsers: DWORD,
    pub lptszUserNames: LPWSTR,
    pub dwcFormats: DWORD,
    pub lprgFormats: LPDIACTIONFORMATW,
    pub hwnd: HWND,
    pub dics: DICOLORSET,
    pub lpUnkDDSTarget: *mut IUnknown,
}
impl ::std::default::Default for Struct__DICONFIGUREDEVICESPARAMSW {
    fn default() -> Struct__DICONFIGUREDEVICESPARAMSW {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DICONFIGUREDEVICESPARAMSW = Struct__DICONFIGUREDEVICESPARAMSW;
pub type LPDICONFIGUREDEVICESPARAMSW = *mut Struct__DICONFIGUREDEVICESPARAMSW;
pub type DICONFIGUREDEVICESPARAMS = DICONFIGUREDEVICESPARAMSA;
pub type LPDICONFIGUREDEVICESPARAMS = LPDICONFIGUREDEVICESPARAMSA;
pub type LPCDICONFIGUREDEVICESPARAMSA = *const DICONFIGUREDEVICESPARAMSA;
pub type LPCDICONFIGUREDEVICESPARAMSW = *const DICONFIGUREDEVICESPARAMSW;
pub type LPCDICONFIGUREDEVICESPARAMS = *const DICONFIGUREDEVICESPARAMS;
pub type LPCDICONFIGUREDEVICESPARAMS = *const DICONFIGUREDEVICESPARAMS;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIDEVICEIMAGEINFOA {
    pub tszImagePath: [CHAR; 260usize],
    pub dwFlags: DWORD,
    pub dwViewID: DWORD,
    pub rcOverlay: RECT,
    pub dwObjID: DWORD,
    pub dwcValidPts: DWORD,
    pub rgptCalloutLine: [POINT; 5usize],
    pub rcCalloutRect: RECT,
    pub dwTextAlign: DWORD,
}
impl ::std::default::Default for Struct__DIDEVICEIMAGEINFOA {
    fn default() -> Struct__DIDEVICEIMAGEINFOA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEIMAGEINFOA = Struct__DIDEVICEIMAGEINFOA;
pub type LPDIDEVICEIMAGEINFOA = *mut Struct__DIDEVICEIMAGEINFOA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIDEVICEIMAGEINFOW {
    pub tszImagePath: [WCHAR; 260usize],
    pub dwFlags: DWORD,
    pub dwViewID: DWORD,
    pub rcOverlay: RECT,
    pub dwObjID: DWORD,
    pub dwcValidPts: DWORD,
    pub rgptCalloutLine: [POINT; 5usize],
    pub rcCalloutRect: RECT,
    pub dwTextAlign: DWORD,
}
impl ::std::default::Default for Struct__DIDEVICEIMAGEINFOW {
    fn default() -> Struct__DIDEVICEIMAGEINFOW {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEIMAGEINFOW = Struct__DIDEVICEIMAGEINFOW;
pub type LPDIDEVICEIMAGEINFOW = *mut Struct__DIDEVICEIMAGEINFOW;
pub type DIDEVICEIMAGEINFO = DIDEVICEIMAGEINFOA;
pub type LPDIDEVICEIMAGEINFO = LPDIDEVICEIMAGEINFOA;
pub type LPCDIDEVICEIMAGEINFOA = *const DIDEVICEIMAGEINFOA;
pub type LPCDIDEVICEIMAGEINFOW = *const DIDEVICEIMAGEINFOW;
pub type LPCDIDEVICEIMAGEINFO = *const DIDEVICEIMAGEINFO;
pub type LPCDIDEVICEIMAGEINFO = *const DIDEVICEIMAGEINFO;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIDEVICEIMAGEINFOHEADERA {
    pub dwSize: DWORD,
    pub dwSizeImageInfo: DWORD,
    pub dwcViews: DWORD,
    pub dwcButtons: DWORD,
    pub dwcAxes: DWORD,
    pub dwcPOVs: DWORD,
    pub dwBufferSize: DWORD,
    pub dwBufferUsed: DWORD,
    pub lprgImageInfoArray: LPDIDEVICEIMAGEINFOA,
}
impl ::std::default::Default for Struct__DIDEVICEIMAGEINFOHEADERA {
    fn default() -> Struct__DIDEVICEIMAGEINFOHEADERA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEIMAGEINFOHEADERA = Struct__DIDEVICEIMAGEINFOHEADERA;
pub type LPDIDEVICEIMAGEINFOHEADERA = *mut Struct__DIDEVICEIMAGEINFOHEADERA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIDEVICEIMAGEINFOHEADERW {
    pub dwSize: DWORD,
    pub dwSizeImageInfo: DWORD,
    pub dwcViews: DWORD,
    pub dwcButtons: DWORD,
    pub dwcAxes: DWORD,
    pub dwcPOVs: DWORD,
    pub dwBufferSize: DWORD,
    pub dwBufferUsed: DWORD,
    pub lprgImageInfoArray: LPDIDEVICEIMAGEINFOW,
}
impl ::std::default::Default for Struct__DIDEVICEIMAGEINFOHEADERW {
    fn default() -> Struct__DIDEVICEIMAGEINFOHEADERW {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEIMAGEINFOHEADERW = Struct__DIDEVICEIMAGEINFOHEADERW;
pub type LPDIDEVICEIMAGEINFOHEADERW = *mut Struct__DIDEVICEIMAGEINFOHEADERW;
pub type DIDEVICEIMAGEINFOHEADER = DIDEVICEIMAGEINFOHEADERA;
pub type LPDIDEVICEIMAGEINFOHEADER = LPDIDEVICEIMAGEINFOHEADERA;
pub type LPCDIDEVICEIMAGEINFOHEADERA = *const DIDEVICEIMAGEINFOHEADERA;
pub type LPCDIDEVICEIMAGEINFOHEADERW = *const DIDEVICEIMAGEINFOHEADERW;
pub type LPCDIDEVICEIMAGEINFOHEADER = *const DIDEVICEIMAGEINFOHEADER;
pub type LPCDIDEVICEIMAGEINFOHEADER = *const DIDEVICEIMAGEINFOHEADER;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEOBJECTINSTANCE_DX3A {
    pub dwSize: DWORD,
    pub guidType: GUID,
    pub dwOfs: DWORD,
    pub dwType: DWORD,
    pub dwFlags: DWORD,
    pub tszName: [CHAR; 260usize],
}
impl ::std::default::Default for Struct_DIDEVICEOBJECTINSTANCE_DX3A {
    fn default() -> Struct_DIDEVICEOBJECTINSTANCE_DX3A {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEOBJECTINSTANCE_DX3A = Struct_DIDEVICEOBJECTINSTANCE_DX3A;
pub type LPDIDEVICEOBJECTINSTANCE_DX3A =
    *mut Struct_DIDEVICEOBJECTINSTANCE_DX3A;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEOBJECTINSTANCE_DX3W {
    pub dwSize: DWORD,
    pub guidType: GUID,
    pub dwOfs: DWORD,
    pub dwType: DWORD,
    pub dwFlags: DWORD,
    pub tszName: [WCHAR; 260usize],
}
impl ::std::default::Default for Struct_DIDEVICEOBJECTINSTANCE_DX3W {
    fn default() -> Struct_DIDEVICEOBJECTINSTANCE_DX3W {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEOBJECTINSTANCE_DX3W = Struct_DIDEVICEOBJECTINSTANCE_DX3W;
pub type LPDIDEVICEOBJECTINSTANCE_DX3W =
    *mut Struct_DIDEVICEOBJECTINSTANCE_DX3W;
pub type DIDEVICEOBJECTINSTANCE_DX3 = DIDEVICEOBJECTINSTANCE_DX3A;
pub type LPDIDEVICEOBJECTINSTANCE_DX3 = LPDIDEVICEOBJECTINSTANCE_DX3A;
pub type LPCDIDEVICEOBJECTINSTANCE_DX3A = *const DIDEVICEOBJECTINSTANCE_DX3A;
pub type LPCDIDEVICEOBJECTINSTANCE_DX3W = *const DIDEVICEOBJECTINSTANCE_DX3W;
pub type LPCDIDEVICEOBJECTINSTANCE_DX3 = *const DIDEVICEOBJECTINSTANCE_DX3;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEOBJECTINSTANCEA {
    pub dwSize: DWORD,
    pub guidType: GUID,
    pub dwOfs: DWORD,
    pub dwType: DWORD,
    pub dwFlags: DWORD,
    pub tszName: [CHAR; 260usize],
    pub dwFFMaxForce: DWORD,
    pub dwFFForceResolution: DWORD,
    pub wCollectionNumber: WORD,
    pub wDesignatorIndex: WORD,
    pub wUsagePage: WORD,
    pub wUsage: WORD,
    pub dwDimension: DWORD,
    pub wExponent: WORD,
    pub wReportId: WORD,
}
impl ::std::default::Default for Struct_DIDEVICEOBJECTINSTANCEA {
    fn default() -> Struct_DIDEVICEOBJECTINSTANCEA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEOBJECTINSTANCEA = Struct_DIDEVICEOBJECTINSTANCEA;
pub type LPDIDEVICEOBJECTINSTANCEA = *mut Struct_DIDEVICEOBJECTINSTANCEA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEOBJECTINSTANCEW {
    pub dwSize: DWORD,
    pub guidType: GUID,
    pub dwOfs: DWORD,
    pub dwType: DWORD,
    pub dwFlags: DWORD,
    pub tszName: [WCHAR; 260usize],
    pub dwFFMaxForce: DWORD,
    pub dwFFForceResolution: DWORD,
    pub wCollectionNumber: WORD,
    pub wDesignatorIndex: WORD,
    pub wUsagePage: WORD,
    pub wUsage: WORD,
    pub dwDimension: DWORD,
    pub wExponent: WORD,
    pub wReportId: WORD,
}
impl ::std::default::Default for Struct_DIDEVICEOBJECTINSTANCEW {
    fn default() -> Struct_DIDEVICEOBJECTINSTANCEW {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEOBJECTINSTANCEW = Struct_DIDEVICEOBJECTINSTANCEW;
pub type LPDIDEVICEOBJECTINSTANCEW = *mut Struct_DIDEVICEOBJECTINSTANCEW;
pub type DIDEVICEOBJECTINSTANCE = DIDEVICEOBJECTINSTANCEA;
pub type LPDIDEVICEOBJECTINSTANCE = LPDIDEVICEOBJECTINSTANCEA;
pub type LPCDIDEVICEOBJECTINSTANCEA = *const DIDEVICEOBJECTINSTANCEA;
pub type LPCDIDEVICEOBJECTINSTANCEW = *const DIDEVICEOBJECTINSTANCEW;
pub type LPCDIDEVICEOBJECTINSTANCE = *const DIDEVICEOBJECTINSTANCE;
pub type LPDIENUMDEVICEOBJECTSCALLBACKA =
    ::std::option::Option<extern "C" fn
                              (arg1: LPCDIDEVICEOBJECTINSTANCEA, arg2: LPVOID)
                              -> BOOL>;
pub type LPDIENUMDEVICEOBJECTSCALLBACKW =
    ::std::option::Option<extern "C" fn
                              (arg1: LPCDIDEVICEOBJECTINSTANCEW, arg2: LPVOID)
                              -> BOOL>;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPHEADER {
    pub dwSize: DWORD,
    pub dwHeaderSize: DWORD,
    pub dwObj: DWORD,
    pub dwHow: DWORD,
}
impl ::std::default::Default for Struct_DIPROPHEADER {
    fn default() -> Struct_DIPROPHEADER { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPHEADER = Struct_DIPROPHEADER;
pub type LPDIPROPHEADER = *mut Struct_DIPROPHEADER;
pub type LPCDIPROPHEADER = *const DIPROPHEADER;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPDWORD {
    pub diph: DIPROPHEADER,
    pub dwData: DWORD,
}
impl ::std::default::Default for Struct_DIPROPDWORD {
    fn default() -> Struct_DIPROPDWORD { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPDWORD = Struct_DIPROPDWORD;
pub type LPDIPROPDWORD = *mut Struct_DIPROPDWORD;
pub type LPCDIPROPDWORD = *const DIPROPDWORD;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPPOINTER {
    pub diph: DIPROPHEADER,
    pub uData: UINT_PTR,
}
impl ::std::default::Default for Struct_DIPROPPOINTER {
    fn default() -> Struct_DIPROPPOINTER { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPPOINTER = Struct_DIPROPPOINTER;
pub type LPDIPROPPOINTER = *mut Struct_DIPROPPOINTER;
pub type LPCDIPROPPOINTER = *const DIPROPPOINTER;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPRANGE {
    pub diph: DIPROPHEADER,
    pub lMin: LONG,
    pub lMax: LONG,
}
impl ::std::default::Default for Struct_DIPROPRANGE {
    fn default() -> Struct_DIPROPRANGE { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPRANGE = Struct_DIPROPRANGE;
pub type LPDIPROPRANGE = *mut Struct_DIPROPRANGE;
pub type LPCDIPROPRANGE = *const DIPROPRANGE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPCAL {
    pub diph: DIPROPHEADER,
    pub lMin: LONG,
    pub lCenter: LONG,
    pub lMax: LONG,
}
impl ::std::default::Default for Struct_DIPROPCAL {
    fn default() -> Struct_DIPROPCAL { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPCAL = Struct_DIPROPCAL;
pub type LPDIPROPCAL = *mut Struct_DIPROPCAL;
pub type LPCDIPROPCAL = *const DIPROPCAL;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPCALPOV {
    pub diph: DIPROPHEADER,
    pub lMin: [LONG; 5usize],
    pub lMax: [LONG; 5usize],
}
impl ::std::default::Default for Struct_DIPROPCALPOV {
    fn default() -> Struct_DIPROPCALPOV { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPCALPOV = Struct_DIPROPCALPOV;
pub type LPDIPROPCALPOV = *mut Struct_DIPROPCALPOV;
pub type LPCDIPROPCALPOV = *const DIPROPCALPOV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPGUIDANDPATH {
    pub diph: DIPROPHEADER,
    pub guidClass: GUID,
    pub wszPath: [WCHAR; 260usize],
}
impl ::std::default::Default for Struct_DIPROPGUIDANDPATH {
    fn default() -> Struct_DIPROPGUIDANDPATH {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIPROPGUIDANDPATH = Struct_DIPROPGUIDANDPATH;
pub type LPDIPROPGUIDANDPATH = *mut Struct_DIPROPGUIDANDPATH;
pub type LPCDIPROPGUIDANDPATH = *const DIPROPGUIDANDPATH;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPSTRING {
    pub diph: DIPROPHEADER,
    pub wsz: [WCHAR; 260usize],
}
impl ::std::default::Default for Struct_DIPROPSTRING {
    fn default() -> Struct_DIPROPSTRING { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPSTRING = Struct_DIPROPSTRING;
pub type LPDIPROPSTRING = *mut Struct_DIPROPSTRING;
pub type LPCDIPROPSTRING = *const DIPROPSTRING;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__CPOINT {
    pub lP: LONG,
    pub dwLog: DWORD,
}
impl ::std::default::Default for Struct__CPOINT {
    fn default() -> Struct__CPOINT { unsafe { ::std::mem::zeroed() } }
}
pub type CPOINT = Struct__CPOINT;
pub type PCPOINT = *mut Struct__CPOINT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIPROPCPOINTS {
    pub diph: DIPROPHEADER,
    pub dwCPointsNum: DWORD,
    pub cp: [CPOINT; 8usize],
}
impl ::std::default::Default for Struct_DIPROPCPOINTS {
    fn default() -> Struct_DIPROPCPOINTS { unsafe { ::std::mem::zeroed() } }
}
pub type DIPROPCPOINTS = Struct_DIPROPCPOINTS;
pub type LPDIPROPCPOINTS = *mut Struct_DIPROPCPOINTS;
pub type LPCDIPROPCPOINTS = *const DIPROPCPOINTS;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEOBJECTDATA_DX3 {
    pub dwOfs: DWORD,
    pub dwData: DWORD,
    pub dwTimeStamp: DWORD,
    pub dwSequence: DWORD,
}
impl ::std::default::Default for Struct_DIDEVICEOBJECTDATA_DX3 {
    fn default() -> Struct_DIDEVICEOBJECTDATA_DX3 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEOBJECTDATA_DX3 = Struct_DIDEVICEOBJECTDATA_DX3;
pub type LPDIDEVICEOBJECTDATA_DX3 = *mut Struct_DIDEVICEOBJECTDATA_DX3;
pub type LPCDIDEVICEOBJECTDATA_DX = *const DIDEVICEOBJECTDATA_DX3;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEOBJECTDATA {
    pub dwOfs: DWORD,
    pub dwData: DWORD,
    pub dwTimeStamp: DWORD,
    pub dwSequence: DWORD,
    pub uAppData: UINT_PTR,
}
impl ::std::default::Default for Struct_DIDEVICEOBJECTDATA {
    fn default() -> Struct_DIDEVICEOBJECTDATA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEOBJECTDATA = Struct_DIDEVICEOBJECTDATA;
pub type LPDIDEVICEOBJECTDATA = *mut Struct_DIDEVICEOBJECTDATA;
pub type LPCDIDEVICEOBJECTDATA = *const DIDEVICEOBJECTDATA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEINSTANCE_DX3A {
    pub dwSize: DWORD,
    pub guidInstance: GUID,
    pub guidProduct: GUID,
    pub dwDevType: DWORD,
    pub tszInstanceName: [CHAR; 260usize],
    pub tszProductName: [CHAR; 260usize],
}
impl ::std::default::Default for Struct_DIDEVICEINSTANCE_DX3A {
    fn default() -> Struct_DIDEVICEINSTANCE_DX3A {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEINSTANCE_DX3A = Struct_DIDEVICEINSTANCE_DX3A;
pub type LPDIDEVICEINSTANCE_DX3A = *mut Struct_DIDEVICEINSTANCE_DX3A;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEINSTANCE_DX3W {
    pub dwSize: DWORD,
    pub guidInstance: GUID,
    pub guidProduct: GUID,
    pub dwDevType: DWORD,
    pub tszInstanceName: [WCHAR; 260usize],
    pub tszProductName: [WCHAR; 260usize],
}
impl ::std::default::Default for Struct_DIDEVICEINSTANCE_DX3W {
    fn default() -> Struct_DIDEVICEINSTANCE_DX3W {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEINSTANCE_DX3W = Struct_DIDEVICEINSTANCE_DX3W;
pub type LPDIDEVICEINSTANCE_DX3W = *mut Struct_DIDEVICEINSTANCE_DX3W;
pub type DIDEVICEINSTANCE_DX3 = DIDEVICEINSTANCE_DX3A;
pub type LPDIDEVICEINSTANCE_DX3 = LPDIDEVICEINSTANCE_DX3A;
pub type LPCDIDEVICEINSTANCE_DX3A = *const DIDEVICEINSTANCE_DX3A;
pub type LPCDIDEVICEINSTANCE_DX3W = *const DIDEVICEINSTANCE_DX3W;
pub type LPCDIDEVICEINSTANCE_DX3 = *const DIDEVICEINSTANCE_DX3;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEINSTANCEA {
    pub dwSize: DWORD,
    pub guidInstance: GUID,
    pub guidProduct: GUID,
    pub dwDevType: DWORD,
    pub tszInstanceName: [CHAR; 260usize],
    pub tszProductName: [CHAR; 260usize],
    pub guidFFDriver: GUID,
    pub wUsagePage: WORD,
    pub wUsage: WORD,
}
impl ::std::default::Default for Struct_DIDEVICEINSTANCEA {
    fn default() -> Struct_DIDEVICEINSTANCEA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEINSTANCEA = Struct_DIDEVICEINSTANCEA;
pub type LPDIDEVICEINSTANCEA = *mut Struct_DIDEVICEINSTANCEA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIDEVICEINSTANCEW {
    pub dwSize: DWORD,
    pub guidInstance: GUID,
    pub guidProduct: GUID,
    pub dwDevType: DWORD,
    pub tszInstanceName: [WCHAR; 260usize],
    pub tszProductName: [WCHAR; 260usize],
    pub guidFFDriver: GUID,
    pub wUsagePage: WORD,
    pub wUsage: WORD,
}
impl ::std::default::Default for Struct_DIDEVICEINSTANCEW {
    fn default() -> Struct_DIDEVICEINSTANCEW {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type DIDEVICEINSTANCEW = Struct_DIDEVICEINSTANCEW;
pub type LPDIDEVICEINSTANCEW = *mut Struct_DIDEVICEINSTANCEW;
pub type DIDEVICEINSTANCE = DIDEVICEINSTANCEA;
pub type LPDIDEVICEINSTANCE = LPDIDEVICEINSTANCEA;
pub type LPCDIDEVICEINSTANCEA = *const DIDEVICEINSTANCEA;
pub type LPCDIDEVICEINSTANCEW = *const DIDEVICEINSTANCEW;
pub type LPCDIDEVICEINSTANCE = *const DIDEVICEINSTANCE;
pub type LPCDIDEVICEINSTANCE = *const DIDEVICEINSTANCE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDeviceW {
    pub lpVtbl: *mut Struct_IDirectInputDeviceWVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDeviceW {
    fn default() -> Struct_IDirectInputDeviceW {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDeviceW = Struct_IDirectInputDeviceW;
pub type IDirectInputDeviceWVtbl = Struct_IDirectInputDeviceWVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDeviceWVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDeviceW,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDeviceW)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDeviceW)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDeviceW,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDeviceW,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKW,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDeviceW,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDeviceW,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDeviceW)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDeviceW)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDeviceW,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceW,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceW,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDeviceW,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDeviceW,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceW,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEW,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceW,
                                                  arg1: LPDIDEVICEINSTANCEW)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDeviceW,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInputDeviceW,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDeviceWVtbl {
    fn default() -> Struct_IDirectInputDeviceWVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICEW = *mut Struct_IDirectInputDeviceW;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDeviceA {
    pub lpVtbl: *mut Struct_IDirectInputDeviceAVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDeviceA {
    fn default() -> Struct_IDirectInputDeviceA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDeviceA = Struct_IDirectInputDeviceA;
pub type IDirectInputDeviceAVtbl = Struct_IDirectInputDeviceAVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDeviceAVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDeviceA,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDeviceA)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDeviceA)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDeviceA,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDeviceA,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKA,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDeviceA,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDeviceA,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDeviceA)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDeviceA)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDeviceA,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceA,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceA,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDeviceA,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDeviceA,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceA,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEA,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDeviceA,
                                                  arg1: LPDIDEVICEINSTANCEA)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDeviceA,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInputDeviceA,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDeviceAVtbl {
    fn default() -> Struct_IDirectInputDeviceAVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICEA = *mut Struct_IDirectInputDeviceA;
pub type LPDIRECTINPUTDEVICE = *mut Struct_IDirectInputDeviceA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIEFFECTINFOA {
    pub dwSize: DWORD,
    pub guid: GUID,
    pub dwEffType: DWORD,
    pub dwStaticParams: DWORD,
    pub dwDynamicParams: DWORD,
    pub tszName: [CHAR; 260usize],
}
impl ::std::default::Default for Struct_DIEFFECTINFOA {
    fn default() -> Struct_DIEFFECTINFOA { unsafe { ::std::mem::zeroed() } }
}
pub type DIEFFECTINFOA = Struct_DIEFFECTINFOA;
pub type LPDIEFFECTINFOA = *mut Struct_DIEFFECTINFOA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIEFFECTINFOW {
    pub dwSize: DWORD,
    pub guid: GUID,
    pub dwEffType: DWORD,
    pub dwStaticParams: DWORD,
    pub dwDynamicParams: DWORD,
    pub tszName: [WCHAR; 260usize],
}
impl ::std::default::Default for Struct_DIEFFECTINFOW {
    fn default() -> Struct_DIEFFECTINFOW { unsafe { ::std::mem::zeroed() } }
}
pub type DIEFFECTINFOW = Struct_DIEFFECTINFOW;
pub type LPDIEFFECTINFOW = *mut Struct_DIEFFECTINFOW;
pub type DIEFFECTINFO = DIEFFECTINFOA;
pub type LPDIEFFECTINFO = LPDIEFFECTINFOA;
pub type LPCDIEFFECTINFOA = *const DIEFFECTINFOA;
pub type LPCDIEFFECTINFOW = *const DIEFFECTINFOW;
pub type LPCDIEFFECTINFO = *const DIEFFECTINFO;
pub type LPDIENUMEFFECTSCALLBACKA =
    ::std::option::Option<extern "C" fn(arg1: LPCDIEFFECTINFOA, arg2: LPVOID)
                              -> BOOL>;
pub type LPDIENUMEFFECTSCALLBACKW =
    ::std::option::Option<extern "C" fn(arg1: LPCDIEFFECTINFOW, arg2: LPVOID)
                              -> BOOL>;
pub type LPDIENUMCREATEDEFFECTOBJECTSCALLBACK =
    ::std::option::Option<extern "C" fn
                              (arg1: LPDIRECTINPUTEFFECT, arg2: LPVOID)
                              -> BOOL>;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice2W {
    pub lpVtbl: *mut Struct_IDirectInputDevice2WVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDevice2W {
    fn default() -> Struct_IDirectInputDevice2W {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDevice2W = Struct_IDirectInputDevice2W;
pub type IDirectInputDevice2WVtbl = Struct_IDirectInputDevice2WVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice2WVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice2W,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice2W)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice2W)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice2W,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2W,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKW,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2W,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2W,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice2W)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDevice2W)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice2W,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2W,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2W,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDevice2W,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDevice2W,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2W,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEW,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2W,
                                                  arg1: LPDIDEVICEINSTANCEW)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice2W,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut IDirectInputDevice2W,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
    pub CreateEffect: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice2W,
                                                 arg1: *const GUID,
                                                 arg2: LPCDIEFFECT,
                                                 arg3:
                                                     *mut LPDIRECTINPUTEFFECT,
                                                 arg4: LPUNKNOWN) -> HRESULT>,
    pub EnumEffects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2W,
                                                arg1:
                                                    LPDIENUMEFFECTSCALLBACKW,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetEffectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2W,
                                                  arg1: LPDIEFFECTINFOW,
                                                  arg2: *const GUID)
                                                 -> HRESULT>,
    pub GetForceFeedbackState: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirectInputDevice2W,
                                                          arg1: LPDWORD)
                                                         -> HRESULT>,
    pub SendForceFeedbackCommand: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice2W,
                                                             arg1: DWORD)
                                                            -> HRESULT>,
    pub EnumCreatedEffectObjects: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice2W,
                                                             arg1:
                                                                 LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,
                                                             arg2: LPVOID,
                                                             arg3: DWORD)
                                                            -> HRESULT>,
    pub Escape: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice2W,
                                           arg1: LPDIEFFESCAPE) -> HRESULT>,
    pub Poll: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirectInputDevice2W)
                                        -> HRESULT>,
    pub SendDeviceData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice2W,
                                                   arg1: DWORD,
                                                   arg2:
                                                       LPCDIDEVICEOBJECTDATA,
                                                   arg3: LPDWORD, arg4: DWORD)
                                                  -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDevice2WVtbl {
    fn default() -> Struct_IDirectInputDevice2WVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICE2W = *mut Struct_IDirectInputDevice2W;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice2A {
    pub lpVtbl: *mut Struct_IDirectInputDevice2AVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDevice2A {
    fn default() -> Struct_IDirectInputDevice2A {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDevice2A = Struct_IDirectInputDevice2A;
pub type IDirectInputDevice2AVtbl = Struct_IDirectInputDevice2AVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice2AVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice2A,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice2A)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice2A)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice2A,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2A,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKA,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2A,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2A,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice2A)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDevice2A)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice2A,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2A,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2A,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDevice2A,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDevice2A,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2A,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEA,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2A,
                                                  arg1: LPDIDEVICEINSTANCEA)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice2A,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut IDirectInputDevice2A,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
    pub CreateEffect: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice2A,
                                                 arg1: *const GUID,
                                                 arg2: LPCDIEFFECT,
                                                 arg3:
                                                     *mut LPDIRECTINPUTEFFECT,
                                                 arg4: LPUNKNOWN) -> HRESULT>,
    pub EnumEffects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice2A,
                                                arg1:
                                                    LPDIENUMEFFECTSCALLBACKA,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetEffectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice2A,
                                                  arg1: LPDIEFFECTINFOA,
                                                  arg2: *const GUID)
                                                 -> HRESULT>,
    pub GetForceFeedbackState: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirectInputDevice2A,
                                                          arg1: LPDWORD)
                                                         -> HRESULT>,
    pub SendForceFeedbackCommand: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice2A,
                                                             arg1: DWORD)
                                                            -> HRESULT>,
    pub EnumCreatedEffectObjects: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice2A,
                                                             arg1:
                                                                 LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,
                                                             arg2: LPVOID,
                                                             arg3: DWORD)
                                                            -> HRESULT>,
    pub Escape: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice2A,
                                           arg1: LPDIEFFESCAPE) -> HRESULT>,
    pub Poll: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirectInputDevice2A)
                                        -> HRESULT>,
    pub SendDeviceData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice2A,
                                                   arg1: DWORD,
                                                   arg2:
                                                       LPCDIDEVICEOBJECTDATA,
                                                   arg3: LPDWORD, arg4: DWORD)
                                                  -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDevice2AVtbl {
    fn default() -> Struct_IDirectInputDevice2AVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICE2A = *mut Struct_IDirectInputDevice2A;
pub type LPDIRECTINPUTDEVICE2 = *mut Struct_IDirectInputDevice2A;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice7W {
    pub lpVtbl: *mut Struct_IDirectInputDevice7WVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDevice7W {
    fn default() -> Struct_IDirectInputDevice7W {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDevice7W = Struct_IDirectInputDevice7W;
pub type IDirectInputDevice7WVtbl = Struct_IDirectInputDevice7WVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice7WVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice7W,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice7W)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice7W)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice7W,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7W,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKW,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7W,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7W,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice7W)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDevice7W)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice7W,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7W,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7W,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDevice7W,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDevice7W,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7W,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEW,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7W,
                                                  arg1: LPDIDEVICEINSTANCEW)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice7W,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut IDirectInputDevice7W,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
    pub CreateEffect: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice7W,
                                                 arg1: *const GUID,
                                                 arg2: LPCDIEFFECT,
                                                 arg3:
                                                     *mut LPDIRECTINPUTEFFECT,
                                                 arg4: LPUNKNOWN) -> HRESULT>,
    pub EnumEffects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7W,
                                                arg1:
                                                    LPDIENUMEFFECTSCALLBACKW,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetEffectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7W,
                                                  arg1: LPDIEFFECTINFOW,
                                                  arg2: *const GUID)
                                                 -> HRESULT>,
    pub GetForceFeedbackState: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirectInputDevice7W,
                                                          arg1: LPDWORD)
                                                         -> HRESULT>,
    pub SendForceFeedbackCommand: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice7W,
                                                             arg1: DWORD)
                                                            -> HRESULT>,
    pub EnumCreatedEffectObjects: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice7W,
                                                             arg1:
                                                                 LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,
                                                             arg2: LPVOID,
                                                             arg3: DWORD)
                                                            -> HRESULT>,
    pub Escape: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice7W,
                                           arg1: LPDIEFFESCAPE) -> HRESULT>,
    pub Poll: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirectInputDevice7W)
                                        -> HRESULT>,
    pub SendDeviceData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice7W,
                                                   arg1: DWORD,
                                                   arg2:
                                                       LPCDIDEVICEOBJECTDATA,
                                                   arg3: LPDWORD, arg4: DWORD)
                                                  -> HRESULT>,
    pub EnumEffectsInFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice7W,
                                                      arg1: LPCWSTR,
                                                      arg2:
                                                          LPDIENUMEFFECTSINFILECALLBACK,
                                                      arg3: LPVOID,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
    pub WriteEffectToFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice7W,
                                                      arg1: LPCWSTR,
                                                      arg2: DWORD,
                                                      arg3: LPDIFILEEFFECT,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDevice7WVtbl {
    fn default() -> Struct_IDirectInputDevice7WVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICE7W = *mut Struct_IDirectInputDevice7W;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice7A {
    pub lpVtbl: *mut Struct_IDirectInputDevice7AVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDevice7A {
    fn default() -> Struct_IDirectInputDevice7A {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDevice7A = Struct_IDirectInputDevice7A;
pub type IDirectInputDevice7AVtbl = Struct_IDirectInputDevice7AVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice7AVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice7A,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice7A)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice7A)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice7A,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7A,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKA,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7A,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7A,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice7A)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDevice7A)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice7A,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7A,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7A,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDevice7A,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDevice7A,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7A,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEA,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7A,
                                                  arg1: LPDIDEVICEINSTANCEA)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice7A,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut IDirectInputDevice7A,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
    pub CreateEffect: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice7A,
                                                 arg1: *const GUID,
                                                 arg2: LPCDIEFFECT,
                                                 arg3:
                                                     *mut LPDIRECTINPUTEFFECT,
                                                 arg4: LPUNKNOWN) -> HRESULT>,
    pub EnumEffects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice7A,
                                                arg1:
                                                    LPDIENUMEFFECTSCALLBACKA,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetEffectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice7A,
                                                  arg1: LPDIEFFECTINFOA,
                                                  arg2: *const GUID)
                                                 -> HRESULT>,
    pub GetForceFeedbackState: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirectInputDevice7A,
                                                          arg1: LPDWORD)
                                                         -> HRESULT>,
    pub SendForceFeedbackCommand: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice7A,
                                                             arg1: DWORD)
                                                            -> HRESULT>,
    pub EnumCreatedEffectObjects: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice7A,
                                                             arg1:
                                                                 LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,
                                                             arg2: LPVOID,
                                                             arg3: DWORD)
                                                            -> HRESULT>,
    pub Escape: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice7A,
                                           arg1: LPDIEFFESCAPE) -> HRESULT>,
    pub Poll: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirectInputDevice7A)
                                        -> HRESULT>,
    pub SendDeviceData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice7A,
                                                   arg1: DWORD,
                                                   arg2:
                                                       LPCDIDEVICEOBJECTDATA,
                                                   arg3: LPDWORD, arg4: DWORD)
                                                  -> HRESULT>,
    pub EnumEffectsInFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice7A,
                                                      arg1: LPCSTR,
                                                      arg2:
                                                          LPDIENUMEFFECTSINFILECALLBACK,
                                                      arg3: LPVOID,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
    pub WriteEffectToFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice7A,
                                                      arg1: LPCSTR,
                                                      arg2: DWORD,
                                                      arg3: LPDIFILEEFFECT,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDevice7AVtbl {
    fn default() -> Struct_IDirectInputDevice7AVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICE7A = *mut Struct_IDirectInputDevice7A;
pub type LPDIRECTINPUTDEVICE7 = *mut Struct_IDirectInputDevice7A;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice8W {
    pub lpVtbl: *mut Struct_IDirectInputDevice8WVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDevice8W {
    fn default() -> Struct_IDirectInputDevice8W {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDevice8W = Struct_IDirectInputDevice8W;
pub type IDirectInputDevice8WVtbl = Struct_IDirectInputDevice8WVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice8WVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8W,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice8W)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice8W)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice8W,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8W,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKW,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8W,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8W,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice8W)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDevice8W)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8W,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8W,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8W,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDevice8W,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDevice8W,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8W,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEW,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8W,
                                                  arg1: LPDIDEVICEINSTANCEW)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice8W,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut IDirectInputDevice8W,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
    pub CreateEffect: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice8W,
                                                 arg1: *const GUID,
                                                 arg2: LPCDIEFFECT,
                                                 arg3:
                                                     *mut LPDIRECTINPUTEFFECT,
                                                 arg4: LPUNKNOWN) -> HRESULT>,
    pub EnumEffects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8W,
                                                arg1:
                                                    LPDIENUMEFFECTSCALLBACKW,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetEffectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8W,
                                                  arg1: LPDIEFFECTINFOW,
                                                  arg2: *const GUID)
                                                 -> HRESULT>,
    pub GetForceFeedbackState: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirectInputDevice8W,
                                                          arg1: LPDWORD)
                                                         -> HRESULT>,
    pub SendForceFeedbackCommand: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice8W,
                                                             arg1: DWORD)
                                                            -> HRESULT>,
    pub EnumCreatedEffectObjects: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice8W,
                                                             arg1:
                                                                 LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,
                                                             arg2: LPVOID,
                                                             arg3: DWORD)
                                                            -> HRESULT>,
    pub Escape: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice8W,
                                           arg1: LPDIEFFESCAPE) -> HRESULT>,
    pub Poll: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirectInputDevice8W)
                                        -> HRESULT>,
    pub SendDeviceData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8W,
                                                   arg1: DWORD,
                                                   arg2:
                                                       LPCDIDEVICEOBJECTDATA,
                                                   arg3: LPDWORD, arg4: DWORD)
                                                  -> HRESULT>,
    pub EnumEffectsInFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice8W,
                                                      arg1: LPCWSTR,
                                                      arg2:
                                                          LPDIENUMEFFECTSINFILECALLBACK,
                                                      arg3: LPVOID,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
    pub WriteEffectToFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice8W,
                                                      arg1: LPCWSTR,
                                                      arg2: DWORD,
                                                      arg3: LPDIFILEEFFECT,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
    pub BuildActionMap: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8W,
                                                   arg1: LPDIACTIONFORMATW,
                                                   arg2: LPCWSTR, arg3: DWORD)
                                                  -> HRESULT>,
    pub SetActionMap: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice8W,
                                                 arg1: LPDIACTIONFORMATW,
                                                 arg2: LPCWSTR, arg3: DWORD)
                                                -> HRESULT>,
    pub GetImageInfo: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice8W,
                                                 arg1:
                                                     LPDIDEVICEIMAGEINFOHEADERW)
                                                -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDevice8WVtbl {
    fn default() -> Struct_IDirectInputDevice8WVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICE8W = *mut Struct_IDirectInputDevice8W;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice8A {
    pub lpVtbl: *mut Struct_IDirectInputDevice8AVtbl,
}
impl ::std::default::Default for Struct_IDirectInputDevice8A {
    fn default() -> Struct_IDirectInputDevice8A {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirectInputDevice8A = Struct_IDirectInputDevice8A;
pub type IDirectInputDevice8AVtbl = Struct_IDirectInputDevice8AVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputDevice8AVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8A,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice8A)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice8A)
                                           -> ULONG>,
    pub GetCapabilities: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice8A,
                                                    arg1: LPDIDEVCAPS)
                                                   -> HRESULT>,
    pub EnumObjects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8A,
                                                arg1:
                                                    LPDIENUMDEVICEOBJECTSCALLBACKA,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8A,
                                                arg1: *const GUID,
                                                arg2: LPDIPROPHEADER)
                                               -> HRESULT>,
    pub SetProperty: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8A,
                                                arg1: *const GUID,
                                                arg2: LPCDIPROPHEADER)
                                               -> HRESULT>,
    pub Acquire: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInputDevice8A)
                                           -> HRESULT>,
    pub Unacquire: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirectInputDevice8A)
                                             -> HRESULT>,
    pub GetDeviceState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8A,
                                                   arg1: DWORD, arg2: LPVOID)
                                                  -> HRESULT>,
    pub GetDeviceData: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8A,
                                                  arg1: DWORD,
                                                  arg2: LPDIDEVICEOBJECTDATA,
                                                  arg3: LPDWORD, arg4: DWORD)
                                                 -> HRESULT>,
    pub SetDataFormat: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8A,
                                                  arg1: LPCDIDATAFORMAT)
                                                 -> HRESULT>,
    pub SetEventNotification: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirectInputDevice8A,
                                                         arg1: HANDLE)
                                                        -> HRESULT>,
    pub SetCooperativeLevel: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirectInputDevice8A,
                                                        arg1: HWND,
                                                        arg2: DWORD)
                                                       -> HRESULT>,
    pub GetObjectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8A,
                                                  arg1:
                                                      LPDIDEVICEOBJECTINSTANCEA,
                                                  arg2: DWORD, arg3: DWORD)
                                                 -> HRESULT>,
    pub GetDeviceInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8A,
                                                  arg1: LPDIDEVICEINSTANCEA)
                                                 -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirectInputDevice8A,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut IDirectInputDevice8A,
                                               arg1: HINSTANCE, arg2: DWORD,
                                               arg3: *const GUID) -> HRESULT>,
    pub CreateEffect: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice8A,
                                                 arg1: *const GUID,
                                                 arg2: LPCDIEFFECT,
                                                 arg3:
                                                     *mut LPDIRECTINPUTEFFECT,
                                                 arg4: LPUNKNOWN) -> HRESULT>,
    pub EnumEffects: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirectInputDevice8A,
                                                arg1:
                                                    LPDIENUMEFFECTSCALLBACKA,
                                                arg2: LPVOID, arg3: DWORD)
                                               -> HRESULT>,
    pub GetEffectInfo: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirectInputDevice8A,
                                                  arg1: LPDIEFFECTINFOA,
                                                  arg2: *const GUID)
                                                 -> HRESULT>,
    pub GetForceFeedbackState: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirectInputDevice8A,
                                                          arg1: LPDWORD)
                                                         -> HRESULT>,
    pub SendForceFeedbackCommand: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice8A,
                                                             arg1: DWORD)
                                                            -> HRESULT>,
    pub EnumCreatedEffectObjects: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirectInputDevice8A,
                                                             arg1:
                                                                 LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,
                                                             arg2: LPVOID,
                                                             arg3: DWORD)
                                                            -> HRESULT>,
    pub Escape: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirectInputDevice8A,
                                           arg1: LPDIEFFESCAPE) -> HRESULT>,
    pub Poll: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirectInputDevice8A)
                                        -> HRESULT>,
    pub SendDeviceData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8A,
                                                   arg1: DWORD,
                                                   arg2:
                                                       LPCDIDEVICEOBJECTDATA,
                                                   arg3: LPDWORD, arg4: DWORD)
                                                  -> HRESULT>,
    pub EnumEffectsInFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice8A,
                                                      arg1: LPCSTR,
                                                      arg2:
                                                          LPDIENUMEFFECTSINFILECALLBACK,
                                                      arg3: LPVOID,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
    pub WriteEffectToFile: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirectInputDevice8A,
                                                      arg1: LPCSTR,
                                                      arg2: DWORD,
                                                      arg3: LPDIFILEEFFECT,
                                                      arg4: DWORD)
                                                     -> HRESULT>,
    pub BuildActionMap: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirectInputDevice8A,
                                                   arg1: LPDIACTIONFORMATA,
                                                   arg2: LPCSTR, arg3: DWORD)
                                                  -> HRESULT>,
    pub SetActionMap: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice8A,
                                                 arg1: LPDIACTIONFORMATA,
                                                 arg2: LPCSTR, arg3: DWORD)
                                                -> HRESULT>,
    pub GetImageInfo: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirectInputDevice8A,
                                                 arg1:
                                                     LPDIDEVICEIMAGEINFOHEADERA)
                                                -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputDevice8AVtbl {
    fn default() -> Struct_IDirectInputDevice8AVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTDEVICE8A = *mut Struct_IDirectInputDevice8A;
pub type LPDIRECTINPUTDEVICE8 = *mut Struct_IDirectInputDevice8A;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIMOUSESTATE {
    pub lX: LONG,
    pub lY: LONG,
    pub lZ: LONG,
    pub rgbButtons: [BYTE; 4usize],
}
impl ::std::default::Default for Struct__DIMOUSESTATE {
    fn default() -> Struct__DIMOUSESTATE { unsafe { ::std::mem::zeroed() } }
}
pub type DIMOUSESTATE = Struct__DIMOUSESTATE;
pub type LPDIMOUSESTATE = *mut Struct__DIMOUSESTATE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__DIMOUSESTATE2 {
    pub lX: LONG,
    pub lY: LONG,
    pub lZ: LONG,
    pub rgbButtons: [BYTE; 8usize],
}
impl ::std::default::Default for Struct__DIMOUSESTATE2 {
    fn default() -> Struct__DIMOUSESTATE2 { unsafe { ::std::mem::zeroed() } }
}
pub type DIMOUSESTATE2 = Struct__DIMOUSESTATE2;
pub type LPDIMOUSESTATE2 = *mut Struct__DIMOUSESTATE2;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIJOYSTATE {
    pub lX: LONG,
    pub lY: LONG,
    pub lZ: LONG,
    pub lRx: LONG,
    pub lRy: LONG,
    pub lRz: LONG,
    pub rglSlider: [LONG; 2usize],
    pub rgdwPOV: [DWORD; 4usize],
    pub rgbButtons: [BYTE; 32usize],
}
impl ::std::default::Default for Struct_DIJOYSTATE {
    fn default() -> Struct_DIJOYSTATE { unsafe { ::std::mem::zeroed() } }
}
pub type DIJOYSTATE = Struct_DIJOYSTATE;
pub type LPDIJOYSTATE = *mut Struct_DIJOYSTATE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_DIJOYSTATE2 {
    pub lX: LONG,
    pub lY: LONG,
    pub lZ: LONG,
    pub lRx: LONG,
    pub lRy: LONG,
    pub lRz: LONG,
    pub rglSlider: [LONG; 2usize],
    pub rgdwPOV: [DWORD; 4usize],
    pub rgbButtons: [BYTE; 128usize],
    pub lVX: LONG,
    pub lVY: LONG,
    pub lVZ: LONG,
    pub lVRx: LONG,
    pub lVRy: LONG,
    pub lVRz: LONG,
    pub rglVSlider: [LONG; 2usize],
    pub lAX: LONG,
    pub lAY: LONG,
    pub lAZ: LONG,
    pub lARx: LONG,
    pub lARy: LONG,
    pub lARz: LONG,
    pub rglASlider: [LONG; 2usize],
    pub lFX: LONG,
    pub lFY: LONG,
    pub lFZ: LONG,
    pub lFRx: LONG,
    pub lFRy: LONG,
    pub lFRz: LONG,
    pub rglFSlider: [LONG; 2usize],
}
impl ::std::default::Default for Struct_DIJOYSTATE2 {
    fn default() -> Struct_DIJOYSTATE2 { unsafe { ::std::mem::zeroed() } }
}
pub type DIJOYSTATE2 = Struct_DIJOYSTATE2;
pub type LPDIJOYSTATE2 = *mut Struct_DIJOYSTATE2;
pub type LPDIENUMDEVICESCALLBACKA =
    ::std::option::Option<extern "C" fn
                              (arg1: LPCDIDEVICEINSTANCEA, arg2: LPVOID)
                              -> BOOL>;
pub type LPDIENUMDEVICESCALLBACKW =
    ::std::option::Option<extern "C" fn
                              (arg1: LPCDIDEVICEINSTANCEW, arg2: LPVOID)
                              -> BOOL>;
pub type LPDICONFIGUREDEVICESCALLBACK =
    ::std::option::Option<extern "C" fn(arg1: *mut IUnknown, arg2: LPVOID)
                              -> BOOL>;
pub type LPDIENUMDEVICESBYSEMANTICSCBA =
    ::std::option::Option<extern "C" fn
                              (arg1: LPCDIDEVICEINSTANCEA,
                               arg2: LPDIRECTINPUTDEVICE8A, arg3: DWORD,
                               arg4: DWORD, arg5: LPVOID) -> BOOL>;
pub type LPDIENUMDEVICESBYSEMANTICSCBW =
    ::std::option::Option<extern "C" fn
                              (arg1: LPCDIDEVICEINSTANCEW,
                               arg2: LPDIRECTINPUTDEVICE8W, arg3: DWORD,
                               arg4: DWORD, arg5: LPVOID) -> BOOL>;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputW {
    pub lpVtbl: *mut Struct_IDirectInputWVtbl,
}
impl ::std::default::Default for Struct_IDirectInputW {
    fn default() -> Struct_IDirectInputW { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInputW = Struct_IDirectInputW;
pub type IDirectInputWVtbl = Struct_IDirectInputWVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputWVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInputW,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInputW)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut IDirectInputW)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInputW,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICEW,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInputW,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKW,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInputW,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInputW,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInputW,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputWVtbl {
    fn default() -> Struct_IDirectInputWVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTW = *mut Struct_IDirectInputW;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputA {
    pub lpVtbl: *mut Struct_IDirectInputAVtbl,
}
impl ::std::default::Default for Struct_IDirectInputA {
    fn default() -> Struct_IDirectInputA { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInputA = Struct_IDirectInputA;
pub type IDirectInputAVtbl = Struct_IDirectInputAVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInputAVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInputA,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInputA)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut IDirectInputA)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInputA,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICEA,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInputA,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKA,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInputA,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInputA,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInputA,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInputAVtbl {
    fn default() -> Struct_IDirectInputAVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUTA = *mut Struct_IDirectInputA;
pub type LPDIRECTINPUT = *mut Struct_IDirectInputA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput2W {
    pub lpVtbl: *mut Struct_IDirectInput2WVtbl,
}
impl ::std::default::Default for Struct_IDirectInput2W {
    fn default() -> Struct_IDirectInput2W { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInput2W = Struct_IDirectInput2W;
pub type IDirectInput2WVtbl = Struct_IDirectInput2WVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput2WVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput2W,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInput2W)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInput2W)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInput2W,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICEW,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInput2W,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKW,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput2W,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput2W,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput2W,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
    pub FindDevice: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput2W,
                                               arg1: *const GUID,
                                               arg2: LPCWSTR, arg3: LPGUID)
                                              -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInput2WVtbl {
    fn default() -> Struct_IDirectInput2WVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUT2W = *mut Struct_IDirectInput2W;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput2A {
    pub lpVtbl: *mut Struct_IDirectInput2AVtbl,
}
impl ::std::default::Default for Struct_IDirectInput2A {
    fn default() -> Struct_IDirectInput2A { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInput2A = Struct_IDirectInput2A;
pub type IDirectInput2AVtbl = Struct_IDirectInput2AVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput2AVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput2A,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInput2A)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInput2A)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInput2A,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICEA,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInput2A,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKA,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput2A,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput2A,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput2A,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
    pub FindDevice: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput2A,
                                               arg1: *const GUID,
                                               arg2: LPCSTR, arg3: LPGUID)
                                              -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInput2AVtbl {
    fn default() -> Struct_IDirectInput2AVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUT2A = *mut Struct_IDirectInput2A;
pub type LPDIRECTINPUT2 = *mut Struct_IDirectInput2A;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput7W {
    pub lpVtbl: *mut Struct_IDirectInput7WVtbl,
}
impl ::std::default::Default for Struct_IDirectInput7W {
    fn default() -> Struct_IDirectInput7W { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInput7W = Struct_IDirectInput7W;
pub type IDirectInput7WVtbl = Struct_IDirectInput7WVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput7WVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput7W,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInput7W)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInput7W)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInput7W,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICEW,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInput7W,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKW,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput7W,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput7W,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput7W,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
    pub FindDevice: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput7W,
                                               arg1: *const GUID,
                                               arg2: LPCWSTR, arg3: LPGUID)
                                              -> HRESULT>,
    pub CreateDeviceEx: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput7W,
                                                   arg1: *const GUID,
                                                   arg2: *const IID,
                                                   arg3: *mut LPVOID,
                                                   arg4: LPUNKNOWN)
                                                  -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInput7WVtbl {
    fn default() -> Struct_IDirectInput7WVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUT7W = *mut Struct_IDirectInput7W;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput7A {
    pub lpVtbl: *mut Struct_IDirectInput7AVtbl,
}
impl ::std::default::Default for Struct_IDirectInput7A {
    fn default() -> Struct_IDirectInput7A { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInput7A = Struct_IDirectInput7A;
pub type IDirectInput7AVtbl = Struct_IDirectInput7AVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput7AVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput7A,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInput7A)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInput7A)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInput7A,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICEA,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInput7A,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKA,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput7A,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput7A,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput7A,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
    pub FindDevice: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput7A,
                                               arg1: *const GUID,
                                               arg2: LPCSTR, arg3: LPGUID)
                                              -> HRESULT>,
    pub CreateDeviceEx: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput7A,
                                                   arg1: *const GUID,
                                                   arg2: *const IID,
                                                   arg3: *mut LPVOID,
                                                   arg4: LPUNKNOWN)
                                                  -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInput7AVtbl {
    fn default() -> Struct_IDirectInput7AVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUT7A = *mut Struct_IDirectInput7A;
pub type LPDIRECTINPUT7 = *mut Struct_IDirectInput7A;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput8W {
    pub lpVtbl: *mut Struct_IDirectInput8WVtbl,
}
impl ::std::default::Default for Struct_IDirectInput8W {
    fn default() -> Struct_IDirectInput8W { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInput8W = Struct_IDirectInput8W;
pub type IDirectInput8WVtbl = Struct_IDirectInput8WVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput8WVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput8W,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInput8W)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInput8W)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInput8W,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICE8W,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInput8W,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKW,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput8W,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput8W,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput8W,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
    pub FindDevice: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput8W,
                                               arg1: *const GUID,
                                               arg2: LPCWSTR, arg3: LPGUID)
                                              -> HRESULT>,
    pub EnumDevicesBySemantics: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirectInput8W,
                                                           arg1: LPCWSTR,
                                                           arg2:
                                                               LPDIACTIONFORMATW,
                                                           arg3:
                                                               LPDIENUMDEVICESBYSEMANTICSCBW,
                                                           arg4: LPVOID,
                                                           arg5: DWORD)
                                                          -> HRESULT>,
    pub ConfigureDevices: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirectInput8W,
                                                     arg1:
                                                         LPDICONFIGUREDEVICESCALLBACK,
                                                     arg2:
                                                         LPDICONFIGUREDEVICESPARAMSW,
                                                     arg3: DWORD,
                                                     arg4: LPVOID)
                                                    -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInput8WVtbl {
    fn default() -> Struct_IDirectInput8WVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUT8W = *mut Struct_IDirectInput8W;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput8A {
    pub lpVtbl: *mut Struct_IDirectInput8AVtbl,
}
impl ::std::default::Default for Struct_IDirectInput8A {
    fn default() -> Struct_IDirectInput8A { unsafe { ::std::mem::zeroed() } }
}
pub type IDirectInput8A = Struct_IDirectInput8A;
pub type IDirectInput8AVtbl = Struct_IDirectInput8AVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirectInput8AVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirectInput8A,
                                                   riid: *const IID,
                                                   ppvObj: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirectInput8A)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirectInput8A)
                                           -> ULONG>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirectInput8A,
                                                 arg1: *const GUID,
                                                 arg2:
                                                     *mut LPDIRECTINPUTDEVICE8A,
                                                 arg3: LPUNKNOWN) -> HRESULT>,
    pub EnumDevices: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirectInput8A,
                                                arg1: DWORD,
                                                arg2:
                                                    LPDIENUMDEVICESCALLBACKA,
                                                arg3: LPVOID, arg4: DWORD)
                                               -> HRESULT>,
    pub GetDeviceStatus: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput8A,
                                                    arg1: *const GUID)
                                                   -> HRESULT>,
    pub RunControlPanel: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirectInput8A,
                                                    arg1: HWND, arg2: DWORD)
                                                   -> HRESULT>,
    pub Initialize: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput8A,
                                               arg1: HINSTANCE, arg2: DWORD)
                                              -> HRESULT>,
    pub FindDevice: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirectInput8A,
                                               arg1: *const GUID,
                                               arg2: LPCSTR, arg3: LPGUID)
                                              -> HRESULT>,
    pub EnumDevicesBySemantics: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirectInput8A,
                                                           arg1: LPCSTR,
                                                           arg2:
                                                               LPDIACTIONFORMATA,
                                                           arg3:
                                                               LPDIENUMDEVICESBYSEMANTICSCBA,
                                                           arg4: LPVOID,
                                                           arg5: DWORD)
                                                          -> HRESULT>,
    pub ConfigureDevices: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirectInput8A,
                                                     arg1:
                                                         LPDICONFIGUREDEVICESCALLBACK,
                                                     arg2:
                                                         LPDICONFIGUREDEVICESPARAMSA,
                                                     arg3: DWORD,
                                                     arg4: LPVOID)
                                                    -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirectInput8AVtbl {
    fn default() -> Struct_IDirectInput8AVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECTINPUT8A = *mut Struct_IDirectInput8A;
pub type LPDIRECTINPUT8 = *mut Struct_IDirectInput8A;
pub type LPFNSHOWJOYCPL =
    ::std::option::Option<extern "C" fn(hWnd: HWND) -> ()>;
extern "C" {
    pub static CLSID_DirectInput: GUID;
    pub static CLSID_DirectInputDevice: GUID;
    pub static CLSID_DirectInput8: GUID;
    pub static CLSID_DirectInputDevice8: GUID;
    pub static IID_IDirectInputA: GUID;
    pub static IID_IDirectInputW: GUID;
    pub static IID_IDirectInput2A: GUID;
    pub static IID_IDirectInput2W: GUID;
    pub static IID_IDirectInput7A: GUID;
    pub static IID_IDirectInput7W: GUID;
    pub static IID_IDirectInput8A: GUID;
    pub static IID_IDirectInput8W: GUID;
    pub static IID_IDirectInputDeviceA: GUID;
    pub static IID_IDirectInputDeviceW: GUID;
    pub static IID_IDirectInputDevice2A: GUID;
    pub static IID_IDirectInputDevice2W: GUID;
    pub static IID_IDirectInputDevice7A: GUID;
    pub static IID_IDirectInputDevice7W: GUID;
    pub static IID_IDirectInputDevice8A: GUID;
    pub static IID_IDirectInputDevice8W: GUID;
    pub static IID_IDirectInputEffect: GUID;
    pub static GUID_XAxis: GUID;
    pub static GUID_YAxis: GUID;
    pub static GUID_ZAxis: GUID;
    pub static GUID_RxAxis: GUID;
    pub static GUID_RyAxis: GUID;
    pub static GUID_RzAxis: GUID;
    pub static GUID_Slider: GUID;
    pub static GUID_Button: GUID;
    pub static GUID_Key: GUID;
    pub static GUID_POV: GUID;
    pub static GUID_Unknown: GUID;
    pub static GUID_SysMouse: GUID;
    pub static GUID_SysKeyboard: GUID;
    pub static GUID_Joystick: GUID;
    pub static GUID_SysMouseEm: GUID;
    pub static GUID_SysMouseEm2: GUID;
    pub static GUID_SysKeyboardEm: GUID;
    pub static GUID_SysKeyboardEm2: GUID;
    pub static GUID_ConstantForce: GUID;
    pub static GUID_RampForce: GUID;
    pub static GUID_Square: GUID;
    pub static GUID_Sine: GUID;
    pub static GUID_Triangle: GUID;
    pub static GUID_SawtoothUp: GUID;
    pub static GUID_SawtoothDown: GUID;
    pub static GUID_Spring: GUID;
    pub static GUID_Damper: GUID;
    pub static GUID_Inertia: GUID;
    pub static GUID_Friction: GUID;
    pub static GUID_CustomForce: GUID;
    pub static c_dfDIMouse: DIDATAFORMAT;
    pub static c_dfDIMouse2: DIDATAFORMAT;
    pub static c_dfDIKeyboard: DIDATAFORMAT;
    pub static c_dfDIJoystick: DIDATAFORMAT;
    pub static c_dfDIJoystick2: DIDATAFORMAT;
}
extern "C" {
    pub fn DirectInput8Create(hinst: HINSTANCE, dwVersion: DWORD,
                              riidltf: *const IID, ppvOut: *mut LPVOID,
                              punkOuter: LPUNKNOWN) -> HRESULT;
    pub fn joyConfigChanged(dwFlags: DWORD) -> MMRESULT;
    pub fn ShowJoyCPL(hWnd: HWND) -> ();
}
