/* automatically generated by rust-bindgen */

pub type ID3D11DeviceChild = Struct_ID3D11DeviceChild;
pub type ID3D11DepthStencilState = Struct_ID3D11DepthStencilState;
pub type ID3D11BlendState = Struct_ID3D11BlendState;
pub type ID3D11RasterizerState = Struct_ID3D11RasterizerState;
pub type ID3D11Resource = Struct_ID3D11Resource;
pub type ID3D11Buffer = Struct_ID3D11Buffer;
pub type ID3D11Texture1D = Struct_ID3D11Texture1D;
pub type ID3D11Texture2D = Struct_ID3D11Texture2D;
pub type ID3D11Texture3D = Struct_ID3D11Texture3D;
pub type ID3D11View = Struct_ID3D11View;
pub type ID3D11ShaderResourceView = Struct_ID3D11ShaderResourceView;
pub type ID3D11RenderTargetView = Struct_ID3D11RenderTargetView;
pub type ID3D11DepthStencilView = Struct_ID3D11DepthStencilView;
pub type ID3D11UnorderedAccessView = Struct_ID3D11UnorderedAccessView;
pub type ID3D11VertexShader = Struct_ID3D11VertexShader;
pub type ID3D11HullShader = Struct_ID3D11HullShader;
pub type ID3D11DomainShader = Struct_ID3D11DomainShader;
pub type ID3D11GeometryShader = Struct_ID3D11GeometryShader;
pub type ID3D11PixelShader = Struct_ID3D11PixelShader;
pub type ID3D11ComputeShader = Struct_ID3D11ComputeShader;
pub type ID3D11InputLayout = Struct_ID3D11InputLayout;
pub type ID3D11SamplerState = Struct_ID3D11SamplerState;
pub type ID3D11Asynchronous = Struct_ID3D11Asynchronous;
pub type ID3D11Query = Struct_ID3D11Query;
pub type ID3D11Predicate = Struct_ID3D11Predicate;
pub type ID3D11Counter = Struct_ID3D11Counter;
pub type ID3D11ClassInstance = Struct_ID3D11ClassInstance;
pub type ID3D11ClassLinkage = Struct_ID3D11ClassLinkage;
pub type ID3D11CommandList = Struct_ID3D11CommandList;
pub type ID3D11DeviceContext = Struct_ID3D11DeviceContext;
pub type ID3D11Device = Struct_ID3D11Device;
pub type Enum_D3D11_INPUT_CLASSIFICATION = ::libc::c_uint;
pub const D3D11_INPUT_PER_VERTEX_DATA: ::libc::c_uint = 0;
pub const D3D11_INPUT_PER_INSTANCE_DATA: ::libc::c_uint = 1;
pub type D3D11_INPUT_CLASSIFICATION = Enum_D3D11_INPUT_CLASSIFICATION;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_INPUT_ELEMENT_DESC {
    pub SemanticName: LPCSTR,
    pub SemanticIndex: UINT,
    pub Format: DXGI_FORMAT,
    pub InputSlot: UINT,
    pub AlignedByteOffset: UINT,
    pub InputSlotClass: D3D11_INPUT_CLASSIFICATION,
    pub InstanceDataStepRate: UINT,
}
impl ::std::default::Default for Struct_D3D11_INPUT_ELEMENT_DESC {
    fn default() -> Struct_D3D11_INPUT_ELEMENT_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_INPUT_ELEMENT_DESC = Struct_D3D11_INPUT_ELEMENT_DESC;
pub type Enum_D3D11_FILL_MODE = ::libc::c_uint;
pub const D3D11_FILL_WIREFRAME: ::libc::c_uint = 2;
pub const D3D11_FILL_SOLID: ::libc::c_uint = 3;
pub type D3D11_FILL_MODE = Enum_D3D11_FILL_MODE;
pub type D3D11_PRIMITIVE_TOPOLOGY = D3D_PRIMITIVE_TOPOLOGY;
pub type D3D11_PRIMITIVE = D3D_PRIMITIVE;
pub type Enum_D3D11_CULL_MODE = ::libc::c_uint;
pub const D3D11_CULL_NONE: ::libc::c_uint = 1;
pub const D3D11_CULL_FRONT: ::libc::c_uint = 2;
pub const D3D11_CULL_BACK: ::libc::c_uint = 3;
pub type D3D11_CULL_MODE = Enum_D3D11_CULL_MODE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_SO_DECLARATION_ENTRY {
    pub Stream: UINT,
    pub SemanticName: LPCSTR,
    pub SemanticIndex: UINT,
    pub StartComponent: BYTE,
    pub ComponentCount: BYTE,
    pub OutputSlot: BYTE,
}
impl ::std::default::Default for Struct_D3D11_SO_DECLARATION_ENTRY {
    fn default() -> Struct_D3D11_SO_DECLARATION_ENTRY {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SO_DECLARATION_ENTRY = Struct_D3D11_SO_DECLARATION_ENTRY;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_VIEWPORT {
    pub TopLeftX: FLOAT,
    pub TopLeftY: FLOAT,
    pub Width: FLOAT,
    pub Height: FLOAT,
    pub MinDepth: FLOAT,
    pub MaxDepth: FLOAT,
}
impl ::std::default::Default for Struct_D3D11_VIEWPORT {
    fn default() -> Struct_D3D11_VIEWPORT { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_VIEWPORT = Struct_D3D11_VIEWPORT;
pub type Enum_D3D11_RESOURCE_DIMENSION = ::libc::c_uint;
pub const D3D11_RESOURCE_DIMENSION_UNKNOWN: ::libc::c_uint = 0;
pub const D3D11_RESOURCE_DIMENSION_BUFFER: ::libc::c_uint = 1;
pub const D3D11_RESOURCE_DIMENSION_TEXTURE1D: ::libc::c_uint = 2;
pub const D3D11_RESOURCE_DIMENSION_TEXTURE2D: ::libc::c_uint = 3;
pub const D3D11_RESOURCE_DIMENSION_TEXTURE3D: ::libc::c_uint = 4;
pub type D3D11_RESOURCE_DIMENSION = Enum_D3D11_RESOURCE_DIMENSION;
pub type D3D11_SRV_DIMENSION = D3D_SRV_DIMENSION;
pub type Enum_D3D11_DSV_DIMENSION = ::libc::c_uint;
pub const D3D11_DSV_DIMENSION_UNKNOWN: ::libc::c_uint = 0;
pub const D3D11_DSV_DIMENSION_TEXTURE1D: ::libc::c_uint = 1;
pub const D3D11_DSV_DIMENSION_TEXTURE1DARRAY: ::libc::c_uint = 2;
pub const D3D11_DSV_DIMENSION_TEXTURE2D: ::libc::c_uint = 3;
pub const D3D11_DSV_DIMENSION_TEXTURE2DARRAY: ::libc::c_uint = 4;
pub const D3D11_DSV_DIMENSION_TEXTURE2DMS: ::libc::c_uint = 5;
pub const D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY: ::libc::c_uint = 6;
pub type D3D11_DSV_DIMENSION = Enum_D3D11_DSV_DIMENSION;
pub type Enum_D3D11_RTV_DIMENSION = ::libc::c_uint;
pub const D3D11_RTV_DIMENSION_UNKNOWN: ::libc::c_uint = 0;
pub const D3D11_RTV_DIMENSION_BUFFER: ::libc::c_uint = 1;
pub const D3D11_RTV_DIMENSION_TEXTURE1D: ::libc::c_uint = 2;
pub const D3D11_RTV_DIMENSION_TEXTURE1DARRAY: ::libc::c_uint = 3;
pub const D3D11_RTV_DIMENSION_TEXTURE2D: ::libc::c_uint = 4;
pub const D3D11_RTV_DIMENSION_TEXTURE2DARRAY: ::libc::c_uint = 5;
pub const D3D11_RTV_DIMENSION_TEXTURE2DMS: ::libc::c_uint = 6;
pub const D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY: ::libc::c_uint = 7;
pub const D3D11_RTV_DIMENSION_TEXTURE3D: ::libc::c_uint = 8;
pub type D3D11_RTV_DIMENSION = Enum_D3D11_RTV_DIMENSION;
pub type Enum_D3D11_UAV_DIMENSION = ::libc::c_uint;
pub const D3D11_UAV_DIMENSION_UNKNOWN: ::libc::c_uint = 0;
pub const D3D11_UAV_DIMENSION_BUFFER: ::libc::c_uint = 1;
pub const D3D11_UAV_DIMENSION_TEXTURE1D: ::libc::c_uint = 2;
pub const D3D11_UAV_DIMENSION_TEXTURE1DARRAY: ::libc::c_uint = 3;
pub const D3D11_UAV_DIMENSION_TEXTURE2D: ::libc::c_uint = 4;
pub const D3D11_UAV_DIMENSION_TEXTURE2DARRAY: ::libc::c_uint = 5;
pub const D3D11_UAV_DIMENSION_TEXTURE3D: ::libc::c_uint = 8;
pub type D3D11_UAV_DIMENSION = Enum_D3D11_UAV_DIMENSION;
pub type Enum_D3D11_USAGE = ::libc::c_uint;
pub const D3D11_USAGE_DEFAULT: ::libc::c_uint = 0;
pub const D3D11_USAGE_IMMUTABLE: ::libc::c_uint = 1;
pub const D3D11_USAGE_DYNAMIC: ::libc::c_uint = 2;
pub const D3D11_USAGE_STAGING: ::libc::c_uint = 3;
pub type D3D11_USAGE = Enum_D3D11_USAGE;
pub type Enum_D3D11_BIND_FLAG = ::libc::c_uint;
pub const D3D11_BIND_VERTEX_BUFFER: ::libc::c_uint = 1;
pub const D3D11_BIND_INDEX_BUFFER: ::libc::c_uint = 2;
pub const D3D11_BIND_CONSTANT_BUFFER: ::libc::c_uint = 4;
pub const D3D11_BIND_SHADER_RESOURCE: ::libc::c_uint = 8;
pub const D3D11_BIND_STREAM_OUTPUT: ::libc::c_uint = 16;
pub const D3D11_BIND_RENDER_TARGET: ::libc::c_uint = 32;
pub const D3D11_BIND_DEPTH_STENCIL: ::libc::c_uint = 64;
pub const D3D11_BIND_UNORDERED_ACCESS: ::libc::c_uint = 128;
pub type D3D11_BIND_FLAG = Enum_D3D11_BIND_FLAG;
pub type Enum_D3D11_CPU_ACCESS_FLAG = ::libc::c_uint;
pub const D3D11_CPU_ACCESS_WRITE: ::libc::c_uint = 65536;
pub const D3D11_CPU_ACCESS_READ: ::libc::c_uint = 131072;
pub type D3D11_CPU_ACCESS_FLAG = Enum_D3D11_CPU_ACCESS_FLAG;
pub type Enum_D3D11_RESOURCE_MISC_FLAG = ::libc::c_uint;
pub const D3D11_RESOURCE_MISC_GENERATE_MIPS: ::libc::c_uint = 1;
pub const D3D11_RESOURCE_MISC_SHARED: ::libc::c_uint = 2;
pub const D3D11_RESOURCE_MISC_TEXTURECUBE: ::libc::c_uint = 4;
pub const D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS: ::libc::c_uint = 16;
pub const D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS: ::libc::c_uint = 32;
pub const D3D11_RESOURCE_MISC_BUFFER_STRUCTURED: ::libc::c_uint = 64;
pub const D3D11_RESOURCE_MISC_RESOURCE_CLAMP: ::libc::c_uint = 128;
pub const D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX: ::libc::c_uint = 256;
pub const D3D11_RESOURCE_MISC_GDI_COMPATIBLE: ::libc::c_uint = 512;
pub type D3D11_RESOURCE_MISC_FLAG = Enum_D3D11_RESOURCE_MISC_FLAG;
pub type Enum_D3D11_MAP = ::libc::c_uint;
pub const D3D11_MAP_READ: ::libc::c_uint = 1;
pub const D3D11_MAP_WRITE: ::libc::c_uint = 2;
pub const D3D11_MAP_READ_WRITE: ::libc::c_uint = 3;
pub const D3D11_MAP_WRITE_DISCARD: ::libc::c_uint = 4;
pub const D3D11_MAP_WRITE_NO_OVERWRITE: ::libc::c_uint = 5;
pub type D3D11_MAP = Enum_D3D11_MAP;
pub type Enum_D3D11_MAP_FLAG = ::libc::c_uint;
pub const D3D11_MAP_FLAG_DO_NOT_WAIT: ::libc::c_uint = 1048576;
pub type D3D11_MAP_FLAG = Enum_D3D11_MAP_FLAG;
pub type Enum_D3D11_RAISE_FLAG = ::libc::c_uint;
pub const D3D11_RAISE_FLAG_DRIVER_INTERNAL_ERROR: ::libc::c_uint = 1;
pub type D3D11_RAISE_FLAG = Enum_D3D11_RAISE_FLAG;
pub type Enum_D3D11_CLEAR_FLAG = ::libc::c_uint;
pub const D3D11_CLEAR_DEPTH: ::libc::c_uint = 1;
pub const D3D11_CLEAR_STENCIL: ::libc::c_uint = 2;
pub type D3D11_CLEAR_FLAG = Enum_D3D11_CLEAR_FLAG;
pub type D3D11_RECT = RECT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_BOX {
    pub left: UINT,
    pub top: UINT,
    pub front: UINT,
    pub right: UINT,
    pub bottom: UINT,
    pub back: UINT,
}
impl ::std::default::Default for Struct_D3D11_BOX {
    fn default() -> Struct_D3D11_BOX { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_BOX = Struct_D3D11_BOX;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DeviceChildVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceChild,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11DeviceChild)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11DeviceChild)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11DeviceChild,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceChild,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceChild,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11DeviceChild,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11DeviceChildVtbl {
    fn default() -> Struct_ID3D11DeviceChildVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11DeviceChildVtbl = Struct_ID3D11DeviceChildVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DeviceChild {
    pub lpVtbl: *mut Struct_ID3D11DeviceChildVtbl,
}
impl ::std::default::Default for Struct_ID3D11DeviceChild {
    fn default() -> Struct_ID3D11DeviceChild {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type Enum_D3D11_COMPARISON_FUNC = ::libc::c_uint;
pub const D3D11_COMPARISON_NEVER: ::libc::c_uint = 1;
pub const D3D11_COMPARISON_LESS: ::libc::c_uint = 2;
pub const D3D11_COMPARISON_EQUAL: ::libc::c_uint = 3;
pub const D3D11_COMPARISON_LESS_EQUAL: ::libc::c_uint = 4;
pub const D3D11_COMPARISON_GREATER: ::libc::c_uint = 5;
pub const D3D11_COMPARISON_NOT_EQUAL: ::libc::c_uint = 6;
pub const D3D11_COMPARISON_GREATER_EQUAL: ::libc::c_uint = 7;
pub const D3D11_COMPARISON_ALWAYS: ::libc::c_uint = 8;
pub type D3D11_COMPARISON_FUNC = Enum_D3D11_COMPARISON_FUNC;
pub type Enum_D3D11_DEPTH_WRITE_MASK = ::libc::c_uint;
pub const D3D11_DEPTH_WRITE_MASK_ZERO: ::libc::c_uint = 0;
pub const D3D11_DEPTH_WRITE_MASK_ALL: ::libc::c_uint = 1;
pub type D3D11_DEPTH_WRITE_MASK = Enum_D3D11_DEPTH_WRITE_MASK;
pub type Enum_D3D11_STENCIL_OP = ::libc::c_uint;
pub const D3D11_STENCIL_OP_KEEP: ::libc::c_uint = 1;
pub const D3D11_STENCIL_OP_ZERO: ::libc::c_uint = 2;
pub const D3D11_STENCIL_OP_REPLACE: ::libc::c_uint = 3;
pub const D3D11_STENCIL_OP_INCR_SAT: ::libc::c_uint = 4;
pub const D3D11_STENCIL_OP_DECR_SAT: ::libc::c_uint = 5;
pub const D3D11_STENCIL_OP_INVERT: ::libc::c_uint = 6;
pub const D3D11_STENCIL_OP_INCR: ::libc::c_uint = 7;
pub const D3D11_STENCIL_OP_DECR: ::libc::c_uint = 8;
pub type D3D11_STENCIL_OP = Enum_D3D11_STENCIL_OP;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_DEPTH_STENCILOP_DESC {
    pub StencilFailOp: D3D11_STENCIL_OP,
    pub StencilDepthFailOp: D3D11_STENCIL_OP,
    pub StencilPassOp: D3D11_STENCIL_OP,
    pub StencilFunc: D3D11_COMPARISON_FUNC,
}
impl ::std::default::Default for Struct_D3D11_DEPTH_STENCILOP_DESC {
    fn default() -> Struct_D3D11_DEPTH_STENCILOP_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_DEPTH_STENCILOP_DESC = Struct_D3D11_DEPTH_STENCILOP_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_DEPTH_STENCIL_DESC {
    pub DepthEnable: BOOL,
    pub DepthWriteMask: D3D11_DEPTH_WRITE_MASK,
    pub DepthFunc: D3D11_COMPARISON_FUNC,
    pub StencilEnable: BOOL,
    pub StencilReadMask: UINT8,
    pub StencilWriteMask: UINT8,
    pub FrontFace: D3D11_DEPTH_STENCILOP_DESC,
    pub BackFace: D3D11_DEPTH_STENCILOP_DESC,
}
impl ::std::default::Default for Struct_D3D11_DEPTH_STENCIL_DESC {
    fn default() -> Struct_D3D11_DEPTH_STENCIL_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_DEPTH_STENCIL_DESC = Struct_D3D11_DEPTH_STENCIL_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DepthStencilStateVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DepthStencilState,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11DepthStencilState)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11DepthStencilState)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut ID3D11DepthStencilState,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DepthStencilState,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DepthStencilState,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11DepthStencilState,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11DepthStencilState,
                                            pDesc:
                                                *mut D3D11_DEPTH_STENCIL_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11DepthStencilStateVtbl {
    fn default() -> Struct_ID3D11DepthStencilStateVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11DepthStencilStateVtbl = Struct_ID3D11DepthStencilStateVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DepthStencilState {
    pub lpVtbl: *mut Struct_ID3D11DepthStencilStateVtbl,
}
impl ::std::default::Default for Struct_ID3D11DepthStencilState {
    fn default() -> Struct_ID3D11DepthStencilState {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type Enum_D3D11_BLEND = ::libc::c_uint;
pub const D3D11_BLEND_ZERO: ::libc::c_uint = 1;
pub const D3D11_BLEND_ONE: ::libc::c_uint = 2;
pub const D3D11_BLEND_SRC_COLOR: ::libc::c_uint = 3;
pub const D3D11_BLEND_INV_SRC_COLOR: ::libc::c_uint = 4;
pub const D3D11_BLEND_SRC_ALPHA: ::libc::c_uint = 5;
pub const D3D11_BLEND_INV_SRC_ALPHA: ::libc::c_uint = 6;
pub const D3D11_BLEND_DEST_ALPHA: ::libc::c_uint = 7;
pub const D3D11_BLEND_INV_DEST_ALPHA: ::libc::c_uint = 8;
pub const D3D11_BLEND_DEST_COLOR: ::libc::c_uint = 9;
pub const D3D11_BLEND_INV_DEST_COLOR: ::libc::c_uint = 10;
pub const D3D11_BLEND_SRC_ALPHA_SAT: ::libc::c_uint = 11;
pub const D3D11_BLEND_BLEND_FACTOR: ::libc::c_uint = 14;
pub const D3D11_BLEND_INV_BLEND_FACTOR: ::libc::c_uint = 15;
pub const D3D11_BLEND_SRC1_COLOR: ::libc::c_uint = 16;
pub const D3D11_BLEND_INV_SRC1_COLOR: ::libc::c_uint = 17;
pub const D3D11_BLEND_SRC1_ALPHA: ::libc::c_uint = 18;
pub const D3D11_BLEND_INV_SRC1_ALPHA: ::libc::c_uint = 19;
pub type D3D11_BLEND = Enum_D3D11_BLEND;
pub type Enum_D3D11_BLEND_OP = ::libc::c_uint;
pub const D3D11_BLEND_OP_ADD: ::libc::c_uint = 1;
pub const D3D11_BLEND_OP_SUBTRACT: ::libc::c_uint = 2;
pub const D3D11_BLEND_OP_REV_SUBTRACT: ::libc::c_uint = 3;
pub const D3D11_BLEND_OP_MIN: ::libc::c_uint = 4;
pub const D3D11_BLEND_OP_MAX: ::libc::c_uint = 5;
pub type D3D11_BLEND_OP = Enum_D3D11_BLEND_OP;
pub type Enum_D3D11_COLOR_WRITE_ENABLE = ::libc::c_uint;
pub const D3D11_COLOR_WRITE_ENABLE_RED: ::libc::c_uint = 1;
pub const D3D11_COLOR_WRITE_ENABLE_GREEN: ::libc::c_uint = 2;
pub const D3D11_COLOR_WRITE_ENABLE_BLUE: ::libc::c_uint = 4;
pub const D3D11_COLOR_WRITE_ENABLE_ALPHA: ::libc::c_uint = 8;
pub const D3D11_COLOR_WRITE_ENABLE_ALL: ::libc::c_uint = 15;
pub type D3D11_COLOR_WRITE_ENABLE = Enum_D3D11_COLOR_WRITE_ENABLE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_RENDER_TARGET_BLEND_DESC {
    pub BlendEnable: BOOL,
    pub SrcBlend: D3D11_BLEND,
    pub DestBlend: D3D11_BLEND,
    pub BlendOp: D3D11_BLEND_OP,
    pub SrcBlendAlpha: D3D11_BLEND,
    pub DestBlendAlpha: D3D11_BLEND,
    pub BlendOpAlpha: D3D11_BLEND_OP,
    pub RenderTargetWriteMask: UINT8,
}
impl ::std::default::Default for Struct_D3D11_RENDER_TARGET_BLEND_DESC {
    fn default() -> Struct_D3D11_RENDER_TARGET_BLEND_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_RENDER_TARGET_BLEND_DESC =
    Struct_D3D11_RENDER_TARGET_BLEND_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_BLEND_DESC {
    pub AlphaToCoverageEnable: BOOL,
    pub IndependentBlendEnable: BOOL,
    pub RenderTarget: [D3D11_RENDER_TARGET_BLEND_DESC; 8usize],
}
impl ::std::default::Default for Struct_D3D11_BLEND_DESC {
    fn default() -> Struct_D3D11_BLEND_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_BLEND_DESC = Struct_D3D11_BLEND_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11BlendStateVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11BlendState,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11BlendState)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11BlendState)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11BlendState,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11BlendState,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11BlendState,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11BlendState,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11BlendState,
                                            pDesc: *mut D3D11_BLEND_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11BlendStateVtbl {
    fn default() -> Struct_ID3D11BlendStateVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11BlendStateVtbl = Struct_ID3D11BlendStateVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11BlendState {
    pub lpVtbl: *mut Struct_ID3D11BlendStateVtbl,
}
impl ::std::default::Default for Struct_ID3D11BlendState {
    fn default() -> Struct_ID3D11BlendState {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_RASTERIZER_DESC {
    pub FillMode: D3D11_FILL_MODE,
    pub CullMode: D3D11_CULL_MODE,
    pub FrontCounterClockwise: BOOL,
    pub DepthBias: INT,
    pub DepthBiasClamp: FLOAT,
    pub SlopeScaledDepthBias: FLOAT,
    pub DepthClipEnable: BOOL,
    pub ScissorEnable: BOOL,
    pub MultisampleEnable: BOOL,
    pub AntialiasedLineEnable: BOOL,
}
impl ::std::default::Default for Struct_D3D11_RASTERIZER_DESC {
    fn default() -> Struct_D3D11_RASTERIZER_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_RASTERIZER_DESC = Struct_D3D11_RASTERIZER_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11RasterizerStateVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11RasterizerState,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11RasterizerState)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11RasterizerState)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut ID3D11RasterizerState,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11RasterizerState,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11RasterizerState,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11RasterizerState,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11RasterizerState,
                                            pDesc: *mut D3D11_RASTERIZER_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11RasterizerStateVtbl {
    fn default() -> Struct_ID3D11RasterizerStateVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11RasterizerStateVtbl = Struct_ID3D11RasterizerStateVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11RasterizerState {
    pub lpVtbl: *mut Struct_ID3D11RasterizerStateVtbl,
}
impl ::std::default::Default for Struct_ID3D11RasterizerState {
    fn default() -> Struct_ID3D11RasterizerState {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_SUBRESOURCE_DATA {
    pub pSysMem: *const ::libc::c_void,
    pub SysMemPitch: UINT,
    pub SysMemSlicePitch: UINT,
}
impl ::std::default::Default for Struct_D3D11_SUBRESOURCE_DATA {
    fn default() -> Struct_D3D11_SUBRESOURCE_DATA {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SUBRESOURCE_DATA = Struct_D3D11_SUBRESOURCE_DATA;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_MAPPED_SUBRESOURCE {
    pub pData: *mut ::libc::c_void,
    pub RowPitch: UINT,
    pub DepthPitch: UINT,
}
impl ::std::default::Default for Struct_D3D11_MAPPED_SUBRESOURCE {
    fn default() -> Struct_D3D11_MAPPED_SUBRESOURCE {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_MAPPED_SUBRESOURCE = Struct_D3D11_MAPPED_SUBRESOURCE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ResourceVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Resource,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut ID3D11Resource)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Resource)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Resource,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Resource,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Resource,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Resource,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Resource,
                                            pResourceDimension:
                                                *mut D3D11_RESOURCE_DIMENSION)
                                           -> ()>,
    pub SetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Resource,
                                                        EvictionPriority:
                                                            UINT) -> ()>,
    pub GetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Resource)
                                                       -> UINT>,
}
impl ::std::default::Default for Struct_ID3D11ResourceVtbl {
    fn default() -> Struct_ID3D11ResourceVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ResourceVtbl = Struct_ID3D11ResourceVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Resource {
    pub lpVtbl: *mut Struct_ID3D11ResourceVtbl,
}
impl ::std::default::Default for Struct_ID3D11Resource {
    fn default() -> Struct_ID3D11Resource { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_BUFFER_DESC {
    pub ByteWidth: UINT,
    pub Usage: D3D11_USAGE,
    pub BindFlags: UINT,
    pub CPUAccessFlags: UINT,
    pub MiscFlags: UINT,
    pub StructureByteStride: UINT,
}
impl ::std::default::Default for Struct_D3D11_BUFFER_DESC {
    fn default() -> Struct_D3D11_BUFFER_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_BUFFER_DESC = Struct_D3D11_BUFFER_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11BufferVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Buffer,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut ID3D11Buffer)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut ID3D11Buffer)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Buffer,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Buffer,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Buffer,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Buffer,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Buffer,
                                            pResourceDimension:
                                                *mut D3D11_RESOURCE_DIMENSION)
                                           -> ()>,
    pub SetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Buffer,
                                                        EvictionPriority:
                                                            UINT) -> ()>,
    pub GetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Buffer)
                                                       -> UINT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Buffer,
                                            pDesc: *mut D3D11_BUFFER_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11BufferVtbl {
    fn default() -> Struct_ID3D11BufferVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11BufferVtbl = Struct_ID3D11BufferVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Buffer {
    pub lpVtbl: *mut Struct_ID3D11BufferVtbl,
}
impl ::std::default::Default for Struct_ID3D11Buffer {
    fn default() -> Struct_ID3D11Buffer { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEXTURE1D_DESC {
    pub Width: UINT,
    pub MipLevels: UINT,
    pub ArraySize: UINT,
    pub Format: DXGI_FORMAT,
    pub Usage: D3D11_USAGE,
    pub BindFlags: UINT,
    pub CPUAccessFlags: UINT,
    pub MiscFlags: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEXTURE1D_DESC {
    fn default() -> Struct_D3D11_TEXTURE1D_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEXTURE1D_DESC = Struct_D3D11_TEXTURE1D_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Texture1DVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture1D,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11Texture1D)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture1D)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Texture1D,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture1D,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture1D,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Texture1D,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture1D,
                                            pResourceDimension:
                                                *mut D3D11_RESOURCE_DIMENSION)
                                           -> ()>,
    pub SetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Texture1D,
                                                        EvictionPriority:
                                                            UINT) -> ()>,
    pub GetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Texture1D)
                                                       -> UINT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture1D,
                                            pDesc: *mut D3D11_TEXTURE1D_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11Texture1DVtbl {
    fn default() -> Struct_ID3D11Texture1DVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11Texture1DVtbl = Struct_ID3D11Texture1DVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Texture1D {
    pub lpVtbl: *mut Struct_ID3D11Texture1DVtbl,
}
impl ::std::default::Default for Struct_ID3D11Texture1D {
    fn default() -> Struct_ID3D11Texture1D { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEXTURE2D_DESC {
    pub Width: UINT,
    pub Height: UINT,
    pub MipLevels: UINT,
    pub ArraySize: UINT,
    pub Format: DXGI_FORMAT,
    pub SampleDesc: DXGI_SAMPLE_DESC,
    pub Usage: D3D11_USAGE,
    pub BindFlags: UINT,
    pub CPUAccessFlags: UINT,
    pub MiscFlags: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEXTURE2D_DESC {
    fn default() -> Struct_D3D11_TEXTURE2D_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEXTURE2D_DESC = Struct_D3D11_TEXTURE2D_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Texture2DVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture2D,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11Texture2D)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture2D)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Texture2D,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture2D,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture2D,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Texture2D,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture2D,
                                            pResourceDimension:
                                                *mut D3D11_RESOURCE_DIMENSION)
                                           -> ()>,
    pub SetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Texture2D,
                                                        EvictionPriority:
                                                            UINT) -> ()>,
    pub GetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Texture2D)
                                                       -> UINT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture2D,
                                            pDesc: *mut D3D11_TEXTURE2D_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11Texture2DVtbl {
    fn default() -> Struct_ID3D11Texture2DVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11Texture2DVtbl = Struct_ID3D11Texture2DVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Texture2D {
    pub lpVtbl: *mut Struct_ID3D11Texture2DVtbl,
}
impl ::std::default::Default for Struct_ID3D11Texture2D {
    fn default() -> Struct_ID3D11Texture2D { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEXTURE3D_DESC {
    pub Width: UINT,
    pub Height: UINT,
    pub Depth: UINT,
    pub MipLevels: UINT,
    pub Format: DXGI_FORMAT,
    pub Usage: D3D11_USAGE,
    pub BindFlags: UINT,
    pub CPUAccessFlags: UINT,
    pub MiscFlags: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEXTURE3D_DESC {
    fn default() -> Struct_D3D11_TEXTURE3D_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEXTURE3D_DESC = Struct_D3D11_TEXTURE3D_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Texture3DVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture3D,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11Texture3D)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture3D)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Texture3D,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture3D,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Texture3D,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Texture3D,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture3D,
                                            pResourceDimension:
                                                *mut D3D11_RESOURCE_DIMENSION)
                                           -> ()>,
    pub SetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Texture3D,
                                                        EvictionPriority:
                                                            UINT) -> ()>,
    pub GetEvictionPriority: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Texture3D)
                                                       -> UINT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Texture3D,
                                            pDesc: *mut D3D11_TEXTURE3D_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11Texture3DVtbl {
    fn default() -> Struct_ID3D11Texture3DVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11Texture3DVtbl = Struct_ID3D11Texture3DVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Texture3D {
    pub lpVtbl: *mut Struct_ID3D11Texture3DVtbl,
}
impl ::std::default::Default for Struct_ID3D11Texture3D {
    fn default() -> Struct_ID3D11Texture3D { unsafe { ::std::mem::zeroed() } }
}
pub type Enum_D3D11_TEXTURECUBE_FACE = ::libc::c_uint;
pub const D3D11_TEXTURECUBE_FACE_POSITIVE_X: ::libc::c_uint = 0;
pub const D3D11_TEXTURECUBE_FACE_NEGATIVE_X: ::libc::c_uint = 1;
pub const D3D11_TEXTURECUBE_FACE_POSITIVE_Y: ::libc::c_uint = 2;
pub const D3D11_TEXTURECUBE_FACE_NEGATIVE_Y: ::libc::c_uint = 3;
pub const D3D11_TEXTURECUBE_FACE_POSITIVE_Z: ::libc::c_uint = 4;
pub const D3D11_TEXTURECUBE_FACE_NEGATIVE_Z: ::libc::c_uint = 5;
pub type D3D11_TEXTURECUBE_FACE = Enum_D3D11_TEXTURECUBE_FACE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ViewVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11View,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut ID3D11View)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut ID3D11View)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11View,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11View,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11View,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11View,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetResource: ::std::option::Option<extern "C" fn
                                               (This: *mut ID3D11View,
                                                ppResource:
                                                    *mut *mut ID3D11Resource)
                                               -> ()>,
}
impl ::std::default::Default for Struct_ID3D11ViewVtbl {
    fn default() -> Struct_ID3D11ViewVtbl { unsafe { ::std::mem::zeroed() } }
}
pub type ID3D11ViewVtbl = Struct_ID3D11ViewVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11View {
    pub lpVtbl: *mut Struct_ID3D11ViewVtbl,
}
impl ::std::default::Default for Struct_ID3D11View {
    fn default() -> Struct_ID3D11View { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_BUFFER_SRV {
    pub _bindgen_data_1_: [u32; 1usize],
    pub _bindgen_data_2_: [u32; 1usize],
}
impl Struct_D3D11_BUFFER_SRV {
    pub unsafe fn FirstElement(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn ElementOffset(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn NumElements(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_2_)
    }
    pub unsafe fn ElementWidth(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_2_)
    }
}
impl ::std::default::Default for Struct_D3D11_BUFFER_SRV {
    fn default() -> Struct_D3D11_BUFFER_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_BUFFER_SRV = Struct_D3D11_BUFFER_SRV;
pub type Enum_D3D11_BUFFEREX_SRV_FLAG = ::libc::c_uint;
pub const D3D11_BUFFEREX_SRV_FLAG_RAW: ::libc::c_uint = 1;
pub type D3D11_BUFFEREX_SRV_FLAG = Enum_D3D11_BUFFEREX_SRV_FLAG;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_BUFFEREX_SRV {
    pub FirstElement: UINT,
    pub NumElements: UINT,
    pub Flags: UINT,
}
impl ::std::default::Default for Struct_D3D11_BUFFEREX_SRV {
    fn default() -> Struct_D3D11_BUFFEREX_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_BUFFEREX_SRV = Struct_D3D11_BUFFEREX_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_SRV {
    pub MostDetailedMip: UINT,
    pub MipLevels: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_SRV {
    fn default() -> Struct_D3D11_TEX1D_SRV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX1D_SRV = Struct_D3D11_TEX1D_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_ARRAY_SRV {
    pub MostDetailedMip: UINT,
    pub MipLevels: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_ARRAY_SRV {
    fn default() -> Struct_D3D11_TEX1D_ARRAY_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX1D_ARRAY_SRV = Struct_D3D11_TEX1D_ARRAY_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_SRV {
    pub MostDetailedMip: UINT,
    pub MipLevels: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_SRV {
    fn default() -> Struct_D3D11_TEX2D_SRV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX2D_SRV = Struct_D3D11_TEX2D_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_ARRAY_SRV {
    pub MostDetailedMip: UINT,
    pub MipLevels: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_ARRAY_SRV {
    fn default() -> Struct_D3D11_TEX2D_ARRAY_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2D_ARRAY_SRV = Struct_D3D11_TEX2D_ARRAY_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX3D_SRV {
    pub MostDetailedMip: UINT,
    pub MipLevels: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX3D_SRV {
    fn default() -> Struct_D3D11_TEX3D_SRV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX3D_SRV = Struct_D3D11_TEX3D_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEXCUBE_SRV {
    pub MostDetailedMip: UINT,
    pub MipLevels: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEXCUBE_SRV {
    fn default() -> Struct_D3D11_TEXCUBE_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEXCUBE_SRV = Struct_D3D11_TEXCUBE_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEXCUBE_ARRAY_SRV {
    pub MostDetailedMip: UINT,
    pub MipLevels: UINT,
    pub First2DArrayFace: UINT,
    pub NumCubes: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEXCUBE_ARRAY_SRV {
    fn default() -> Struct_D3D11_TEXCUBE_ARRAY_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEXCUBE_ARRAY_SRV = Struct_D3D11_TEXCUBE_ARRAY_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2DMS_SRV {
    pub UnusedField_NothingToDefine: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2DMS_SRV {
    fn default() -> Struct_D3D11_TEX2DMS_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2DMS_SRV = Struct_D3D11_TEX2DMS_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2DMS_ARRAY_SRV {
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2DMS_ARRAY_SRV {
    fn default() -> Struct_D3D11_TEX2DMS_ARRAY_SRV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2DMS_ARRAY_SRV = Struct_D3D11_TEX2DMS_ARRAY_SRV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_SHADER_RESOURCE_VIEW_DESC {
    pub Format: DXGI_FORMAT,
    pub ViewDimension: D3D11_SRV_DIMENSION,
    pub _bindgen_data_1_: [u32; 4usize],
}
impl Struct_D3D11_SHADER_RESOURCE_VIEW_DESC {
    pub unsafe fn Buffer(&mut self) -> *mut D3D11_BUFFER_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture1D(&mut self) -> *mut D3D11_TEX1D_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture1DArray(&mut self) -> *mut D3D11_TEX1D_ARRAY_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2D(&mut self) -> *mut D3D11_TEX2D_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DArray(&mut self) -> *mut D3D11_TEX2D_ARRAY_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DMS(&mut self) -> *mut D3D11_TEX2DMS_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DMSArray(&mut self)
     -> *mut D3D11_TEX2DMS_ARRAY_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture3D(&mut self) -> *mut D3D11_TEX3D_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn TextureCube(&mut self) -> *mut D3D11_TEXCUBE_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn TextureCubeArray(&mut self)
     -> *mut D3D11_TEXCUBE_ARRAY_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn BufferEx(&mut self) -> *mut D3D11_BUFFEREX_SRV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
}
impl ::std::default::Default for Struct_D3D11_SHADER_RESOURCE_VIEW_DESC {
    fn default() -> Struct_D3D11_SHADER_RESOURCE_VIEW_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SHADER_RESOURCE_VIEW_DESC =
    Struct_D3D11_SHADER_RESOURCE_VIEW_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderResourceViewVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ShaderResourceView,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This:
                                               *mut ID3D11ShaderResourceView)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11ShaderResourceView)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut ID3D11ShaderResourceView,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ShaderResourceView,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ShaderResourceView,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11ShaderResourceView,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetResource: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11ShaderResourceView,
                                                ppResource:
                                                    *mut *mut ID3D11Resource)
                                               -> ()>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11ShaderResourceView,
                                            pDesc:
                                                *mut D3D11_SHADER_RESOURCE_VIEW_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11ShaderResourceViewVtbl {
    fn default() -> Struct_ID3D11ShaderResourceViewVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ShaderResourceViewVtbl = Struct_ID3D11ShaderResourceViewVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderResourceView {
    pub lpVtbl: *mut Struct_ID3D11ShaderResourceViewVtbl,
}
impl ::std::default::Default for Struct_ID3D11ShaderResourceView {
    fn default() -> Struct_ID3D11ShaderResourceView {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_BUFFER_RTV {
    pub _bindgen_data_1_: [u32; 1usize],
    pub _bindgen_data_2_: [u32; 1usize],
}
impl Struct_D3D11_BUFFER_RTV {
    pub unsafe fn FirstElement(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn ElementOffset(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn NumElements(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_2_)
    }
    pub unsafe fn ElementWidth(&mut self) -> *mut UINT {
        ::std::mem::transmute(&self._bindgen_data_2_)
    }
}
impl ::std::default::Default for Struct_D3D11_BUFFER_RTV {
    fn default() -> Struct_D3D11_BUFFER_RTV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_BUFFER_RTV = Struct_D3D11_BUFFER_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_RTV {
    pub MipSlice: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_RTV {
    fn default() -> Struct_D3D11_TEX1D_RTV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX1D_RTV = Struct_D3D11_TEX1D_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_ARRAY_RTV {
    pub MipSlice: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_ARRAY_RTV {
    fn default() -> Struct_D3D11_TEX1D_ARRAY_RTV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX1D_ARRAY_RTV = Struct_D3D11_TEX1D_ARRAY_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_RTV {
    pub MipSlice: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_RTV {
    fn default() -> Struct_D3D11_TEX2D_RTV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX2D_RTV = Struct_D3D11_TEX2D_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2DMS_RTV {
    pub UnusedField_NothingToDefine: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2DMS_RTV {
    fn default() -> Struct_D3D11_TEX2DMS_RTV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2DMS_RTV = Struct_D3D11_TEX2DMS_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_ARRAY_RTV {
    pub MipSlice: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_ARRAY_RTV {
    fn default() -> Struct_D3D11_TEX2D_ARRAY_RTV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2D_ARRAY_RTV = Struct_D3D11_TEX2D_ARRAY_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2DMS_ARRAY_RTV {
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2DMS_ARRAY_RTV {
    fn default() -> Struct_D3D11_TEX2DMS_ARRAY_RTV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2DMS_ARRAY_RTV = Struct_D3D11_TEX2DMS_ARRAY_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX3D_RTV {
    pub MipSlice: UINT,
    pub FirstWSlice: UINT,
    pub WSize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX3D_RTV {
    fn default() -> Struct_D3D11_TEX3D_RTV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX3D_RTV = Struct_D3D11_TEX3D_RTV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_RENDER_TARGET_VIEW_DESC {
    pub Format: DXGI_FORMAT,
    pub ViewDimension: D3D11_RTV_DIMENSION,
    pub _bindgen_data_1_: [u32; 3usize],
}
impl Struct_D3D11_RENDER_TARGET_VIEW_DESC {
    pub unsafe fn Buffer(&mut self) -> *mut D3D11_BUFFER_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture1D(&mut self) -> *mut D3D11_TEX1D_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture1DArray(&mut self) -> *mut D3D11_TEX1D_ARRAY_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2D(&mut self) -> *mut D3D11_TEX2D_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DArray(&mut self) -> *mut D3D11_TEX2D_ARRAY_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DMS(&mut self) -> *mut D3D11_TEX2DMS_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DMSArray(&mut self)
     -> *mut D3D11_TEX2DMS_ARRAY_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture3D(&mut self) -> *mut D3D11_TEX3D_RTV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
}
impl ::std::default::Default for Struct_D3D11_RENDER_TARGET_VIEW_DESC {
    fn default() -> Struct_D3D11_RENDER_TARGET_VIEW_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_RENDER_TARGET_VIEW_DESC = Struct_D3D11_RENDER_TARGET_VIEW_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11RenderTargetViewVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11RenderTargetView,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11RenderTargetView)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11RenderTargetView)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut ID3D11RenderTargetView,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11RenderTargetView,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11RenderTargetView,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11RenderTargetView,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetResource: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11RenderTargetView,
                                                ppResource:
                                                    *mut *mut ID3D11Resource)
                                               -> ()>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11RenderTargetView,
                                            pDesc:
                                                *mut D3D11_RENDER_TARGET_VIEW_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11RenderTargetViewVtbl {
    fn default() -> Struct_ID3D11RenderTargetViewVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11RenderTargetViewVtbl = Struct_ID3D11RenderTargetViewVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11RenderTargetView {
    pub lpVtbl: *mut Struct_ID3D11RenderTargetViewVtbl,
}
impl ::std::default::Default for Struct_ID3D11RenderTargetView {
    fn default() -> Struct_ID3D11RenderTargetView {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_DSV {
    pub MipSlice: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_DSV {
    fn default() -> Struct_D3D11_TEX1D_DSV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX1D_DSV = Struct_D3D11_TEX1D_DSV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_ARRAY_DSV {
    pub MipSlice: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_ARRAY_DSV {
    fn default() -> Struct_D3D11_TEX1D_ARRAY_DSV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX1D_ARRAY_DSV = Struct_D3D11_TEX1D_ARRAY_DSV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_DSV {
    pub MipSlice: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_DSV {
    fn default() -> Struct_D3D11_TEX2D_DSV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX2D_DSV = Struct_D3D11_TEX2D_DSV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_ARRAY_DSV {
    pub MipSlice: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_ARRAY_DSV {
    fn default() -> Struct_D3D11_TEX2D_ARRAY_DSV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2D_ARRAY_DSV = Struct_D3D11_TEX2D_ARRAY_DSV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2DMS_DSV {
    pub UnusedField_NothingToDefine: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2DMS_DSV {
    fn default() -> Struct_D3D11_TEX2DMS_DSV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2DMS_DSV = Struct_D3D11_TEX2DMS_DSV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2DMS_ARRAY_DSV {
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2DMS_ARRAY_DSV {
    fn default() -> Struct_D3D11_TEX2DMS_ARRAY_DSV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2DMS_ARRAY_DSV = Struct_D3D11_TEX2DMS_ARRAY_DSV;
pub type Enum_D3D11_DSV_FLAG = ::libc::c_uint;
pub const D3D11_DSV_READ_ONLY_DEPTH: ::libc::c_uint = 1;
pub const D3D11_DSV_READ_ONLY_STENCIL: ::libc::c_uint = 2;
pub type D3D11_DSV_FLAG = Enum_D3D11_DSV_FLAG;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_DEPTH_STENCIL_VIEW_DESC {
    pub Format: DXGI_FORMAT,
    pub ViewDimension: D3D11_DSV_DIMENSION,
    pub Flags: UINT,
    pub _bindgen_data_1_: [u32; 3usize],
}
impl Struct_D3D11_DEPTH_STENCIL_VIEW_DESC {
    pub unsafe fn Texture1D(&mut self) -> *mut D3D11_TEX1D_DSV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture1DArray(&mut self) -> *mut D3D11_TEX1D_ARRAY_DSV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2D(&mut self) -> *mut D3D11_TEX2D_DSV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DArray(&mut self) -> *mut D3D11_TEX2D_ARRAY_DSV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DMS(&mut self) -> *mut D3D11_TEX2DMS_DSV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DMSArray(&mut self)
     -> *mut D3D11_TEX2DMS_ARRAY_DSV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
}
impl ::std::default::Default for Struct_D3D11_DEPTH_STENCIL_VIEW_DESC {
    fn default() -> Struct_D3D11_DEPTH_STENCIL_VIEW_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_DEPTH_STENCIL_VIEW_DESC = Struct_D3D11_DEPTH_STENCIL_VIEW_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DepthStencilViewVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DepthStencilView,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11DepthStencilView)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11DepthStencilView)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut ID3D11DepthStencilView,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DepthStencilView,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DepthStencilView,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11DepthStencilView,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetResource: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DepthStencilView,
                                                ppResource:
                                                    *mut *mut ID3D11Resource)
                                               -> ()>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11DepthStencilView,
                                            pDesc:
                                                *mut D3D11_DEPTH_STENCIL_VIEW_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11DepthStencilViewVtbl {
    fn default() -> Struct_ID3D11DepthStencilViewVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11DepthStencilViewVtbl = Struct_ID3D11DepthStencilViewVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DepthStencilView {
    pub lpVtbl: *mut Struct_ID3D11DepthStencilViewVtbl,
}
impl ::std::default::Default for Struct_ID3D11DepthStencilView {
    fn default() -> Struct_ID3D11DepthStencilView {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type Enum_D3D11_BUFFER_UAV_FLAG = ::libc::c_uint;
pub const D3D11_BUFFER_UAV_FLAG_RAW: ::libc::c_uint = 1;
pub const D3D11_BUFFER_UAV_FLAG_APPEND: ::libc::c_uint = 2;
pub const D3D11_BUFFER_UAV_FLAG_COUNTER: ::libc::c_uint = 4;
pub type D3D11_BUFFER_UAV_FLAG = Enum_D3D11_BUFFER_UAV_FLAG;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_BUFFER_UAV {
    pub FirstElement: UINT,
    pub NumElements: UINT,
    pub Flags: UINT,
}
impl ::std::default::Default for Struct_D3D11_BUFFER_UAV {
    fn default() -> Struct_D3D11_BUFFER_UAV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_BUFFER_UAV = Struct_D3D11_BUFFER_UAV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_UAV {
    pub MipSlice: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_UAV {
    fn default() -> Struct_D3D11_TEX1D_UAV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX1D_UAV = Struct_D3D11_TEX1D_UAV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX1D_ARRAY_UAV {
    pub MipSlice: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX1D_ARRAY_UAV {
    fn default() -> Struct_D3D11_TEX1D_ARRAY_UAV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX1D_ARRAY_UAV = Struct_D3D11_TEX1D_ARRAY_UAV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_UAV {
    pub MipSlice: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_UAV {
    fn default() -> Struct_D3D11_TEX2D_UAV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX2D_UAV = Struct_D3D11_TEX2D_UAV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX2D_ARRAY_UAV {
    pub MipSlice: UINT,
    pub FirstArraySlice: UINT,
    pub ArraySize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX2D_ARRAY_UAV {
    fn default() -> Struct_D3D11_TEX2D_ARRAY_UAV {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_TEX2D_ARRAY_UAV = Struct_D3D11_TEX2D_ARRAY_UAV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_TEX3D_UAV {
    pub MipSlice: UINT,
    pub FirstWSlice: UINT,
    pub WSize: UINT,
}
impl ::std::default::Default for Struct_D3D11_TEX3D_UAV {
    fn default() -> Struct_D3D11_TEX3D_UAV { unsafe { ::std::mem::zeroed() } }
}
pub type D3D11_TEX3D_UAV = Struct_D3D11_TEX3D_UAV;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_UNORDERED_ACCESS_VIEW_DESC {
    pub Format: DXGI_FORMAT,
    pub ViewDimension: D3D11_UAV_DIMENSION,
    pub _bindgen_data_1_: [u32; 3usize],
}
impl Struct_D3D11_UNORDERED_ACCESS_VIEW_DESC {
    pub unsafe fn Buffer(&mut self) -> *mut D3D11_BUFFER_UAV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture1D(&mut self) -> *mut D3D11_TEX1D_UAV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture1DArray(&mut self) -> *mut D3D11_TEX1D_ARRAY_UAV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2D(&mut self) -> *mut D3D11_TEX2D_UAV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture2DArray(&mut self) -> *mut D3D11_TEX2D_ARRAY_UAV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
    pub unsafe fn Texture3D(&mut self) -> *mut D3D11_TEX3D_UAV {
        ::std::mem::transmute(&self._bindgen_data_1_)
    }
}
impl ::std::default::Default for Struct_D3D11_UNORDERED_ACCESS_VIEW_DESC {
    fn default() -> Struct_D3D11_UNORDERED_ACCESS_VIEW_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_UNORDERED_ACCESS_VIEW_DESC =
    Struct_D3D11_UNORDERED_ACCESS_VIEW_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11UnorderedAccessViewVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11UnorderedAccessView,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This:
                                               *mut ID3D11UnorderedAccessView)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11UnorderedAccessView)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut ID3D11UnorderedAccessView,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11UnorderedAccessView,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11UnorderedAccessView,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11UnorderedAccessView,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetResource: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11UnorderedAccessView,
                                                ppResource:
                                                    *mut *mut ID3D11Resource)
                                               -> ()>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11UnorderedAccessView,
                                            pDesc:
                                                *mut D3D11_UNORDERED_ACCESS_VIEW_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11UnorderedAccessViewVtbl {
    fn default() -> Struct_ID3D11UnorderedAccessViewVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11UnorderedAccessViewVtbl = Struct_ID3D11UnorderedAccessViewVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11UnorderedAccessView {
    pub lpVtbl: *mut Struct_ID3D11UnorderedAccessViewVtbl,
}
impl ::std::default::Default for Struct_ID3D11UnorderedAccessView {
    fn default() -> Struct_ID3D11UnorderedAccessView {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11VertexShaderVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11VertexShader,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11VertexShader)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11VertexShader)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11VertexShader,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11VertexShader,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11VertexShader,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11VertexShader,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11VertexShaderVtbl {
    fn default() -> Struct_ID3D11VertexShaderVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11VertexShaderVtbl = Struct_ID3D11VertexShaderVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11VertexShader {
    pub lpVtbl: *mut Struct_ID3D11VertexShaderVtbl,
}
impl ::std::default::Default for Struct_ID3D11VertexShader {
    fn default() -> Struct_ID3D11VertexShader {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11HullShaderVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11HullShader,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11HullShader)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11HullShader)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11HullShader,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11HullShader,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11HullShader,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11HullShader,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11HullShaderVtbl {
    fn default() -> Struct_ID3D11HullShaderVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11HullShaderVtbl = Struct_ID3D11HullShaderVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11HullShader {
    pub lpVtbl: *mut Struct_ID3D11HullShaderVtbl,
}
impl ::std::default::Default for Struct_ID3D11HullShader {
    fn default() -> Struct_ID3D11HullShader {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DomainShaderVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DomainShader,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11DomainShader)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11DomainShader)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11DomainShader,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DomainShader,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DomainShader,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11DomainShader,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11DomainShaderVtbl {
    fn default() -> Struct_ID3D11DomainShaderVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11DomainShaderVtbl = Struct_ID3D11DomainShaderVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DomainShader {
    pub lpVtbl: *mut Struct_ID3D11DomainShaderVtbl,
}
impl ::std::default::Default for Struct_ID3D11DomainShader {
    fn default() -> Struct_ID3D11DomainShader {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11GeometryShaderVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11GeometryShader,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11GeometryShader)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11GeometryShader)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11GeometryShader,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11GeometryShader,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11GeometryShader,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11GeometryShader,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11GeometryShaderVtbl {
    fn default() -> Struct_ID3D11GeometryShaderVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11GeometryShaderVtbl = Struct_ID3D11GeometryShaderVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11GeometryShader {
    pub lpVtbl: *mut Struct_ID3D11GeometryShaderVtbl,
}
impl ::std::default::Default for Struct_ID3D11GeometryShader {
    fn default() -> Struct_ID3D11GeometryShader {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11PixelShaderVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11PixelShader,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11PixelShader)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11PixelShader)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11PixelShader,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11PixelShader,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11PixelShader,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11PixelShader,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11PixelShaderVtbl {
    fn default() -> Struct_ID3D11PixelShaderVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11PixelShaderVtbl = Struct_ID3D11PixelShaderVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11PixelShader {
    pub lpVtbl: *mut Struct_ID3D11PixelShaderVtbl,
}
impl ::std::default::Default for Struct_ID3D11PixelShader {
    fn default() -> Struct_ID3D11PixelShader {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ComputeShaderVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ComputeShader,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11ComputeShader)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11ComputeShader)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11ComputeShader,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ComputeShader,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ComputeShader,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11ComputeShader,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11ComputeShaderVtbl {
    fn default() -> Struct_ID3D11ComputeShaderVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ComputeShaderVtbl = Struct_ID3D11ComputeShaderVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ComputeShader {
    pub lpVtbl: *mut Struct_ID3D11ComputeShaderVtbl,
}
impl ::std::default::Default for Struct_ID3D11ComputeShader {
    fn default() -> Struct_ID3D11ComputeShader {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11InputLayoutVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11InputLayout,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11InputLayout)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11InputLayout)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11InputLayout,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11InputLayout,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11InputLayout,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11InputLayout,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11InputLayoutVtbl {
    fn default() -> Struct_ID3D11InputLayoutVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11InputLayoutVtbl = Struct_ID3D11InputLayoutVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11InputLayout {
    pub lpVtbl: *mut Struct_ID3D11InputLayoutVtbl,
}
impl ::std::default::Default for Struct_ID3D11InputLayout {
    fn default() -> Struct_ID3D11InputLayout {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type Enum_D3D11_FILTER = ::libc::c_uint;
pub const D3D11_FILTER_MIN_MAG_MIP_POINT: ::libc::c_uint = 0;
pub const D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR: ::libc::c_uint = 1;
pub const D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT: ::libc::c_uint = 4;
pub const D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR: ::libc::c_uint = 5;
pub const D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT: ::libc::c_uint = 16;
pub const D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR: ::libc::c_uint = 17;
pub const D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT: ::libc::c_uint = 20;
pub const D3D11_FILTER_MIN_MAG_MIP_LINEAR: ::libc::c_uint = 21;
pub const D3D11_FILTER_ANISOTROPIC: ::libc::c_uint = 85;
pub const D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT: ::libc::c_uint = 128;
pub const D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR: ::libc::c_uint =
    129;
pub const D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT:
          ::libc::c_uint =
    132;
pub const D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR: ::libc::c_uint =
    133;
pub const D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT: ::libc::c_uint =
    144;
pub const D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR:
          ::libc::c_uint =
    145;
pub const D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT: ::libc::c_uint =
    148;
pub const D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR: ::libc::c_uint = 149;
pub const D3D11_FILTER_COMPARISON_ANISOTROPIC: ::libc::c_uint = 213;
pub type D3D11_FILTER = Enum_D3D11_FILTER;
pub type Enum_D3D11_FILTER_TYPE = ::libc::c_uint;
pub const D3D11_FILTER_TYPE_POINT: ::libc::c_uint = 0;
pub const D3D11_FILTER_TYPE_LINEAR: ::libc::c_uint = 1;
pub type D3D11_FILTER_TYPE = Enum_D3D11_FILTER_TYPE;
pub type Enum_D3D11_TEXTURE_ADDRESS_MODE = ::libc::c_uint;
pub const D3D11_TEXTURE_ADDRESS_WRAP: ::libc::c_uint = 1;
pub const D3D11_TEXTURE_ADDRESS_MIRROR: ::libc::c_uint = 2;
pub const D3D11_TEXTURE_ADDRESS_CLAMP: ::libc::c_uint = 3;
pub const D3D11_TEXTURE_ADDRESS_BORDER: ::libc::c_uint = 4;
pub const D3D11_TEXTURE_ADDRESS_MIRROR_ONCE: ::libc::c_uint = 5;
pub type D3D11_TEXTURE_ADDRESS_MODE = Enum_D3D11_TEXTURE_ADDRESS_MODE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_SAMPLER_DESC {
    pub Filter: D3D11_FILTER,
    pub AddressU: D3D11_TEXTURE_ADDRESS_MODE,
    pub AddressV: D3D11_TEXTURE_ADDRESS_MODE,
    pub AddressW: D3D11_TEXTURE_ADDRESS_MODE,
    pub MipLODBias: FLOAT,
    pub MaxAnisotropy: UINT,
    pub ComparisonFunc: D3D11_COMPARISON_FUNC,
    pub BorderColor: [FLOAT; 4usize],
    pub MinLOD: FLOAT,
    pub MaxLOD: FLOAT,
}
impl ::std::default::Default for Struct_D3D11_SAMPLER_DESC {
    fn default() -> Struct_D3D11_SAMPLER_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SAMPLER_DESC = Struct_D3D11_SAMPLER_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11SamplerStateVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11SamplerState,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11SamplerState)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11SamplerState)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11SamplerState,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11SamplerState,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11SamplerState,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11SamplerState,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11SamplerState,
                                            pDesc: *mut D3D11_SAMPLER_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11SamplerStateVtbl {
    fn default() -> Struct_ID3D11SamplerStateVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11SamplerStateVtbl = Struct_ID3D11SamplerStateVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11SamplerState {
    pub lpVtbl: *mut Struct_ID3D11SamplerStateVtbl,
}
impl ::std::default::Default for Struct_ID3D11SamplerState {
    fn default() -> Struct_ID3D11SamplerState {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type Enum_D3D11_FORMAT_SUPPORT = ::libc::c_uint;
pub const D3D11_FORMAT_SUPPORT_BUFFER: ::libc::c_uint = 1;
pub const D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER: ::libc::c_uint = 2;
pub const D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER: ::libc::c_uint = 4;
pub const D3D11_FORMAT_SUPPORT_SO_BUFFER: ::libc::c_uint = 8;
pub const D3D11_FORMAT_SUPPORT_TEXTURE1D: ::libc::c_uint = 16;
pub const D3D11_FORMAT_SUPPORT_TEXTURE2D: ::libc::c_uint = 32;
pub const D3D11_FORMAT_SUPPORT_TEXTURE3D: ::libc::c_uint = 64;
pub const D3D11_FORMAT_SUPPORT_TEXTURECUBE: ::libc::c_uint = 128;
pub const D3D11_FORMAT_SUPPORT_SHADER_LOAD: ::libc::c_uint = 256;
pub const D3D11_FORMAT_SUPPORT_SHADER_SAMPLE: ::libc::c_uint = 512;
pub const D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON: ::libc::c_uint =
    1024;
pub const D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT: ::libc::c_uint = 2048;
pub const D3D11_FORMAT_SUPPORT_MIP: ::libc::c_uint = 4096;
pub const D3D11_FORMAT_SUPPORT_MIP_AUTOGEN: ::libc::c_uint = 8192;
pub const D3D11_FORMAT_SUPPORT_RENDER_TARGET: ::libc::c_uint = 16384;
pub const D3D11_FORMAT_SUPPORT_BLENDABLE: ::libc::c_uint = 32768;
pub const D3D11_FORMAT_SUPPORT_DEPTH_STENCIL: ::libc::c_uint = 65536;
pub const D3D11_FORMAT_SUPPORT_CPU_LOCKABLE: ::libc::c_uint = 131072;
pub const D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE: ::libc::c_uint = 262144;
pub const D3D11_FORMAT_SUPPORT_DISPLAY: ::libc::c_uint = 524288;
pub const D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT: ::libc::c_uint =
    1048576;
pub const D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET: ::libc::c_uint =
    2097152;
pub const D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD: ::libc::c_uint = 4194304;
pub const D3D11_FORMAT_SUPPORT_SHADER_GATHER: ::libc::c_uint = 8388608;
pub const D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST: ::libc::c_uint = 16777216;
pub const D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW: ::libc::c_uint =
    33554432;
pub const D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON: ::libc::c_uint =
    67108864;
pub type D3D11_FORMAT_SUPPORT = Enum_D3D11_FORMAT_SUPPORT;
pub type Enum_D3D11_FORMAT_SUPPORT2 = ::libc::c_uint;
pub const D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD: ::libc::c_uint = 1;
pub const D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS: ::libc::c_uint = 2;
pub const D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE:
          ::libc::c_uint =
    4;
pub const D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE: ::libc::c_uint = 8;
pub const D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX: ::libc::c_uint =
    16;
pub const D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX: ::libc::c_uint
          =
    32;
pub const D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD: ::libc::c_uint = 64;
pub const D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE: ::libc::c_uint = 128;
pub type D3D11_FORMAT_SUPPORT2 = Enum_D3D11_FORMAT_SUPPORT2;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11AsynchronousVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11Asynchronous,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11Asynchronous)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Asynchronous)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Asynchronous,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11Asynchronous,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11Asynchronous,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Asynchronous,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDataSize: ::std::option::Option<extern "C" fn
                                               (This: *mut ID3D11Asynchronous)
                                               -> UINT>,
}
impl ::std::default::Default for Struct_ID3D11AsynchronousVtbl {
    fn default() -> Struct_ID3D11AsynchronousVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11AsynchronousVtbl = Struct_ID3D11AsynchronousVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Asynchronous {
    pub lpVtbl: *mut Struct_ID3D11AsynchronousVtbl,
}
impl ::std::default::Default for Struct_ID3D11Asynchronous {
    fn default() -> Struct_ID3D11Asynchronous {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type Enum_D3D11_ASYNC_GETDATA_FLAG = ::libc::c_uint;
pub const D3D11_ASYNC_GETDATA_DONOTFLUSH: ::libc::c_uint = 1;
pub type D3D11_ASYNC_GETDATA_FLAG = Enum_D3D11_ASYNC_GETDATA_FLAG;
pub type Enum_D3D11_QUERY = ::libc::c_uint;
pub const D3D11_QUERY_EVENT: ::libc::c_uint = 0;
pub const D3D11_QUERY_OCCLUSION: ::libc::c_uint = 1;
pub const D3D11_QUERY_TIMESTAMP: ::libc::c_uint = 2;
pub const D3D11_QUERY_TIMESTAMP_DISJOINT: ::libc::c_uint = 3;
pub const D3D11_QUERY_PIPELINE_STATISTICS: ::libc::c_uint = 4;
pub const D3D11_QUERY_OCCLUSION_PREDICATE: ::libc::c_uint = 5;
pub const D3D11_QUERY_SO_STATISTICS: ::libc::c_uint = 6;
pub const D3D11_QUERY_SO_OVERFLOW_PREDICATE: ::libc::c_uint = 7;
pub const D3D11_QUERY_SO_STATISTICS_STREAM0: ::libc::c_uint = 8;
pub const D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0: ::libc::c_uint = 9;
pub const D3D11_QUERY_SO_STATISTICS_STREAM1: ::libc::c_uint = 10;
pub const D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1: ::libc::c_uint = 11;
pub const D3D11_QUERY_SO_STATISTICS_STREAM2: ::libc::c_uint = 12;
pub const D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2: ::libc::c_uint = 13;
pub const D3D11_QUERY_SO_STATISTICS_STREAM3: ::libc::c_uint = 14;
pub const D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3: ::libc::c_uint = 15;
pub type D3D11_QUERY = Enum_D3D11_QUERY;
pub type Enum_D3D11_QUERY_MISC_FLAG = ::libc::c_uint;
pub const D3D11_QUERY_MISC_PREDICATEHINT: ::libc::c_uint = 1;
pub type D3D11_QUERY_MISC_FLAG = Enum_D3D11_QUERY_MISC_FLAG;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_QUERY_DESC {
    pub Query: D3D11_QUERY,
    pub MiscFlags: UINT,
}
impl ::std::default::Default for Struct_D3D11_QUERY_DESC {
    fn default() -> Struct_D3D11_QUERY_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_QUERY_DESC = Struct_D3D11_QUERY_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11QueryVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Query,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut ID3D11Query)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut ID3D11Query)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Query,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Query,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Query,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Query,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDataSize: ::std::option::Option<extern "C" fn
                                               (This: *mut ID3D11Query)
                                               -> UINT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Query,
                                            pDesc: *mut D3D11_QUERY_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11QueryVtbl {
    fn default() -> Struct_ID3D11QueryVtbl { unsafe { ::std::mem::zeroed() } }
}
pub type ID3D11QueryVtbl = Struct_ID3D11QueryVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Query {
    pub lpVtbl: *mut Struct_ID3D11QueryVtbl,
}
impl ::std::default::Default for Struct_ID3D11Query {
    fn default() -> Struct_ID3D11Query { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11PredicateVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Predicate,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11Predicate)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Predicate)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Predicate,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Predicate,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Predicate,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Predicate,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDataSize: ::std::option::Option<extern "C" fn
                                               (This: *mut ID3D11Predicate)
                                               -> UINT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Predicate,
                                            pDesc: *mut D3D11_QUERY_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11PredicateVtbl {
    fn default() -> Struct_ID3D11PredicateVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11PredicateVtbl = Struct_ID3D11PredicateVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Predicate {
    pub lpVtbl: *mut Struct_ID3D11PredicateVtbl,
}
impl ::std::default::Default for Struct_ID3D11Predicate {
    fn default() -> Struct_ID3D11Predicate { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_QUERY_DATA_TIMESTAMP_DISJOINT {
    pub Frequency: UINT64,
    pub Disjoint: BOOL,
}
impl ::std::default::Default for Struct_D3D11_QUERY_DATA_TIMESTAMP_DISJOINT {
    fn default() -> Struct_D3D11_QUERY_DATA_TIMESTAMP_DISJOINT {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_QUERY_DATA_TIMESTAMP_DISJOINT =
    Struct_D3D11_QUERY_DATA_TIMESTAMP_DISJOINT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_QUERY_DATA_PIPELINE_STATISTICS {
    pub IAVertices: UINT64,
    pub IAPrimitives: UINT64,
    pub VSInvocations: UINT64,
    pub GSInvocations: UINT64,
    pub GSPrimitives: UINT64,
    pub CInvocations: UINT64,
    pub CPrimitives: UINT64,
    pub PSInvocations: UINT64,
    pub HSInvocations: UINT64,
    pub DSInvocations: UINT64,
    pub CSInvocations: UINT64,
}
impl ::std::default::Default for Struct_D3D11_QUERY_DATA_PIPELINE_STATISTICS {
    fn default() -> Struct_D3D11_QUERY_DATA_PIPELINE_STATISTICS {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_QUERY_DATA_PIPELINE_STATISTICS =
    Struct_D3D11_QUERY_DATA_PIPELINE_STATISTICS;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_QUERY_DATA_SO_STATISTICS {
    pub NumPrimitivesWritten: UINT64,
    pub PrimitivesStorageNeeded: UINT64,
}
impl ::std::default::Default for Struct_D3D11_QUERY_DATA_SO_STATISTICS {
    fn default() -> Struct_D3D11_QUERY_DATA_SO_STATISTICS {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_QUERY_DATA_SO_STATISTICS =
    Struct_D3D11_QUERY_DATA_SO_STATISTICS;
pub type Enum_D3D11_COUNTER = ::libc::c_uint;
pub const D3D11_COUNTER_DEVICE_DEPENDENT_0: ::libc::c_uint = 1073741824;
pub type D3D11_COUNTER = Enum_D3D11_COUNTER;
pub type Enum_D3D11_COUNTER_TYPE = ::libc::c_uint;
pub const D3D11_COUNTER_TYPE_FLOAT32: ::libc::c_uint = 0;
pub const D3D11_COUNTER_TYPE_UINT16: ::libc::c_uint = 1;
pub const D3D11_COUNTER_TYPE_UINT32: ::libc::c_uint = 2;
pub const D3D11_COUNTER_TYPE_UINT64: ::libc::c_uint = 3;
pub type D3D11_COUNTER_TYPE = Enum_D3D11_COUNTER_TYPE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_COUNTER_DESC {
    pub Counter: D3D11_COUNTER,
    pub MiscFlags: UINT,
}
impl ::std::default::Default for Struct_D3D11_COUNTER_DESC {
    fn default() -> Struct_D3D11_COUNTER_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_COUNTER_DESC = Struct_D3D11_COUNTER_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_COUNTER_INFO {
    pub LastDeviceDependentCounter: D3D11_COUNTER,
    pub NumSimultaneousCounters: UINT,
    pub NumDetectableParallelUnits: UINT8,
}
impl ::std::default::Default for Struct_D3D11_COUNTER_INFO {
    fn default() -> Struct_D3D11_COUNTER_INFO {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_COUNTER_INFO = Struct_D3D11_COUNTER_INFO;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11CounterVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Counter,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut ID3D11Counter)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut ID3D11Counter)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11Counter,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Counter,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Counter,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Counter,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetDataSize: ::std::option::Option<extern "C" fn
                                               (This: *mut ID3D11Counter)
                                               -> UINT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11Counter,
                                            pDesc: *mut D3D11_COUNTER_DESC)
                                           -> ()>,
}
impl ::std::default::Default for Struct_ID3D11CounterVtbl {
    fn default() -> Struct_ID3D11CounterVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11CounterVtbl = Struct_ID3D11CounterVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Counter {
    pub lpVtbl: *mut Struct_ID3D11CounterVtbl,
}
impl ::std::default::Default for Struct_ID3D11Counter {
    fn default() -> Struct_ID3D11Counter { unsafe { ::std::mem::zeroed() } }
}
pub type Enum_D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS = ::libc::c_uint;
pub const D3D11_STANDARD_MULTISAMPLE_PATTERN: ::libc::c_uint = -1;
pub const D3D11_CENTER_MULTISAMPLE_PATTERN: ::libc::c_uint = -2;
pub type D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS =
    Enum_D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS;
pub type Enum_D3D11_DEVICE_CONTEXT_TYPE = ::libc::c_uint;
pub const D3D11_DEVICE_CONTEXT_IMMEDIATE: ::libc::c_uint = 0;
pub const D3D11_DEVICE_CONTEXT_DEFERRED: ::libc::c_uint = 1;
pub type D3D11_DEVICE_CONTEXT_TYPE = Enum_D3D11_DEVICE_CONTEXT_TYPE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_CLASS_INSTANCE_DESC {
    pub InstanceId: UINT,
    pub InstanceIndex: UINT,
    pub TypeId: UINT,
    pub ConstantBuffer: UINT,
    pub BaseConstantBufferOffset: UINT,
    pub BaseTexture: UINT,
    pub BaseSampler: UINT,
    pub Created: BOOL,
}
impl ::std::default::Default for Struct_D3D11_CLASS_INSTANCE_DESC {
    fn default() -> Struct_D3D11_CLASS_INSTANCE_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_CLASS_INSTANCE_DESC = Struct_D3D11_CLASS_INSTANCE_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ClassInstanceVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ClassInstance,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11ClassInstance)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11ClassInstance)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11ClassInstance,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ClassInstance,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ClassInstance,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11ClassInstance,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetClassLinkage: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut ID3D11ClassInstance,
                                                    ppLinkage:
                                                        *mut *mut ID3D11ClassLinkage)
                                                   -> ()>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11ClassInstance,
                                            pDesc:
                                                *mut D3D11_CLASS_INSTANCE_DESC)
                                           -> ()>,
    pub GetInstanceName: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut ID3D11ClassInstance,
                                                    pInstanceName: LPSTR,
                                                    pBufferLength:
                                                        *mut SIZE_T) -> ()>,
    pub GetTypeName: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11ClassInstance,
                                                pTypeName: LPSTR,
                                                pBufferLength: *mut SIZE_T)
                                               -> ()>,
}
impl ::std::default::Default for Struct_ID3D11ClassInstanceVtbl {
    fn default() -> Struct_ID3D11ClassInstanceVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ClassInstanceVtbl = Struct_ID3D11ClassInstanceVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ClassInstance {
    pub lpVtbl: *mut Struct_ID3D11ClassInstanceVtbl,
}
impl ::std::default::Default for Struct_ID3D11ClassInstance {
    fn default() -> Struct_ID3D11ClassInstance {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ClassLinkageVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ClassLinkage,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11ClassLinkage)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11ClassLinkage)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11ClassLinkage,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ClassLinkage,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ClassLinkage,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11ClassLinkage,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetClassInstance: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11ClassLinkage,
                                                     pClassInstanceName:
                                                         LPCSTR,
                                                     InstanceIndex: UINT,
                                                     ppInstance:
                                                         *mut *mut ID3D11ClassInstance)
                                                    -> HRESULT>,
    pub CreateClassInstance: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11ClassLinkage,
                                                        pClassTypeName:
                                                            LPCSTR,
                                                        ConstantBufferOffset:
                                                            UINT,
                                                        ConstantVectorOffset:
                                                            UINT,
                                                        TextureOffset: UINT,
                                                        SamplerOffset: UINT,
                                                        ppInstance:
                                                            *mut *mut ID3D11ClassInstance)
                                                       -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11ClassLinkageVtbl {
    fn default() -> Struct_ID3D11ClassLinkageVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ClassLinkageVtbl = Struct_ID3D11ClassLinkageVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ClassLinkage {
    pub lpVtbl: *mut Struct_ID3D11ClassLinkageVtbl,
}
impl ::std::default::Default for Struct_ID3D11ClassLinkage {
    fn default() -> Struct_ID3D11ClassLinkage {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11CommandListVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11CommandList,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11CommandList)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11CommandList)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11CommandList,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11CommandList,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11CommandList,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11CommandList,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetContextFlags: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut ID3D11CommandList)
                                                   -> UINT>,
}
impl ::std::default::Default for Struct_ID3D11CommandListVtbl {
    fn default() -> Struct_ID3D11CommandListVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11CommandListVtbl = Struct_ID3D11CommandListVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11CommandList {
    pub lpVtbl: *mut Struct_ID3D11CommandListVtbl,
}
impl ::std::default::Default for Struct_ID3D11CommandList {
    fn default() -> Struct_ID3D11CommandList {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type Enum_D3D11_FEATURE = ::libc::c_uint;
pub const D3D11_FEATURE_THREADING: ::libc::c_uint = 0;
pub const D3D11_FEATURE_DOUBLES: ::libc::c_uint = 1;
pub const D3D11_FEATURE_FORMAT_SUPPORT: ::libc::c_uint = 2;
pub const D3D11_FEATURE_FORMAT_SUPPORT2: ::libc::c_uint = 3;
pub const D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS: ::libc::c_uint = 4;
pub type D3D11_FEATURE = Enum_D3D11_FEATURE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_FEATURE_DATA_THREADING {
    pub DriverConcurrentCreates: BOOL,
    pub DriverCommandLists: BOOL,
}
impl ::std::default::Default for Struct_D3D11_FEATURE_DATA_THREADING {
    fn default() -> Struct_D3D11_FEATURE_DATA_THREADING {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_FEATURE_DATA_THREADING = Struct_D3D11_FEATURE_DATA_THREADING;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_FEATURE_DATA_DOUBLES {
    pub DoublePrecisionFloatShaderOps: BOOL,
}
impl ::std::default::Default for Struct_D3D11_FEATURE_DATA_DOUBLES {
    fn default() -> Struct_D3D11_FEATURE_DATA_DOUBLES {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_FEATURE_DATA_DOUBLES = Struct_D3D11_FEATURE_DATA_DOUBLES;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT {
    pub InFormat: DXGI_FORMAT,
    pub OutFormatSupport: UINT,
}
impl ::std::default::Default for Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT {
    fn default() -> Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_FEATURE_DATA_FORMAT_SUPPORT =
    Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT2 {
    pub InFormat: DXGI_FORMAT,
    pub OutFormatSupport2: UINT,
}
impl ::std::default::Default for Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT2 {
    fn default() -> Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT2 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_FEATURE_DATA_FORMAT_SUPPORT2 =
    Struct_D3D11_FEATURE_DATA_FORMAT_SUPPORT2;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS {
    pub ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x: BOOL,
}
impl ::std::default::Default for
 Struct_D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS {
    fn default() -> Struct_D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS =
    Struct_D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DeviceContextVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceContext,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11DeviceContext)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11DeviceContext)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut ID3D11DeviceContext,
                                              ppDevice:
                                                  *mut *mut ID3D11Device)
                                             -> ()>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceContext,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceContext,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11DeviceContext,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub VSSetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *const *mut ID3D11Buffer)
                                                        -> ()>,
    pub PSSetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *const *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub PSSetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                pPixelShader:
                                                    *mut ID3D11PixelShader,
                                                ppClassInstances:
                                                    *const *mut ID3D11ClassInstance,
                                                NumClassInstances: UINT)
                                               -> ()>,
    pub PSSetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *const *mut ID3D11SamplerState)
                                                 -> ()>,
    pub VSSetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                pVertexShader:
                                                    *mut ID3D11VertexShader,
                                                ppClassInstances:
                                                    *const *mut ID3D11ClassInstance,
                                                NumClassInstances: UINT)
                                               -> ()>,
    pub DrawIndexed: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                IndexCount: UINT,
                                                StartIndexLocation: UINT,
                                                BaseVertexLocation: INT)
                                               -> ()>,
    pub Draw: ::std::option::Option<extern "C" fn
                                        (This: *mut ID3D11DeviceContext,
                                         VertexCount: UINT,
                                         StartVertexLocation: UINT) -> ()>,
    pub Map: ::std::option::Option<extern "C" fn
                                       (This: *mut ID3D11DeviceContext,
                                        pResource: *mut ID3D11Resource,
                                        Subresource: UINT, MapType: D3D11_MAP,
                                        MapFlags: UINT,
                                        pMappedResource:
                                            *mut D3D11_MAPPED_SUBRESOURCE)
                                       -> HRESULT>,
    pub Unmap: ::std::option::Option<extern "C" fn
                                         (This: *mut ID3D11DeviceContext,
                                          pResource: *mut ID3D11Resource,
                                          Subresource: UINT) -> ()>,
    pub PSSetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *const *mut ID3D11Buffer)
                                                        -> ()>,
    pub IASetInputLayout: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11DeviceContext,
                                                     pInputLayout:
                                                         *mut ID3D11InputLayout)
                                                    -> ()>,
    pub IASetVertexBuffers: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11DeviceContext,
                                                       StartSlot: UINT,
                                                       NumBuffers: UINT,
                                                       ppVertexBuffers:
                                                           *const *mut ID3D11Buffer,
                                                       pStrides: *const UINT,
                                                       pOffsets: *const UINT)
                                                      -> ()>,
    pub IASetIndexBuffer: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11DeviceContext,
                                                     pIndexBuffer:
                                                         *mut ID3D11Buffer,
                                                     Format: DXGI_FORMAT,
                                                     Offset: UINT) -> ()>,
    pub DrawIndexedInstanced: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         IndexCountPerInstance:
                                                             UINT,
                                                         InstanceCount: UINT,
                                                         StartIndexLocation:
                                                             UINT,
                                                         BaseVertexLocation:
                                                             INT,
                                                         StartInstanceLocation:
                                                             UINT) -> ()>,
    pub DrawInstanced: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  VertexCountPerInstance:
                                                      UINT,
                                                  InstanceCount: UINT,
                                                  StartVertexLocation: UINT,
                                                  StartInstanceLocation: UINT)
                                                 -> ()>,
    pub GSSetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *const *mut ID3D11Buffer)
                                                        -> ()>,
    pub GSSetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                pShader:
                                                    *mut ID3D11GeometryShader,
                                                ppClassInstances:
                                                    *const *mut ID3D11ClassInstance,
                                                NumClassInstances: UINT)
                                               -> ()>,
    pub IASetPrimitiveTopology: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11DeviceContext,
                                                           Topology:
                                                               D3D11_PRIMITIVE_TOPOLOGY)
                                                          -> ()>,
    pub VSSetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *const *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub VSSetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *const *mut ID3D11SamplerState)
                                                 -> ()>,
    pub Begin: ::std::option::Option<extern "C" fn
                                         (This: *mut ID3D11DeviceContext,
                                          pAsync: *mut ID3D11Asynchronous)
                                         -> ()>,
    pub End: ::std::option::Option<extern "C" fn
                                       (This: *mut ID3D11DeviceContext,
                                        pAsync: *mut ID3D11Asynchronous)
                                       -> ()>,
    pub GetData: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11DeviceContext,
                                            pAsync: *mut ID3D11Asynchronous,
                                            pData: *mut ::libc::c_void,
                                            DataSize: UINT,
                                            GetDataFlags: UINT) -> HRESULT>,
    pub SetPredication: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceContext,
                                                   pPredicate:
                                                       *mut ID3D11Predicate,
                                                   PredicateValue: BOOL)
                                                  -> ()>,
    pub GSSetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *const *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub GSSetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *const *mut ID3D11SamplerState)
                                                 -> ()>,
    pub OMSetRenderTargets: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11DeviceContext,
                                                       NumViews: UINT,
                                                       ppRenderTargetViews:
                                                           *const *mut ID3D11RenderTargetView,
                                                       pDepthStencilView:
                                                           *mut ID3D11DepthStencilView)
                                                      -> ()>,
    pub OMSetRenderTargetsAndUnorderedAccessViews: ::std::option::Option<extern "C" fn
                                                                             (This:
                                                                                  *mut ID3D11DeviceContext,
                                                                              NumRTVs:
                                                                                  UINT,
                                                                              ppRenderTargetViews:
                                                                                  *const *mut ID3D11RenderTargetView,
                                                                              pDepthStencilView:
                                                                                  *mut ID3D11DepthStencilView,
                                                                              UAVStartSlot:
                                                                                  UINT,
                                                                              NumUAVs:
                                                                                  UINT,
                                                                              ppUnorderedAccessViews:
                                                                                  *const *mut ID3D11UnorderedAccessView,
                                                                              pUAVInitialCounts:
                                                                                  *const UINT)
                                                                             ->
                                                                                 ()>,
    pub OMSetBlendState: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut ID3D11DeviceContext,
                                                    pBlendState:
                                                        *mut ID3D11BlendState,
                                                    BlendFactor: *mut FLOAT,
                                                    SampleMask: UINT) -> ()>,
    pub OMSetDepthStencilState: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11DeviceContext,
                                                           pDepthStencilState:
                                                               *mut ID3D11DepthStencilState,
                                                           StencilRef: UINT)
                                                          -> ()>,
    pub SOSetTargets: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut ID3D11DeviceContext,
                                                 NumBuffers: UINT,
                                                 ppSOTargets:
                                                     *const *mut ID3D11Buffer,
                                                 pOffsets: *const UINT)
                                                -> ()>,
    pub DrawAuto: ::std::option::Option<extern "C" fn
                                            (This: *mut ID3D11DeviceContext)
                                            -> ()>,
    pub DrawIndexedInstancedIndirect: ::std::option::Option<extern "C" fn
                                                                (This:
                                                                     *mut ID3D11DeviceContext,
                                                                 pBufferForArgs:
                                                                     *mut ID3D11Buffer,
                                                                 AlignedByteOffsetForArgs:
                                                                     UINT)
                                                                -> ()>,
    pub DrawInstancedIndirect: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut ID3D11DeviceContext,
                                                          pBufferForArgs:
                                                              *mut ID3D11Buffer,
                                                          AlignedByteOffsetForArgs:
                                                              UINT) -> ()>,
    pub Dispatch: ::std::option::Option<extern "C" fn
                                            (This: *mut ID3D11DeviceContext,
                                             ThreadGroupCountX: UINT,
                                             ThreadGroupCountY: UINT,
                                             ThreadGroupCountZ: UINT) -> ()>,
    pub DispatchIndirect: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11DeviceContext,
                                                     pBufferForArgs:
                                                         *mut ID3D11Buffer,
                                                     AlignedByteOffsetForArgs:
                                                         UINT) -> ()>,
    pub RSSetState: ::std::option::Option<extern "C" fn
                                              (This: *mut ID3D11DeviceContext,
                                               pRasterizerState:
                                                   *mut ID3D11RasterizerState)
                                              -> ()>,
    pub RSSetViewports: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceContext,
                                                   NumViewports: UINT,
                                                   pViewports:
                                                       *const D3D11_VIEWPORT)
                                                  -> ()>,
    pub RSSetScissorRects: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11DeviceContext,
                                                      NumRects: UINT,
                                                      pRects:
                                                          *const D3D11_RECT)
                                                     -> ()>,
    pub CopySubresourceRegion: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut ID3D11DeviceContext,
                                                          pDstResource:
                                                              *mut ID3D11Resource,
                                                          DstSubresource:
                                                              UINT,
                                                          DstX: UINT,
                                                          DstY: UINT,
                                                          DstZ: UINT,
                                                          pSrcResource:
                                                              *mut ID3D11Resource,
                                                          SrcSubresource:
                                                              UINT,
                                                          pSrcBox:
                                                              *const D3D11_BOX)
                                                         -> ()>,
    pub CopyResource: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut ID3D11DeviceContext,
                                                 pDstResource:
                                                     *mut ID3D11Resource,
                                                 pSrcResource:
                                                     *mut ID3D11Resource)
                                                -> ()>,
    pub UpdateSubresource: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11DeviceContext,
                                                      pDstResource:
                                                          *mut ID3D11Resource,
                                                      DstSubresource: UINT,
                                                      pDstBox:
                                                          *const D3D11_BOX,
                                                      pSrcData:
                                                          *const ::libc::c_void,
                                                      SrcRowPitch: UINT,
                                                      SrcDepthPitch: UINT)
                                                     -> ()>,
    pub CopyStructureCount: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11DeviceContext,
                                                       pDstBuffer:
                                                           *mut ID3D11Buffer,
                                                       DstAlignedByteOffset:
                                                           UINT,
                                                       pSrcView:
                                                           *mut ID3D11UnorderedAccessView)
                                                      -> ()>,
    pub ClearRenderTargetView: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut ID3D11DeviceContext,
                                                          pRenderTargetView:
                                                              *mut ID3D11RenderTargetView,
                                                          ColorRGBA:
                                                              *mut FLOAT)
                                                         -> ()>,
    pub ClearUnorderedAccessViewUint: ::std::option::Option<extern "C" fn
                                                                (This:
                                                                     *mut ID3D11DeviceContext,
                                                                 pUnorderedAccessView:
                                                                     *mut ID3D11UnorderedAccessView,
                                                                 Values:
                                                                     *mut UINT)
                                                                -> ()>,
    pub ClearUnorderedAccessViewFloat: ::std::option::Option<extern "C" fn
                                                                 (This:
                                                                      *mut ID3D11DeviceContext,
                                                                  pUnorderedAccessView:
                                                                      *mut ID3D11UnorderedAccessView,
                                                                  Values:
                                                                      *mut FLOAT)
                                                                 -> ()>,
    pub ClearDepthStencilView: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut ID3D11DeviceContext,
                                                          pDepthStencilView:
                                                              *mut ID3D11DepthStencilView,
                                                          ClearFlags: UINT,
                                                          Depth: FLOAT,
                                                          Stencil: UINT8)
                                                         -> ()>,
    pub GenerateMips: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut ID3D11DeviceContext,
                                                 pShaderResourceView:
                                                     *mut ID3D11ShaderResourceView)
                                                -> ()>,
    pub SetResourceMinLOD: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11DeviceContext,
                                                      pResource:
                                                          *mut ID3D11Resource,
                                                      MinLOD: FLOAT) -> ()>,
    pub GetResourceMinLOD: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11DeviceContext,
                                                      pResource:
                                                          *mut ID3D11Resource)
                                                     -> FLOAT>,
    pub ResolveSubresource: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11DeviceContext,
                                                       pDstResource:
                                                           *mut ID3D11Resource,
                                                       DstSubresource: UINT,
                                                       pSrcResource:
                                                           *mut ID3D11Resource,
                                                       SrcSubresource: UINT,
                                                       Format: DXGI_FORMAT)
                                                      -> ()>,
    pub ExecuteCommandList: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11DeviceContext,
                                                       pCommandList:
                                                           *mut ID3D11CommandList,
                                                       RestoreContextState:
                                                           BOOL) -> ()>,
    pub HSSetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *const *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub HSSetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                pHullShader:
                                                    *mut ID3D11HullShader,
                                                ppClassInstances:
                                                    *const *mut ID3D11ClassInstance,
                                                NumClassInstances: UINT)
                                               -> ()>,
    pub HSSetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *const *mut ID3D11SamplerState)
                                                 -> ()>,
    pub HSSetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *const *mut ID3D11Buffer)
                                                        -> ()>,
    pub DSSetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *const *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub DSSetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                pDomainShader:
                                                    *mut ID3D11DomainShader,
                                                ppClassInstances:
                                                    *const *mut ID3D11ClassInstance,
                                                NumClassInstances: UINT)
                                               -> ()>,
    pub DSSetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *const *mut ID3D11SamplerState)
                                                 -> ()>,
    pub DSSetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *const *mut ID3D11Buffer)
                                                        -> ()>,
    pub CSSetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *const *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub CSSetUnorderedAccessViews: ::std::option::Option<extern "C" fn
                                                             (This:
                                                                  *mut ID3D11DeviceContext,
                                                              StartSlot: UINT,
                                                              NumUAVs: UINT,
                                                              ppUnorderedAccessViews:
                                                                  *const *mut ID3D11UnorderedAccessView,
                                                              pUAVInitialCounts:
                                                                  *const UINT)
                                                             -> ()>,
    pub CSSetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                pComputeShader:
                                                    *mut ID3D11ComputeShader,
                                                ppClassInstances:
                                                    *const *mut ID3D11ClassInstance,
                                                NumClassInstances: UINT)
                                               -> ()>,
    pub CSSetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *const *mut ID3D11SamplerState)
                                                 -> ()>,
    pub CSSetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *const *mut ID3D11Buffer)
                                                        -> ()>,
    pub VSGetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *mut *mut ID3D11Buffer)
                                                        -> ()>,
    pub PSGetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *mut *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub PSGetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                ppPixelShader:
                                                    *mut *mut ID3D11PixelShader,
                                                ppClassInstances:
                                                    *mut *mut ID3D11ClassInstance,
                                                pNumClassInstances: *mut UINT)
                                               -> ()>,
    pub PSGetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *mut *mut ID3D11SamplerState)
                                                 -> ()>,
    pub VSGetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                ppVertexShader:
                                                    *mut *mut ID3D11VertexShader,
                                                ppClassInstances:
                                                    *mut *mut ID3D11ClassInstance,
                                                pNumClassInstances: *mut UINT)
                                               -> ()>,
    pub PSGetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *mut *mut ID3D11Buffer)
                                                        -> ()>,
    pub IAGetInputLayout: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11DeviceContext,
                                                     ppInputLayout:
                                                         *mut *mut ID3D11InputLayout)
                                                    -> ()>,
    pub IAGetVertexBuffers: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11DeviceContext,
                                                       StartSlot: UINT,
                                                       NumBuffers: UINT,
                                                       ppVertexBuffers:
                                                           *mut *mut ID3D11Buffer,
                                                       pStrides: *mut UINT,
                                                       pOffsets: *mut UINT)
                                                      -> ()>,
    pub IAGetIndexBuffer: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11DeviceContext,
                                                     pIndexBuffer:
                                                         *mut *mut ID3D11Buffer,
                                                     Format: *mut DXGI_FORMAT,
                                                     Offset: *mut UINT)
                                                    -> ()>,
    pub GSGetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *mut *mut ID3D11Buffer)
                                                        -> ()>,
    pub GSGetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                ppGeometryShader:
                                                    *mut *mut ID3D11GeometryShader,
                                                ppClassInstances:
                                                    *mut *mut ID3D11ClassInstance,
                                                pNumClassInstances: *mut UINT)
                                               -> ()>,
    pub IAGetPrimitiveTopology: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11DeviceContext,
                                                           pTopology:
                                                               *mut D3D11_PRIMITIVE_TOPOLOGY)
                                                          -> ()>,
    pub VSGetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *mut *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub VSGetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *mut *mut ID3D11SamplerState)
                                                 -> ()>,
    pub GetPredication: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceContext,
                                                   ppPredicate:
                                                       *mut *mut ID3D11Predicate,
                                                   pPredicateValue: *mut BOOL)
                                                  -> ()>,
    pub GSGetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *mut *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub GSGetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *mut *mut ID3D11SamplerState)
                                                 -> ()>,
    pub OMGetRenderTargets: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11DeviceContext,
                                                       NumViews: UINT,
                                                       ppRenderTargetViews:
                                                           *mut *mut ID3D11RenderTargetView,
                                                       ppDepthStencilView:
                                                           *mut *mut ID3D11DepthStencilView)
                                                      -> ()>,
    pub OMGetRenderTargetsAndUnorderedAccessViews: ::std::option::Option<extern "C" fn
                                                                             (This:
                                                                                  *mut ID3D11DeviceContext,
                                                                              NumRTVs:
                                                                                  UINT,
                                                                              ppRenderTargetViews:
                                                                                  *mut *mut ID3D11RenderTargetView,
                                                                              ppDepthStencilView:
                                                                                  *mut *mut ID3D11DepthStencilView,
                                                                              UAVStartSlot:
                                                                                  UINT,
                                                                              NumUAVs:
                                                                                  UINT,
                                                                              ppUnorderedAccessViews:
                                                                                  *mut *mut ID3D11UnorderedAccessView)
                                                                             ->
                                                                                 ()>,
    pub OMGetBlendState: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut ID3D11DeviceContext,
                                                    ppBlendState:
                                                        *mut *mut ID3D11BlendState,
                                                    BlendFactor: *mut FLOAT,
                                                    pSampleMask: *mut UINT)
                                                   -> ()>,
    pub OMGetDepthStencilState: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11DeviceContext,
                                                           ppDepthStencilState:
                                                               *mut *mut ID3D11DepthStencilState,
                                                           pStencilRef:
                                                               *mut UINT)
                                                          -> ()>,
    pub SOGetTargets: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut ID3D11DeviceContext,
                                                 NumBuffers: UINT,
                                                 ppSOTargets:
                                                     *mut *mut ID3D11Buffer)
                                                -> ()>,
    pub RSGetState: ::std::option::Option<extern "C" fn
                                              (This: *mut ID3D11DeviceContext,
                                               ppRasterizerState:
                                                   *mut *mut ID3D11RasterizerState)
                                              -> ()>,
    pub RSGetViewports: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11DeviceContext,
                                                   pNumViewports: *mut UINT,
                                                   pViewports:
                                                       *mut D3D11_VIEWPORT)
                                                  -> ()>,
    pub RSGetScissorRects: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11DeviceContext,
                                                      pNumRects: *mut UINT,
                                                      pRects: *mut D3D11_RECT)
                                                     -> ()>,
    pub HSGetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *mut *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub HSGetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                ppHullShader:
                                                    *mut *mut ID3D11HullShader,
                                                ppClassInstances:
                                                    *mut *mut ID3D11ClassInstance,
                                                pNumClassInstances: *mut UINT)
                                               -> ()>,
    pub HSGetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *mut *mut ID3D11SamplerState)
                                                 -> ()>,
    pub HSGetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *mut *mut ID3D11Buffer)
                                                        -> ()>,
    pub DSGetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *mut *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub DSGetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                ppDomainShader:
                                                    *mut *mut ID3D11DomainShader,
                                                ppClassInstances:
                                                    *mut *mut ID3D11ClassInstance,
                                                pNumClassInstances: *mut UINT)
                                               -> ()>,
    pub DSGetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *mut *mut ID3D11SamplerState)
                                                 -> ()>,
    pub DSGetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *mut *mut ID3D11Buffer)
                                                        -> ()>,
    pub CSGetShaderResources: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumViews: UINT,
                                                         ppShaderResourceViews:
                                                             *mut *mut ID3D11ShaderResourceView)
                                                        -> ()>,
    pub CSGetUnorderedAccessViews: ::std::option::Option<extern "C" fn
                                                             (This:
                                                                  *mut ID3D11DeviceContext,
                                                              StartSlot: UINT,
                                                              NumUAVs: UINT,
                                                              ppUnorderedAccessViews:
                                                                  *mut *mut ID3D11UnorderedAccessView)
                                                             -> ()>,
    pub CSGetShader: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut ID3D11DeviceContext,
                                                ppComputeShader:
                                                    *mut *mut ID3D11ComputeShader,
                                                ppClassInstances:
                                                    *mut *mut ID3D11ClassInstance,
                                                pNumClassInstances: *mut UINT)
                                               -> ()>,
    pub CSGetSamplers: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut ID3D11DeviceContext,
                                                  StartSlot: UINT,
                                                  NumSamplers: UINT,
                                                  ppSamplers:
                                                      *mut *mut ID3D11SamplerState)
                                                 -> ()>,
    pub CSGetConstantBuffers: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11DeviceContext,
                                                         StartSlot: UINT,
                                                         NumBuffers: UINT,
                                                         ppConstantBuffers:
                                                             *mut *mut ID3D11Buffer)
                                                        -> ()>,
    pub ClearState: ::std::option::Option<extern "C" fn
                                              (This: *mut ID3D11DeviceContext)
                                              -> ()>,
    pub Flush: ::std::option::Option<extern "C" fn
                                         (This: *mut ID3D11DeviceContext)
                                         -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11DeviceContext)
                                           -> D3D11_DEVICE_CONTEXT_TYPE>,
    pub GetContextFlags: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut ID3D11DeviceContext)
                                                   -> UINT>,
    pub FinishCommandList: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11DeviceContext,
                                                      RestoreDeferredContextState:
                                                          BOOL,
                                                      ppCommandList:
                                                          *mut *mut ID3D11CommandList)
                                                     -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11DeviceContextVtbl {
    fn default() -> Struct_ID3D11DeviceContextVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11DeviceContextVtbl = Struct_ID3D11DeviceContextVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DeviceContext {
    pub lpVtbl: *mut Struct_ID3D11DeviceContextVtbl,
}
impl ::std::default::Default for Struct_ID3D11DeviceContext {
    fn default() -> Struct_ID3D11DeviceContext {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11DeviceVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Device,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut ID3D11Device)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut ID3D11Device)
                                           -> ULONG>,
    pub CreateBuffer: ::std::option::Option<extern "C" fn
                                                (This: *mut ID3D11Device,
                                                 pDesc:
                                                     *const D3D11_BUFFER_DESC,
                                                 pInitialData:
                                                     *const D3D11_SUBRESOURCE_DATA,
                                                 ppBuffer:
                                                     *mut *mut ID3D11Buffer)
                                                -> HRESULT>,
    pub CreateTexture1D: ::std::option::Option<extern "C" fn
                                                   (This: *mut ID3D11Device,
                                                    pDesc:
                                                        *const D3D11_TEXTURE1D_DESC,
                                                    pInitialData:
                                                        *const D3D11_SUBRESOURCE_DATA,
                                                    ppTexture1D:
                                                        *mut *mut ID3D11Texture1D)
                                                   -> HRESULT>,
    pub CreateTexture2D: ::std::option::Option<extern "C" fn
                                                   (This: *mut ID3D11Device,
                                                    pDesc:
                                                        *const D3D11_TEXTURE2D_DESC,
                                                    pInitialData:
                                                        *const D3D11_SUBRESOURCE_DATA,
                                                    ppTexture2D:
                                                        *mut *mut ID3D11Texture2D)
                                                   -> HRESULT>,
    pub CreateTexture3D: ::std::option::Option<extern "C" fn
                                                   (This: *mut ID3D11Device,
                                                    pDesc:
                                                        *const D3D11_TEXTURE3D_DESC,
                                                    pInitialData:
                                                        *const D3D11_SUBRESOURCE_DATA,
                                                    ppTexture3D:
                                                        *mut *mut ID3D11Texture3D)
                                                   -> HRESULT>,
    pub CreateShaderResourceView: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut ID3D11Device,
                                                             pResource:
                                                                 *mut ID3D11Resource,
                                                             pDesc:
                                                                 *const D3D11_SHADER_RESOURCE_VIEW_DESC,
                                                             ppSRView:
                                                                 *mut *mut ID3D11ShaderResourceView)
                                                            -> HRESULT>,
    pub CreateUnorderedAccessView: ::std::option::Option<extern "C" fn
                                                             (This:
                                                                  *mut ID3D11Device,
                                                              pResource:
                                                                  *mut ID3D11Resource,
                                                              pDesc:
                                                                  *const D3D11_UNORDERED_ACCESS_VIEW_DESC,
                                                              ppUAView:
                                                                  *mut *mut ID3D11UnorderedAccessView)
                                                             -> HRESULT>,
    pub CreateRenderTargetView: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11Device,
                                                           pResource:
                                                               *mut ID3D11Resource,
                                                           pDesc:
                                                               *const D3D11_RENDER_TARGET_VIEW_DESC,
                                                           ppRTView:
                                                               *mut *mut ID3D11RenderTargetView)
                                                          -> HRESULT>,
    pub CreateDepthStencilView: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11Device,
                                                           pResource:
                                                               *mut ID3D11Resource,
                                                           pDesc:
                                                               *const D3D11_DEPTH_STENCIL_VIEW_DESC,
                                                           ppDepthStencilView:
                                                               *mut *mut ID3D11DepthStencilView)
                                                          -> HRESULT>,
    pub CreateInputLayout: ::std::option::Option<extern "C" fn
                                                     (This: *mut ID3D11Device,
                                                      pInputElementDescs:
                                                          *const D3D11_INPUT_ELEMENT_DESC,
                                                      NumElements: UINT,
                                                      pShaderBytecodeWithInputSignature:
                                                          *const ::libc::c_void,
                                                      BytecodeLength: SIZE_T,
                                                      ppInputLayout:
                                                          *mut *mut ID3D11InputLayout)
                                                     -> HRESULT>,
    pub CreateVertexShader: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11Device,
                                                       pShaderBytecode:
                                                           *const ::libc::c_void,
                                                       BytecodeLength: SIZE_T,
                                                       pClassLinkage:
                                                           *mut ID3D11ClassLinkage,
                                                       ppVertexShader:
                                                           *mut *mut ID3D11VertexShader)
                                                      -> HRESULT>,
    pub CreateGeometryShader: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11Device,
                                                         pShaderBytecode:
                                                             *const ::libc::c_void,
                                                         BytecodeLength:
                                                             SIZE_T,
                                                         pClassLinkage:
                                                             *mut ID3D11ClassLinkage,
                                                         ppGeometryShader:
                                                             *mut *mut ID3D11GeometryShader)
                                                        -> HRESULT>,
    pub CreateGeometryShaderWithStreamOutput: ::std::option::Option<extern "C" fn
                                                                        (This:
                                                                             *mut ID3D11Device,
                                                                         pShaderBytecode:
                                                                             *const ::libc::c_void,
                                                                         BytecodeLength:
                                                                             SIZE_T,
                                                                         pSODeclaration:
                                                                             *const D3D11_SO_DECLARATION_ENTRY,
                                                                         NumEntries:
                                                                             UINT,
                                                                         pBufferStrides:
                                                                             *const UINT,
                                                                         NumStrides:
                                                                             UINT,
                                                                         RasterizedStream:
                                                                             UINT,
                                                                         pClassLinkage:
                                                                             *mut ID3D11ClassLinkage,
                                                                         ppGeometryShader:
                                                                             *mut *mut ID3D11GeometryShader)
                                                                        ->
                                                                            HRESULT>,
    pub CreatePixelShader: ::std::option::Option<extern "C" fn
                                                     (This: *mut ID3D11Device,
                                                      pShaderBytecode:
                                                          *const ::libc::c_void,
                                                      BytecodeLength: SIZE_T,
                                                      pClassLinkage:
                                                          *mut ID3D11ClassLinkage,
                                                      ppPixelShader:
                                                          *mut *mut ID3D11PixelShader)
                                                     -> HRESULT>,
    pub CreateHullShader: ::std::option::Option<extern "C" fn
                                                    (This: *mut ID3D11Device,
                                                     pShaderBytecode:
                                                         *const ::libc::c_void,
                                                     BytecodeLength: SIZE_T,
                                                     pClassLinkage:
                                                         *mut ID3D11ClassLinkage,
                                                     ppHullShader:
                                                         *mut *mut ID3D11HullShader)
                                                    -> HRESULT>,
    pub CreateDomainShader: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11Device,
                                                       pShaderBytecode:
                                                           *const ::libc::c_void,
                                                       BytecodeLength: SIZE_T,
                                                       pClassLinkage:
                                                           *mut ID3D11ClassLinkage,
                                                       ppDomainShader:
                                                           *mut *mut ID3D11DomainShader)
                                                      -> HRESULT>,
    pub CreateComputeShader: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Device,
                                                        pShaderBytecode:
                                                            *const ::libc::c_void,
                                                        BytecodeLength:
                                                            SIZE_T,
                                                        pClassLinkage:
                                                            *mut ID3D11ClassLinkage,
                                                        ppComputeShader:
                                                            *mut *mut ID3D11ComputeShader)
                                                       -> HRESULT>,
    pub CreateClassLinkage: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11Device,
                                                       ppLinkage:
                                                           *mut *mut ID3D11ClassLinkage)
                                                      -> HRESULT>,
    pub CreateBlendState: ::std::option::Option<extern "C" fn
                                                    (This: *mut ID3D11Device,
                                                     pBlendStateDesc:
                                                         *const D3D11_BLEND_DESC,
                                                     ppBlendState:
                                                         *mut *mut ID3D11BlendState)
                                                    -> HRESULT>,
    pub CreateDepthStencilState: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Device,
                                                            pDepthStencilDesc:
                                                                *const D3D11_DEPTH_STENCIL_DESC,
                                                            ppDepthStencilState:
                                                                *mut *mut ID3D11DepthStencilState)
                                                           -> HRESULT>,
    pub CreateRasterizerState: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut ID3D11Device,
                                                          pRasterizerDesc:
                                                              *const D3D11_RASTERIZER_DESC,
                                                          ppRasterizerState:
                                                              *mut *mut ID3D11RasterizerState)
                                                         -> HRESULT>,
    pub CreateSamplerState: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11Device,
                                                       pSamplerDesc:
                                                           *const D3D11_SAMPLER_DESC,
                                                       ppSamplerState:
                                                           *mut *mut ID3D11SamplerState)
                                                      -> HRESULT>,
    pub CreateQuery: ::std::option::Option<extern "C" fn
                                               (This: *mut ID3D11Device,
                                                pQueryDesc:
                                                    *const D3D11_QUERY_DESC,
                                                ppQuery:
                                                    *mut *mut ID3D11Query)
                                               -> HRESULT>,
    pub CreatePredicate: ::std::option::Option<extern "C" fn
                                                   (This: *mut ID3D11Device,
                                                    pPredicateDesc:
                                                        *const D3D11_QUERY_DESC,
                                                    ppPredicate:
                                                        *mut *mut ID3D11Predicate)
                                                   -> HRESULT>,
    pub CreateCounter: ::std::option::Option<extern "C" fn
                                                 (This: *mut ID3D11Device,
                                                  pCounterDesc:
                                                      *const D3D11_COUNTER_DESC,
                                                  ppCounter:
                                                      *mut *mut ID3D11Counter)
                                                 -> HRESULT>,
    pub CreateDeferredContext: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut ID3D11Device,
                                                          ContextFlags: UINT,
                                                          ppDeferredContext:
                                                              *mut *mut ID3D11DeviceContext)
                                                         -> HRESULT>,
    pub OpenSharedResource: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11Device,
                                                       hResource: HANDLE,
                                                       ReturnedInterface:
                                                           *const IID,
                                                       ppResource:
                                                           *mut *mut ::libc::c_void)
                                                      -> HRESULT>,
    pub CheckFormatSupport: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11Device,
                                                       Format: DXGI_FORMAT,
                                                       pFormatSupport:
                                                           *mut UINT)
                                                      -> HRESULT>,
    pub CheckMultisampleQualityLevels: ::std::option::Option<extern "C" fn
                                                                 (This:
                                                                      *mut ID3D11Device,
                                                                  Format:
                                                                      DXGI_FORMAT,
                                                                  SampleCount:
                                                                      UINT,
                                                                  pNumQualityLevels:
                                                                      *mut UINT)
                                                                 -> HRESULT>,
    pub CheckCounterInfo: ::std::option::Option<extern "C" fn
                                                    (This: *mut ID3D11Device,
                                                     pCounterInfo:
                                                         *mut D3D11_COUNTER_INFO)
                                                    -> ()>,
    pub CheckCounter: ::std::option::Option<extern "C" fn
                                                (This: *mut ID3D11Device,
                                                 pDesc:
                                                     *const D3D11_COUNTER_DESC,
                                                 pType:
                                                     *mut D3D11_COUNTER_TYPE,
                                                 pActiveCounters: *mut UINT,
                                                 szName: LPSTR,
                                                 pNameLength: *mut UINT,
                                                 szUnits: LPSTR,
                                                 pUnitsLength: *mut UINT,
                                                 szDescription: LPSTR,
                                                 pDescriptionLength:
                                                     *mut UINT) -> HRESULT>,
    pub CheckFeatureSupport: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Device,
                                                        Feature:
                                                            D3D11_FEATURE,
                                                        pFeatureSupportData:
                                                            *mut ::libc::c_void,
                                                        FeatureSupportDataSize:
                                                            UINT) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Device,
                                                   guid: *const GUID,
                                                   pDataSize: *mut UINT,
                                                   pData: *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This: *mut ID3D11Device,
                                                   guid: *const GUID,
                                                   DataSize: UINT,
                                                   pData:
                                                       *const ::libc::c_void)
                                                  -> HRESULT>,
    pub SetPrivateDataInterface: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11Device,
                                                            guid: *const GUID,
                                                            pData:
                                                                *const IUnknown)
                                                           -> HRESULT>,
    pub GetFeatureLevel: ::std::option::Option<extern "C" fn
                                                   (This: *mut ID3D11Device)
                                                   -> D3D_FEATURE_LEVEL>,
    pub GetCreationFlags: ::std::option::Option<extern "C" fn
                                                    (This: *mut ID3D11Device)
                                                    -> UINT>,
    pub GetDeviceRemovedReason: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11Device)
                                                          -> HRESULT>,
    pub GetImmediateContext: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11Device,
                                                        ppImmediateContext:
                                                            *mut *mut ID3D11DeviceContext)
                                                       -> ()>,
    pub SetExceptionMode: ::std::option::Option<extern "C" fn
                                                    (This: *mut ID3D11Device,
                                                     RaiseFlags: UINT)
                                                    -> HRESULT>,
    pub GetExceptionMode: ::std::option::Option<extern "C" fn
                                                    (This: *mut ID3D11Device)
                                                    -> UINT>,
}
impl ::std::default::Default for Struct_ID3D11DeviceVtbl {
    fn default() -> Struct_ID3D11DeviceVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11DeviceVtbl = Struct_ID3D11DeviceVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11Device {
    pub lpVtbl: *mut Struct_ID3D11DeviceVtbl,
}
impl ::std::default::Default for Struct_ID3D11Device {
    fn default() -> Struct_ID3D11Device { unsafe { ::std::mem::zeroed() } }
}
pub type Enum_D3D11_CREATE_DEVICE_FLAG = ::libc::c_uint;
pub const D3D11_CREATE_DEVICE_SINGLETHREADED: ::libc::c_uint = 1;
pub const D3D11_CREATE_DEVICE_DEBUG: ::libc::c_uint = 2;
pub const D3D11_CREATE_DEVICE_SWITCH_TO_REF: ::libc::c_uint = 4;
pub const D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS:
          ::libc::c_uint =
    8;
pub const D3D11_CREATE_DEVICE_BGRA_SUPPORT: ::libc::c_uint = 32;
pub type D3D11_CREATE_DEVICE_FLAG = Enum_D3D11_CREATE_DEVICE_FLAG;
pub type PFN_D3D11_CREATE_DEVICE =
    ::std::option::Option<extern "C" fn
                              (arg1: *mut IDXGIAdapter, arg2: D3D_DRIVER_TYPE,
                               arg3: HMODULE, arg4: UINT,
                               arg5: *const D3D_FEATURE_LEVEL,
                               FeatureLevels: UINT, arg6: UINT,
                               arg7: *mut *mut ID3D11Device,
                               arg8: *mut D3D_FEATURE_LEVEL,
                               arg9: *mut *mut ID3D11DeviceContext)
                              -> HRESULT>;
pub type PFN_D3D11_CREATE_DEVICE_AND_SWAP_CHAIN =
    ::std::option::Option<extern "C" fn
                              (arg1: *mut IDXGIAdapter, arg2: D3D_DRIVER_TYPE,
                               arg3: HMODULE, arg4: UINT,
                               arg5: *const D3D_FEATURE_LEVEL,
                               FeatureLevels: UINT, arg6: UINT,
                               arg7: *const DXGI_SWAP_CHAIN_DESC,
                               arg8: *mut *mut IDXGISwapChain,
                               arg9: *mut *mut ID3D11Device,
                               arg10: *mut D3D_FEATURE_LEVEL,
                               arg11: *mut *mut ID3D11DeviceContext)
                              -> HRESULT>;
extern "C" {
    pub static mut __MIDL_itf_d3d11_0000_0000_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0000_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11DeviceChild: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0001_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0001_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11DepthStencilState: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0002_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0002_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11BlendState: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0003_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0003_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11RasterizerState: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0004_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0004_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Resource: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0005_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0005_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Buffer: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0006_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0006_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Texture1D: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0007_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0007_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Texture2D: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0008_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0008_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Texture3D: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0009_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0009_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11View: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0010_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0010_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11ShaderResourceView: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0011_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0011_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11RenderTargetView: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0012_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0012_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11DepthStencilView: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0013_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0013_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11UnorderedAccessView: GUID;
    pub static IID_ID3D11VertexShader: GUID;
    pub static IID_ID3D11HullShader: GUID;
    pub static IID_ID3D11DomainShader: GUID;
    pub static IID_ID3D11GeometryShader: GUID;
    pub static IID_ID3D11PixelShader: GUID;
    pub static IID_ID3D11ComputeShader: GUID;
    pub static IID_ID3D11InputLayout: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0021_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0021_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11SamplerState: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0022_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0022_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Asynchronous: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0023_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0023_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Query: GUID;
    pub static IID_ID3D11Predicate: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0025_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0025_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11Counter: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0026_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0026_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11ClassInstance: GUID;
    pub static IID_ID3D11ClassLinkage: GUID;
    pub static IID_ID3D11CommandList: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0029_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0029_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_ID3D11DeviceContext: GUID;
    pub static IID_ID3D11Device: GUID;
    pub static mut __MIDL_itf_d3d11_0000_0031_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_d3d11_0000_0031_v0_0_s_ifspec: RPC_IF_HANDLE;
}
extern "C" {
    pub fn D3D11CreateDevice(pAdapter: *mut IDXGIAdapter,
                             DriverType: D3D_DRIVER_TYPE, Software: HMODULE,
                             Flags: UINT,
                             pFeatureLevels: *const D3D_FEATURE_LEVEL,
                             FeatureLevels: UINT, SDKVersion: UINT,
                             ppDevice: *mut *mut ID3D11Device,
                             pFeatureLevel: *mut D3D_FEATURE_LEVEL,
                             ppImmediateContext:
                                 *mut *mut ID3D11DeviceContext) -> HRESULT;
    pub fn D3D11CreateDeviceAndSwapChain(pAdapter: *mut IDXGIAdapter,
                                         DriverType: D3D_DRIVER_TYPE,
                                         Software: HMODULE, Flags: UINT,
                                         pFeatureLevels:
                                             *const D3D_FEATURE_LEVEL,
                                         FeatureLevels: UINT,
                                         SDKVersion: UINT,
                                         pSwapChainDesc:
                                             *const DXGI_SWAP_CHAIN_DESC,
                                         ppSwapChain:
                                             *mut *mut IDXGISwapChain,
                                         ppDevice: *mut *mut ID3D11Device,
                                         pFeatureLevel:
                                             *mut D3D_FEATURE_LEVEL,
                                         ppImmediateContext:
                                             *mut *mut ID3D11DeviceContext)
     -> HRESULT;
}
