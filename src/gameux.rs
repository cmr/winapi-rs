/* automatically generated by rust-bindgen */

pub type IGameExplorer = Struct_IGameExplorer;
pub type IGameStatistics = Struct_IGameStatistics;
pub type IGameStatisticsMgr = Struct_IGameStatisticsMgr;
pub type IGameExplorer2 = Struct_IGameExplorer2;
pub enum Struct_GameExplorer { }
pub type GameExplorer = Struct_GameExplorer;
pub enum Struct_GameStatistics { }
pub type GameStatistics = Struct_GameStatistics;
pub type Enum_GAME_INSTALL_SCOPE = ::libc::c_uint;
pub const GIS_NOT_INSTALLED: ::libc::c_uint = 1;
pub const GIS_CURRENT_USER: ::libc::c_uint = 2;
pub const GIS_ALL_USERS: ::libc::c_uint = 3;
pub type GAME_INSTALL_SCOPE = Enum_GAME_INSTALL_SCOPE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameExplorerVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IGameExplorer,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IGameExplorer)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut IGameExplorer)
                                           -> ULONG>,
    pub AddGame: ::std::option::Option<extern "C" fn
                                           (This: *mut IGameExplorer,
                                            bstrGDFBinaryPath: BSTR,
                                            bstrGameInstallDirectory: BSTR,
                                            installScope: GAME_INSTALL_SCOPE,
                                            pguidInstanceID: *mut GUID)
                                           -> HRESULT>,
    pub RemoveGame: ::std::option::Option<extern "C" fn
                                              (This: *mut IGameExplorer,
                                               guidInstanceID: GUID)
                                              -> HRESULT>,
    pub UpdateGame: ::std::option::Option<extern "C" fn
                                              (This: *mut IGameExplorer,
                                               guidInstanceID: GUID)
                                              -> HRESULT>,
    pub VerifyAccess: ::std::option::Option<extern "C" fn
                                                (This: *mut IGameExplorer,
                                                 bstrGDFBinaryPath: BSTR,
                                                 pfHasAccess: *mut BOOL)
                                                -> HRESULT>,
}
impl ::std::default::Default for Struct_IGameExplorerVtbl {
    fn default() -> Struct_IGameExplorerVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IGameExplorerVtbl = Struct_IGameExplorerVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameExplorer {
    pub lpVtbl: *mut Struct_IGameExplorerVtbl,
}
impl ::std::default::Default for Struct_IGameExplorer {
    fn default() -> Struct_IGameExplorer { unsafe { ::std::mem::zeroed() } }
}
pub type Enum_GAMESTATS_OPEN_TYPE = ::libc::c_uint;
pub const GAMESTATS_OPEN_OPENORCREATE: ::libc::c_uint = 0;
pub const GAMESTATS_OPEN_OPENONLY: ::libc::c_uint = 1;
pub type GAMESTATS_OPEN_TYPE = Enum_GAMESTATS_OPEN_TYPE;
pub type Enum_GAMESTATS_OPEN_RESULT = ::libc::c_uint;
pub const GAMESTATS_OPEN_CREATED: ::libc::c_uint = 0;
pub const GAMESTATS_OPEN_OPENED: ::libc::c_uint = 1;
pub type GAMESTATS_OPEN_RESULT = Enum_GAMESTATS_OPEN_RESULT;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameStatisticsVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IGameStatistics,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IGameStatistics)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IGameStatistics)
                                           -> ULONG>,
    pub GetMaxCategoryLength: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IGameStatistics,
                                                         cch: *mut UINT)
                                                        -> HRESULT>,
    pub GetMaxNameLength: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IGameStatistics,
                                                     cch: *mut UINT)
                                                    -> HRESULT>,
    pub GetMaxValueLength: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IGameStatistics,
                                                      cch: *mut UINT)
                                                     -> HRESULT>,
    pub GetMaxCategories: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IGameStatistics,
                                                     pMax: *mut WORD)
                                                    -> HRESULT>,
    pub GetMaxStatsPerCategory: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IGameStatistics,
                                                           pMax: *mut WORD)
                                                          -> HRESULT>,
    pub SetCategoryTitle: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IGameStatistics,
                                                     categoryIndex: WORD,
                                                     title: LPCWSTR)
                                                    -> HRESULT>,
    pub GetCategoryTitle: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IGameStatistics,
                                                     categoryIndex: WORD,
                                                     pTitle: *mut LPWSTR)
                                                    -> HRESULT>,
    pub GetStatistic: ::std::option::Option<extern "C" fn
                                                (This: *mut IGameStatistics,
                                                 categoryIndex: WORD,
                                                 statIndex: WORD,
                                                 pName: *mut LPWSTR,
                                                 pValue: *mut LPWSTR)
                                                -> HRESULT>,
    pub SetStatistic: ::std::option::Option<extern "C" fn
                                                (This: *mut IGameStatistics,
                                                 categoryIndex: WORD,
                                                 statIndex: WORD,
                                                 name: LPCWSTR,
                                                 value: LPCWSTR) -> HRESULT>,
    pub Save: ::std::option::Option<extern "C" fn
                                        (This: *mut IGameStatistics,
                                         trackChanges: BOOL) -> HRESULT>,
    pub SetLastPlayedCategory: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IGameStatistics,
                                                          categoryIndex: UINT)
                                                         -> HRESULT>,
    pub GetLastPlayedCategory: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IGameStatistics,
                                                          pCategoryIndex:
                                                              *mut UINT)
                                                         -> HRESULT>,
}
impl ::std::default::Default for Struct_IGameStatisticsVtbl {
    fn default() -> Struct_IGameStatisticsVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IGameStatisticsVtbl = Struct_IGameStatisticsVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameStatistics {
    pub lpVtbl: *mut Struct_IGameStatisticsVtbl,
}
impl ::std::default::Default for Struct_IGameStatistics {
    fn default() -> Struct_IGameStatistics { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameStatisticsMgrVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IGameStatisticsMgr,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IGameStatisticsMgr)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IGameStatisticsMgr)
                                           -> ULONG>,
    pub GetGameStatistics: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IGameStatisticsMgr,
                                                      GDFBinaryPath: LPCWSTR,
                                                      openType:
                                                          GAMESTATS_OPEN_TYPE,
                                                      pOpenResult:
                                                          *mut GAMESTATS_OPEN_RESULT,
                                                      ppiStats:
                                                          *mut *mut IGameStatistics)
                                                     -> HRESULT>,
    pub RemoveGameStatistics: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IGameStatisticsMgr,
                                                         GDFBinaryPath:
                                                             LPCWSTR)
                                                        -> HRESULT>,
}
impl ::std::default::Default for Struct_IGameStatisticsMgrVtbl {
    fn default() -> Struct_IGameStatisticsMgrVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IGameStatisticsMgrVtbl = Struct_IGameStatisticsMgrVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameStatisticsMgr {
    pub lpVtbl: *mut Struct_IGameStatisticsMgrVtbl,
}
impl ::std::default::Default for Struct_IGameStatisticsMgr {
    fn default() -> Struct_IGameStatisticsMgr {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameExplorer2Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IGameExplorer2,
                                                   riid: *const IID,
                                                   ppvObject:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IGameExplorer2)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IGameExplorer2)
                                           -> ULONG>,
    pub InstallGame: ::std::option::Option<extern "C" fn
                                               (This: *mut IGameExplorer2,
                                                binaryGDFPath: LPCWSTR,
                                                installDirectory: LPCWSTR,
                                                installScope:
                                                    GAME_INSTALL_SCOPE)
                                               -> HRESULT>,
    pub UninstallGame: ::std::option::Option<extern "C" fn
                                                 (This: *mut IGameExplorer2,
                                                  binaryGDFPath: LPCWSTR)
                                                 -> HRESULT>,
    pub CheckAccess: ::std::option::Option<extern "C" fn
                                               (This: *mut IGameExplorer2,
                                                binaryGDFPath: LPCWSTR,
                                                pHasAccess: *mut BOOL)
                                               -> HRESULT>,
}
impl ::std::default::Default for Struct_IGameExplorer2Vtbl {
    fn default() -> Struct_IGameExplorer2Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IGameExplorer2Vtbl = Struct_IGameExplorer2Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IGameExplorer2 {
    pub lpVtbl: *mut Struct_IGameExplorer2Vtbl,
}
impl ::std::default::Default for Struct_IGameExplorer2 {
    fn default() -> Struct_IGameExplorer2 { unsafe { ::std::mem::zeroed() } }
}
extern "C" {
    pub static mut __MIDL_itf_gameux_0000_0000_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_gameux_0000_0000_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_IGameExplorer: IID;
    pub static mut __MIDL_itf_gameux_0000_0001_v0_0_c_ifspec: RPC_IF_HANDLE;
    pub static mut __MIDL_itf_gameux_0000_0001_v0_0_s_ifspec: RPC_IF_HANDLE;
    pub static IID_IGameStatistics: IID;
    pub static IID_IGameStatisticsMgr: IID;
    pub static IID_IGameExplorer2: IID;
    pub static LIBID_gameuxLib: IID;
    pub static CLSID_GameExplorer: CLSID;
    pub static CLSID_GameStatistics: CLSID;
}
extern "C" {
    pub fn BSTR_UserSize(arg1: *mut ::libc::c_ulong, arg2: ::libc::c_ulong,
                         arg3: *mut BSTR) -> ::libc::c_ulong;
    pub fn BSTR_UserMarshal(arg1: *mut ::libc::c_ulong,
                            arg2: *mut ::libc::c_uchar, arg3: *mut BSTR)
     -> *mut ::libc::c_uchar;
    pub fn BSTR_UserUnmarshal(arg1: *mut ::libc::c_ulong,
                              arg2: *mut ::libc::c_uchar, arg3: *mut BSTR)
     -> *mut ::libc::c_uchar;
    pub fn BSTR_UserFree(arg1: *mut ::libc::c_ulong, arg2: *mut BSTR) -> ();
    pub fn BSTR_UserSize64(arg1: *mut ::libc::c_ulong, arg2: ::libc::c_ulong,
                           arg3: *mut BSTR) -> ::libc::c_ulong;
    pub fn BSTR_UserMarshal64(arg1: *mut ::libc::c_ulong,
                              arg2: *mut ::libc::c_uchar, arg3: *mut BSTR)
     -> *mut ::libc::c_uchar;
    pub fn BSTR_UserUnmarshal64(arg1: *mut ::libc::c_ulong,
                                arg2: *mut ::libc::c_uchar, arg3: *mut BSTR)
     -> *mut ::libc::c_uchar;
    pub fn BSTR_UserFree64(arg1: *mut ::libc::c_ulong, arg2: *mut BSTR) -> ();
}
