/* automatically generated by rust-bindgen */

pub type Enum_D3D11_SHADER_VERSION_TYPE = ::libc::c_uint;
pub const D3D11_SHVER_PIXEL_SHADER: ::libc::c_uint = 0;
pub const D3D11_SHVER_VERTEX_SHADER: ::libc::c_uint = 1;
pub const D3D11_SHVER_GEOMETRY_SHADER: ::libc::c_uint = 2;
pub const D3D11_SHVER_HULL_SHADER: ::libc::c_uint = 3;
pub const D3D11_SHVER_DOMAIN_SHADER: ::libc::c_uint = 4;
pub const D3D11_SHVER_COMPUTE_SHADER: ::libc::c_uint = 5;
pub type D3D11_SHADER_VERSION_TYPE = Enum_D3D11_SHADER_VERSION_TYPE;
pub type D3D11_RESOURCE_RETURN_TYPE = D3D_RESOURCE_RETURN_TYPE;
pub type D3D11_CBUFFER_TYPE = D3D_CBUFFER_TYPE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__D3D11_SIGNATURE_PARAMETER_DESC {
    pub SemanticName: LPCSTR,
    pub SemanticIndex: UINT,
    pub Register: UINT,
    pub SystemValueType: D3D_NAME,
    pub ComponentType: D3D_REGISTER_COMPONENT_TYPE,
    pub Mask: BYTE,
    pub ReadWriteMask: BYTE,
    pub Stream: UINT,
}
impl ::std::default::Default for Struct__D3D11_SIGNATURE_PARAMETER_DESC {
    fn default() -> Struct__D3D11_SIGNATURE_PARAMETER_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SIGNATURE_PARAMETER_DESC =
    Struct__D3D11_SIGNATURE_PARAMETER_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__D3D11_SHADER_BUFFER_DESC {
    pub Name: LPCSTR,
    pub Type: D3D_CBUFFER_TYPE,
    pub Variables: UINT,
    pub Size: UINT,
    pub uFlags: UINT,
}
impl ::std::default::Default for Struct__D3D11_SHADER_BUFFER_DESC {
    fn default() -> Struct__D3D11_SHADER_BUFFER_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SHADER_BUFFER_DESC = Struct__D3D11_SHADER_BUFFER_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__D3D11_SHADER_VARIABLE_DESC {
    pub Name: LPCSTR,
    pub StartOffset: UINT,
    pub Size: UINT,
    pub uFlags: UINT,
    pub DefaultValue: LPVOID,
    pub StartTexture: UINT,
    pub TextureSize: UINT,
    pub StartSampler: UINT,
    pub SamplerSize: UINT,
}
impl ::std::default::Default for Struct__D3D11_SHADER_VARIABLE_DESC {
    fn default() -> Struct__D3D11_SHADER_VARIABLE_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SHADER_VARIABLE_DESC = Struct__D3D11_SHADER_VARIABLE_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__D3D11_SHADER_TYPE_DESC {
    pub Class: D3D_SHADER_VARIABLE_CLASS,
    pub Type: D3D_SHADER_VARIABLE_TYPE,
    pub Rows: UINT,
    pub Columns: UINT,
    pub Elements: UINT,
    pub Members: UINT,
    pub Offset: UINT,
    pub Name: LPCSTR,
}
impl ::std::default::Default for Struct__D3D11_SHADER_TYPE_DESC {
    fn default() -> Struct__D3D11_SHADER_TYPE_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SHADER_TYPE_DESC = Struct__D3D11_SHADER_TYPE_DESC;
pub type D3D11_TESSELLATOR_DOMAIN = D3D_TESSELLATOR_DOMAIN;
pub type D3D11_TESSELLATOR_PARTITIONING = D3D_TESSELLATOR_PARTITIONING;
pub type D3D11_TESSELLATOR_OUTPUT_PRIMITIVE =
    D3D_TESSELLATOR_OUTPUT_PRIMITIVE;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__D3D11_SHADER_DESC {
    pub Version: UINT,
    pub Creator: LPCSTR,
    pub Flags: UINT,
    pub ConstantBuffers: UINT,
    pub BoundResources: UINT,
    pub InputParameters: UINT,
    pub OutputParameters: UINT,
    pub InstructionCount: UINT,
    pub TempRegisterCount: UINT,
    pub TempArrayCount: UINT,
    pub DefCount: UINT,
    pub DclCount: UINT,
    pub TextureNormalInstructions: UINT,
    pub TextureLoadInstructions: UINT,
    pub TextureCompInstructions: UINT,
    pub TextureBiasInstructions: UINT,
    pub TextureGradientInstructions: UINT,
    pub FloatInstructionCount: UINT,
    pub IntInstructionCount: UINT,
    pub UintInstructionCount: UINT,
    pub StaticFlowControlCount: UINT,
    pub DynamicFlowControlCount: UINT,
    pub MacroInstructionCount: UINT,
    pub ArrayInstructionCount: UINT,
    pub CutInstructionCount: UINT,
    pub EmitInstructionCount: UINT,
    pub GSOutputTopology: D3D_PRIMITIVE_TOPOLOGY,
    pub GSMaxOutputVertexCount: UINT,
    pub InputPrimitive: D3D_PRIMITIVE,
    pub PatchConstantParameters: UINT,
    pub cGSInstanceCount: UINT,
    pub cControlPoints: UINT,
    pub HSOutputPrimitive: D3D_TESSELLATOR_OUTPUT_PRIMITIVE,
    pub HSPartitioning: D3D_TESSELLATOR_PARTITIONING,
    pub TessellatorDomain: D3D_TESSELLATOR_DOMAIN,
    pub cBarrierInstructions: UINT,
    pub cInterlockedInstructions: UINT,
    pub cTextureStoreInstructions: UINT,
}
impl ::std::default::Default for Struct__D3D11_SHADER_DESC {
    fn default() -> Struct__D3D11_SHADER_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SHADER_DESC = Struct__D3D11_SHADER_DESC;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__D3D11_SHADER_INPUT_BIND_DESC {
    pub Name: LPCSTR,
    pub Type: D3D_SHADER_INPUT_TYPE,
    pub BindPoint: UINT,
    pub BindCount: UINT,
    pub uFlags: UINT,
    pub ReturnType: D3D_RESOURCE_RETURN_TYPE,
    pub Dimension: D3D_SRV_DIMENSION,
    pub NumSamples: UINT,
}
impl ::std::default::Default for Struct__D3D11_SHADER_INPUT_BIND_DESC {
    fn default() -> Struct__D3D11_SHADER_INPUT_BIND_DESC {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type D3D11_SHADER_INPUT_BIND_DESC = Struct__D3D11_SHADER_INPUT_BIND_DESC;
pub type ID3D11ShaderReflectionType = Struct_ID3D11ShaderReflectionType;
pub type LPD3D11SHADERREFLECTIONTYPE = *mut Struct_ID3D11ShaderReflectionType;
pub type ID3D11ShaderReflectionVariable =
    Struct_ID3D11ShaderReflectionVariable;
pub type LPD3D11SHADERREFLECTIONVARIABLE =
    *mut Struct_ID3D11ShaderReflectionVariable;
pub type ID3D11ShaderReflectionConstantBuffer =
    Struct_ID3D11ShaderReflectionConstantBuffer;
pub type LPD3D11SHADERREFLECTIONCONSTANTBUFFER =
    *mut Struct_ID3D11ShaderReflectionConstantBuffer;
pub type ID3D11ShaderReflection = Struct_ID3D11ShaderReflection;
pub type LPD3D11SHADERREFLECTION = *mut Struct_ID3D11ShaderReflection;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflectionType {
    pub lpVtbl: *mut Struct_ID3D11ShaderReflectionTypeVtbl,
}
impl ::std::default::Default for Struct_ID3D11ShaderReflectionType {
    fn default() -> Struct_ID3D11ShaderReflectionType {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ShaderReflectionTypeVtbl =
    Struct_ID3D11ShaderReflectionTypeVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflectionTypeVtbl {
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11ShaderReflectionType,
                                            pDesc:
                                                *mut D3D11_SHADER_TYPE_DESC)
                                           -> HRESULT>,
    pub GetMemberTypeByIndex: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11ShaderReflectionType,
                                                         Index: UINT)
                                                        ->
                                                            *mut ID3D11ShaderReflectionType>,
    pub GetMemberTypeByName: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11ShaderReflectionType,
                                                        Name: LPCSTR)
                                                       ->
                                                           *mut ID3D11ShaderReflectionType>,
    pub GetMemberTypeName: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11ShaderReflectionType,
                                                      Index: UINT) -> LPCSTR>,
    pub IsEqual: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11ShaderReflectionType,
                                            pType:
                                                *mut ID3D11ShaderReflectionType)
                                           -> HRESULT>,
    pub GetSubType: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut ID3D11ShaderReflectionType)
                                              ->
                                                  *mut ID3D11ShaderReflectionType>,
    pub GetBaseClass: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut ID3D11ShaderReflectionType)
                                                ->
                                                    *mut ID3D11ShaderReflectionType>,
    pub GetNumInterfaces: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11ShaderReflectionType)
                                                    -> UINT>,
    pub GetInterfaceByIndex: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11ShaderReflectionType,
                                                        uIndex: UINT)
                                                       ->
                                                           *mut ID3D11ShaderReflectionType>,
    pub IsOfType: ::std::option::Option<extern "C" fn
                                            (This:
                                                 *mut ID3D11ShaderReflectionType,
                                             pType:
                                                 *mut ID3D11ShaderReflectionType)
                                            -> HRESULT>,
    pub ImplementsInterface: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11ShaderReflectionType,
                                                        pBase:
                                                            *mut ID3D11ShaderReflectionType)
                                                       -> HRESULT>,
}
impl ::std::default::Default for Struct_ID3D11ShaderReflectionTypeVtbl {
    fn default() -> Struct_ID3D11ShaderReflectionTypeVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflectionVariable {
    pub lpVtbl: *mut Struct_ID3D11ShaderReflectionVariableVtbl,
}
impl ::std::default::Default for Struct_ID3D11ShaderReflectionVariable {
    fn default() -> Struct_ID3D11ShaderReflectionVariable {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ShaderReflectionVariableVtbl =
    Struct_ID3D11ShaderReflectionVariableVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflectionVariableVtbl {
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11ShaderReflectionVariable,
                                            pDesc:
                                                *mut D3D11_SHADER_VARIABLE_DESC)
                                           -> HRESULT>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11ShaderReflectionVariable)
                                           ->
                                               *mut ID3D11ShaderReflectionType>,
    pub GetBuffer: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut ID3D11ShaderReflectionVariable)
                                             ->
                                                 *mut ID3D11ShaderReflectionConstantBuffer>,
    pub GetInterfaceSlot: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut ID3D11ShaderReflectionVariable,
                                                     uArrayIndex: UINT)
                                                    -> UINT>,
}
impl ::std::default::Default for Struct_ID3D11ShaderReflectionVariableVtbl {
    fn default() -> Struct_ID3D11ShaderReflectionVariableVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflectionConstantBuffer {
    pub lpVtbl: *mut Struct_ID3D11ShaderReflectionConstantBufferVtbl,
}
impl ::std::default::Default for Struct_ID3D11ShaderReflectionConstantBuffer {
    fn default() -> Struct_ID3D11ShaderReflectionConstantBuffer {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ShaderReflectionConstantBufferVtbl =
    Struct_ID3D11ShaderReflectionConstantBufferVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflectionConstantBufferVtbl {
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut ID3D11ShaderReflectionConstantBuffer,
                                            pDesc:
                                                *mut D3D11_SHADER_BUFFER_DESC)
                                           -> HRESULT>,
    pub GetVariableByIndex: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11ShaderReflectionConstantBuffer,
                                                       Index: UINT)
                                                      ->
                                                          *mut ID3D11ShaderReflectionVariable>,
    pub GetVariableByName: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11ShaderReflectionConstantBuffer,
                                                      Name: LPCSTR)
                                                     ->
                                                         *mut ID3D11ShaderReflectionVariable>,
}
impl ::std::default::Default for
 Struct_ID3D11ShaderReflectionConstantBufferVtbl {
    fn default() -> Struct_ID3D11ShaderReflectionConstantBufferVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflection {
    pub lpVtbl: *mut Struct_ID3D11ShaderReflectionVtbl,
}
impl ::std::default::Default for Struct_ID3D11ShaderReflection {
    fn default() -> Struct_ID3D11ShaderReflection {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type ID3D11ShaderReflectionVtbl = Struct_ID3D11ShaderReflectionVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_ID3D11ShaderReflectionVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut ID3D11ShaderReflection,
                                                   iid: *const IID,
                                                   ppv: *mut LPVOID)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut ID3D11ShaderReflection)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11ShaderReflection)
                                           -> ULONG>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut ID3D11ShaderReflection,
                                            pDesc: *mut D3D11_SHADER_DESC)
                                           -> HRESULT>,
    pub GetConstantBufferByIndex: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut ID3D11ShaderReflection,
                                                             Index: UINT)
                                                            ->
                                                                *mut ID3D11ShaderReflectionConstantBuffer>,
    pub GetConstantBufferByName: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11ShaderReflection,
                                                            Name: LPCSTR)
                                                           ->
                                                               *mut ID3D11ShaderReflectionConstantBuffer>,
    pub GetResourceBindingDesc: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11ShaderReflection,
                                                           ResourceIndex:
                                                               UINT,
                                                           pDesc:
                                                               *mut D3D11_SHADER_INPUT_BIND_DESC)
                                                          -> HRESULT>,
    pub GetInputParameterDesc: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut ID3D11ShaderReflection,
                                                          ParameterIndex:
                                                              UINT,
                                                          pDesc:
                                                              *mut D3D11_SIGNATURE_PARAMETER_DESC)
                                                         -> HRESULT>,
    pub GetOutputParameterDesc: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11ShaderReflection,
                                                           ParameterIndex:
                                                               UINT,
                                                           pDesc:
                                                               *mut D3D11_SIGNATURE_PARAMETER_DESC)
                                                          -> HRESULT>,
    pub GetPatchConstantParameterDesc: ::std::option::Option<extern "C" fn
                                                                 (This:
                                                                      *mut ID3D11ShaderReflection,
                                                                  ParameterIndex:
                                                                      UINT,
                                                                  pDesc:
                                                                      *mut D3D11_SIGNATURE_PARAMETER_DESC)
                                                                 -> HRESULT>,
    pub GetVariableByName: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut ID3D11ShaderReflection,
                                                      Name: LPCSTR)
                                                     ->
                                                         *mut ID3D11ShaderReflectionVariable>,
    pub GetResourceBindingDescByName: ::std::option::Option<extern "C" fn
                                                                (This:
                                                                     *mut ID3D11ShaderReflection,
                                                                 Name: LPCSTR,
                                                                 pDesc:
                                                                     *mut D3D11_SHADER_INPUT_BIND_DESC)
                                                                -> HRESULT>,
    pub GetMovInstructionCount: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut ID3D11ShaderReflection)
                                                          -> UINT>,
    pub GetMovcInstructionCount: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11ShaderReflection)
                                                           -> UINT>,
    pub GetConversionInstructionCount: ::std::option::Option<extern "C" fn
                                                                 (This:
                                                                      *mut ID3D11ShaderReflection)
                                                                 -> UINT>,
    pub GetBitwiseInstructionCount: ::std::option::Option<extern "C" fn
                                                              (This:
                                                                   *mut ID3D11ShaderReflection)
                                                              -> UINT>,
    pub GetGSInputPrimitive: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut ID3D11ShaderReflection)
                                                       -> D3D_PRIMITIVE>,
    pub IsSampleFrequencyShader: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut ID3D11ShaderReflection)
                                                           -> BOOL>,
    pub GetNumInterfaceSlots: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut ID3D11ShaderReflection)
                                                        -> UINT>,
    pub GetMinFeatureLevel: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11ShaderReflection,
                                                       pLevel:
                                                           *mut Enum_D3D_FEATURE_LEVEL)
                                                      -> HRESULT>,
    pub GetThreadGroupSize: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut ID3D11ShaderReflection,
                                                       pSizeX: *mut UINT,
                                                       pSizeY: *mut UINT,
                                                       pSizeZ: *mut UINT)
                                                      -> UINT>,
}
impl ::std::default::Default for Struct_ID3D11ShaderReflectionVtbl {
    fn default() -> Struct_ID3D11ShaderReflectionVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
extern "C" {
    pub static IID_ID3D11ShaderReflectionType: GUID;
    pub static IID_ID3D11ShaderReflectionVariable: GUID;
    pub static IID_ID3D11ShaderReflectionConstantBuffer: GUID;
    pub static IID_ID3D11ShaderReflection: GUID;
}
