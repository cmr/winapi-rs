/* automatically generated by rust-bindgen */

pub type IDirect3D9 = Struct_IDirect3D9;
pub type IDirect3DDevice9 = Struct_IDirect3DDevice9;
pub type IDirect3DStateBlock9 = Struct_IDirect3DStateBlock9;
pub type IDirect3DVertexDeclaration9 = Struct_IDirect3DVertexDeclaration9;
pub type IDirect3DVertexShader9 = Struct_IDirect3DVertexShader9;
pub type IDirect3DPixelShader9 = Struct_IDirect3DPixelShader9;
pub type IDirect3DResource9 = Struct_IDirect3DResource9;
pub type IDirect3DBaseTexture9 = Struct_IDirect3DBaseTexture9;
pub type IDirect3DTexture9 = Struct_IDirect3DTexture9;
pub type IDirect3DVolumeTexture9 = Struct_IDirect3DVolumeTexture9;
pub type IDirect3DCubeTexture9 = Struct_IDirect3DCubeTexture9;
pub type IDirect3DVertexBuffer9 = Struct_IDirect3DVertexBuffer9;
pub type IDirect3DIndexBuffer9 = Struct_IDirect3DIndexBuffer9;
pub type IDirect3DSurface9 = Struct_IDirect3DSurface9;
pub type IDirect3DVolume9 = Struct_IDirect3DVolume9;
pub type IDirect3DSwapChain9 = Struct_IDirect3DSwapChain9;
pub type IDirect3DQuery9 = Struct_IDirect3DQuery9;
pub type IDirect3D9Ex = Struct_IDirect3D9Ex;
pub type IDirect3DDevice9Ex = Struct_IDirect3DDevice9Ex;
pub type IDirect3DSwapChain9Ex = Struct_IDirect3DSwapChain9Ex;
pub type IDirect3D9ExOverlayExtension = Struct_IDirect3D9ExOverlayExtension;
pub type IDirect3DDevice9Video = Struct_IDirect3DDevice9Video;
pub type IDirect3DAuthenticatedChannel9 =
    Struct_IDirect3DAuthenticatedChannel9;
pub type IDirect3DCryptoSession9 = Struct_IDirect3DCryptoSession9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3D9 {
    pub lpVtbl: *mut Struct_IDirect3D9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3D9 {
    fn default() -> Struct_IDirect3D9 { unsafe { ::std::mem::zeroed() } }
}
pub type IDirect3D9Vtbl = Struct_IDirect3D9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3D9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirect3D9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirect3D9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut IDirect3D9)
                                           -> ULONG>,
    pub RegisterSoftwareDevice: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3D9,
                                                           pInitializeFunction:
                                                               *mut ::libc::c_void)
                                                          -> HRESULT>,
    pub GetAdapterCount: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirect3D9)
                                                   -> UINT>,
    pub GetAdapterIdentifier: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3D9,
                                                         Adapter: UINT,
                                                         Flags: DWORD,
                                                         pIdentifier:
                                                             *mut D3DADAPTER_IDENTIFIER9)
                                                        -> HRESULT>,
    pub GetAdapterModeCount: ::std::option::Option<extern "C" fn
                                                       (This: *mut IDirect3D9,
                                                        Adapter: UINT,
                                                        Format: D3DFORMAT)
                                                       -> UINT>,
    pub EnumAdapterModes: ::std::option::Option<extern "C" fn
                                                    (This: *mut IDirect3D9,
                                                     Adapter: UINT,
                                                     Format: D3DFORMAT,
                                                     Mode: UINT,
                                                     pMode:
                                                         *mut D3DDISPLAYMODE)
                                                    -> HRESULT>,
    pub GetAdapterDisplayMode: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3D9,
                                                          Adapter: UINT,
                                                          pMode:
                                                              *mut D3DDISPLAYMODE)
                                                         -> HRESULT>,
    pub CheckDeviceType: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirect3D9,
                                                    Adapter: UINT,
                                                    DevType: D3DDEVTYPE,
                                                    AdapterFormat: D3DFORMAT,
                                                    BackBufferFormat:
                                                        D3DFORMAT,
                                                    bWindowed: BOOL)
                                                   -> HRESULT>,
    pub CheckDeviceFormat: ::std::option::Option<extern "C" fn
                                                     (This: *mut IDirect3D9,
                                                      Adapter: UINT,
                                                      DeviceType: D3DDEVTYPE,
                                                      AdapterFormat:
                                                          D3DFORMAT,
                                                      Usage: DWORD,
                                                      RType: D3DRESOURCETYPE,
                                                      CheckFormat: D3DFORMAT)
                                                     -> HRESULT>,
    pub CheckDeviceMultiSampleType: ::std::option::Option<extern "C" fn
                                                              (This:
                                                                   *mut IDirect3D9,
                                                               Adapter: UINT,
                                                               DeviceType:
                                                                   D3DDEVTYPE,
                                                               SurfaceFormat:
                                                                   D3DFORMAT,
                                                               Windowed: BOOL,
                                                               MultiSampleType:
                                                                   D3DMULTISAMPLE_TYPE,
                                                               pQualityLevels:
                                                                   *mut DWORD)
                                                              -> HRESULT>,
    pub CheckDepthStencilMatch: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3D9,
                                                           Adapter: UINT,
                                                           DeviceType:
                                                               D3DDEVTYPE,
                                                           AdapterFormat:
                                                               D3DFORMAT,
                                                           RenderTargetFormat:
                                                               D3DFORMAT,
                                                           DepthStencilFormat:
                                                               D3DFORMAT)
                                                          -> HRESULT>,
    pub CheckDeviceFormatConversion: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3D9,
                                                                Adapter: UINT,
                                                                DeviceType:
                                                                    D3DDEVTYPE,
                                                                SourceFormat:
                                                                    D3DFORMAT,
                                                                TargetFormat:
                                                                    D3DFORMAT)
                                                               -> HRESULT>,
    pub GetDeviceCaps: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3D9,
                                                  Adapter: UINT,
                                                  DeviceType: D3DDEVTYPE,
                                                  pCaps: *mut D3DCAPS9)
                                                 -> HRESULT>,
    pub GetAdapterMonitor: ::std::option::Option<extern "C" fn
                                                     (This: *mut IDirect3D9,
                                                      Adapter: UINT)
                                                     -> HMONITOR>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3D9,
                                                 Adapter: UINT,
                                                 DeviceType: D3DDEVTYPE,
                                                 hFocusWindow: HWND,
                                                 BehaviorFlags: DWORD,
                                                 pPresentationParameters:
                                                     *mut D3DPRESENT_PARAMETERS,
                                                 ppReturnedDeviceInterface:
                                                     *mut *mut IDirect3DDevice9)
                                                -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3D9Vtbl {
    fn default() -> Struct_IDirect3D9Vtbl { unsafe { ::std::mem::zeroed() } }
}
pub type LPDIRECT3D9 = *mut Struct_IDirect3D9;
pub type PDIRECT3D9 = *mut Struct_IDirect3D9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DDevice9 {
    pub lpVtbl: *mut Struct_IDirect3DDevice9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DDevice9 {
    fn default() -> Struct_IDirect3DDevice9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DDevice9Vtbl = Struct_IDirect3DDevice9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DDevice9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DDevice9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DDevice9)
                                           -> ULONG>,
    pub TestCooperativeLevel: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9)
                                                        -> HRESULT>,
    pub GetAvailableTextureMem: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9)
                                                          -> UINT>,
    pub EvictManagedResources: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3DDevice9)
                                                         -> HRESULT>,
    pub GetDirect3D: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                ppD3D9: *mut *mut IDirect3D9)
                                               -> HRESULT>,
    pub GetDeviceCaps: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  pCaps: *mut D3DCAPS9)
                                                 -> HRESULT>,
    pub GetDisplayMode: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   iSwapChain: UINT,
                                                   pMode: *mut D3DDISPLAYMODE)
                                                  -> HRESULT>,
    pub GetCreationParameters: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3DDevice9,
                                                          pParameters:
                                                              *mut D3DDEVICE_CREATION_PARAMETERS)
                                                         -> HRESULT>,
    pub SetCursorProperties: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9,
                                                        XHotSpot: UINT,
                                                        YHotSpot: UINT,
                                                        pCursorBitmap:
                                                            *mut IDirect3DSurface9)
                                                       -> HRESULT>,
    pub SetCursorPosition: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9,
                                                      X: ::libc::c_int,
                                                      Y: ::libc::c_int,
                                                      Flags: DWORD) -> ()>,
    pub ShowCursor: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9,
                                               bShow: BOOL) -> BOOL>,
    pub CreateAdditionalSwapChain: ::std::option::Option<extern "C" fn
                                                             (This:
                                                                  *mut IDirect3DDevice9,
                                                              pPresentationParameters:
                                                                  *mut D3DPRESENT_PARAMETERS,
                                                              pSwapChain:
                                                                  *mut *mut IDirect3DSwapChain9)
                                                             -> HRESULT>,
    pub GetSwapChain: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 iSwapChain: UINT,
                                                 pSwapChain:
                                                     *mut *mut IDirect3DSwapChain9)
                                                -> HRESULT>,
    pub GetNumberOfSwapChains: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3DDevice9)
                                                         -> UINT>,
    pub Reset: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirect3DDevice9,
                                          pPresentationParameters:
                                              *mut D3DPRESENT_PARAMETERS)
                                         -> HRESULT>,
    pub Present: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DDevice9,
                                            pSourceRect: *const RECT,
                                            pDestRect: *const RECT,
                                            hDestWindowOverride: HWND,
                                            pDirtyRegion: *const RGNDATA)
                                           -> HRESULT>,
    pub GetBackBuffer: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  iSwapChain: UINT,
                                                  iBackBuffer: UINT,
                                                  Type: D3DBACKBUFFER_TYPE,
                                                  ppBackBuffer:
                                                      *mut *mut IDirect3DSurface9)
                                                 -> HRESULT>,
    pub GetRasterStatus: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    iSwapChain: UINT,
                                                    pRasterStatus:
                                                        *mut D3DRASTER_STATUS)
                                                   -> HRESULT>,
    pub SetDialogBoxMode: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirect3DDevice9,
                                                     bEnableDialogs: BOOL)
                                                    -> HRESULT>,
    pub SetGammaRamp: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 iSwapChain: UINT,
                                                 Flags: DWORD,
                                                 pRamp: *const D3DGAMMARAMP)
                                                -> ()>,
    pub GetGammaRamp: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 iSwapChain: UINT,
                                                 pRamp: *mut D3DGAMMARAMP)
                                                -> ()>,
    pub CreateTexture: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  Width: UINT, Height: UINT,
                                                  Levels: UINT, Usage: DWORD,
                                                  Format: D3DFORMAT,
                                                  Pool: D3DPOOL,
                                                  ppTexture:
                                                      *mut *mut IDirect3DTexture9,
                                                  pSharedHandle: *mut HANDLE)
                                                 -> HRESULT>,
    pub CreateVolumeTexture: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9,
                                                        Width: UINT,
                                                        Height: UINT,
                                                        Depth: UINT,
                                                        Levels: UINT,
                                                        Usage: DWORD,
                                                        Format: D3DFORMAT,
                                                        Pool: D3DPOOL,
                                                        ppVolumeTexture:
                                                            *mut *mut IDirect3DVolumeTexture9,
                                                        pSharedHandle:
                                                            *mut HANDLE)
                                                       -> HRESULT>,
    pub CreateCubeTexture: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9,
                                                      EdgeLength: UINT,
                                                      Levels: UINT,
                                                      Usage: DWORD,
                                                      Format: D3DFORMAT,
                                                      Pool: D3DPOOL,
                                                      ppCubeTexture:
                                                          *mut *mut IDirect3DCubeTexture9,
                                                      pSharedHandle:
                                                          *mut HANDLE)
                                                     -> HRESULT>,
    pub CreateVertexBuffer: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9,
                                                       Length: UINT,
                                                       Usage: DWORD,
                                                       FVF: DWORD,
                                                       Pool: D3DPOOL,
                                                       ppVertexBuffer:
                                                           *mut *mut IDirect3DVertexBuffer9,
                                                       pSharedHandle:
                                                           *mut HANDLE)
                                                      -> HRESULT>,
    pub CreateIndexBuffer: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9,
                                                      Length: UINT,
                                                      Usage: DWORD,
                                                      Format: D3DFORMAT,
                                                      Pool: D3DPOOL,
                                                      ppIndexBuffer:
                                                          *mut *mut IDirect3DIndexBuffer9,
                                                      pSharedHandle:
                                                          *mut HANDLE)
                                                     -> HRESULT>,
    pub CreateRenderTarget: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9,
                                                       Width: UINT,
                                                       Height: UINT,
                                                       Format: D3DFORMAT,
                                                       MultiSample:
                                                           D3DMULTISAMPLE_TYPE,
                                                       MultisampleQuality:
                                                           DWORD,
                                                       Lockable: BOOL,
                                                       ppSurface:
                                                           *mut *mut IDirect3DSurface9,
                                                       pSharedHandle:
                                                           *mut HANDLE)
                                                      -> HRESULT>,
    pub CreateDepthStencilSurface: ::std::option::Option<extern "C" fn
                                                             (This:
                                                                  *mut IDirect3DDevice9,
                                                              Width: UINT,
                                                              Height: UINT,
                                                              Format:
                                                                  D3DFORMAT,
                                                              MultiSample:
                                                                  D3DMULTISAMPLE_TYPE,
                                                              MultisampleQuality:
                                                                  DWORD,
                                                              Discard: BOOL,
                                                              ppSurface:
                                                                  *mut *mut IDirect3DSurface9,
                                                              pSharedHandle:
                                                                  *mut HANDLE)
                                                             -> HRESULT>,
    pub UpdateSurface: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  pSourceSurface:
                                                      *mut IDirect3DSurface9,
                                                  pSourceRect: *const RECT,
                                                  pDestinationSurface:
                                                      *mut IDirect3DSurface9,
                                                  pDestPoint: *const POINT)
                                                 -> HRESULT>,
    pub UpdateTexture: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  pSourceTexture:
                                                      *mut IDirect3DBaseTexture9,
                                                  pDestinationTexture:
                                                      *mut IDirect3DBaseTexture9)
                                                 -> HRESULT>,
    pub GetRenderTargetData: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9,
                                                        pRenderTarget:
                                                            *mut IDirect3DSurface9,
                                                        pDestSurface:
                                                            *mut IDirect3DSurface9)
                                                       -> HRESULT>,
    pub GetFrontBufferData: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9,
                                                       iSwapChain: UINT,
                                                       pDestSurface:
                                                           *mut IDirect3DSurface9)
                                                      -> HRESULT>,
    pub StretchRect: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                pSourceSurface:
                                                    *mut IDirect3DSurface9,
                                                pSourceRect: *const RECT,
                                                pDestSurface:
                                                    *mut IDirect3DSurface9,
                                                pDestRect: *const RECT,
                                                Filter: D3DTEXTUREFILTERTYPE)
                                               -> HRESULT>,
    pub ColorFill: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DDevice9,
                                              pSurface:
                                                  *mut IDirect3DSurface9,
                                              pRect: *const RECT,
                                              color: D3DCOLOR) -> HRESULT>,
    pub CreateOffscreenPlainSurface: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3DDevice9,
                                                                Width: UINT,
                                                                Height: UINT,
                                                                Format:
                                                                    D3DFORMAT,
                                                                Pool: D3DPOOL,
                                                                ppSurface:
                                                                    *mut *mut IDirect3DSurface9,
                                                                pSharedHandle:
                                                                    *mut HANDLE)
                                                               -> HRESULT>,
    pub SetRenderTarget: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    RenderTargetIndex: DWORD,
                                                    pRenderTarget:
                                                        *mut IDirect3DSurface9)
                                                   -> HRESULT>,
    pub GetRenderTarget: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    RenderTargetIndex: DWORD,
                                                    ppRenderTarget:
                                                        *mut *mut IDirect3DSurface9)
                                                   -> HRESULT>,
    pub SetDepthStencilSurface: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9,
                                                           pNewZStencil:
                                                               *mut IDirect3DSurface9)
                                                          -> HRESULT>,
    pub GetDepthStencilSurface: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9,
                                                           ppZStencilSurface:
                                                               *mut *mut IDirect3DSurface9)
                                                          -> HRESULT>,
    pub BeginScene: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9)
                                              -> HRESULT>,
    pub EndScene: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DDevice9)
                                            -> HRESULT>,
    pub Clear: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirect3DDevice9,
                                          Count: DWORD,
                                          pRects: *const D3DRECT,
                                          Flags: DWORD, Color: D3DCOLOR,
                                          Z: ::libc::c_float, Stencil: DWORD)
                                         -> HRESULT>,
    pub SetTransform: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 State: D3DTRANSFORMSTATETYPE,
                                                 pMatrix: *const D3DMATRIX)
                                                -> HRESULT>,
    pub GetTransform: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 State: D3DTRANSFORMSTATETYPE,
                                                 pMatrix: *mut D3DMATRIX)
                                                -> HRESULT>,
    pub MultiplyTransform: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9,
                                                      arg1:
                                                          D3DTRANSFORMSTATETYPE,
                                                      arg2: *const D3DMATRIX)
                                                     -> HRESULT>,
    pub SetViewport: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                pViewport:
                                                    *const D3DVIEWPORT9)
                                               -> HRESULT>,
    pub GetViewport: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                pViewport: *mut D3DVIEWPORT9)
                                               -> HRESULT>,
    pub SetMaterial: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                pMaterial:
                                                    *const D3DMATERIAL9)
                                               -> HRESULT>,
    pub GetMaterial: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                pMaterial: *mut D3DMATERIAL9)
                                               -> HRESULT>,
    pub SetLight: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DDevice9,
                                             Index: DWORD,
                                             arg1: *const D3DLIGHT9)
                                            -> HRESULT>,
    pub GetLight: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DDevice9,
                                             Index: DWORD,
                                             arg1: *mut D3DLIGHT9)
                                            -> HRESULT>,
    pub LightEnable: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                Index: DWORD, Enable: BOOL)
                                               -> HRESULT>,
    pub GetLightEnable: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   Index: DWORD,
                                                   pEnable: *mut BOOL)
                                                  -> HRESULT>,
    pub SetClipPlane: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 Index: DWORD,
                                                 pPlane:
                                                     *const ::libc::c_float)
                                                -> HRESULT>,
    pub GetClipPlane: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 Index: DWORD,
                                                 pPlane: *mut ::libc::c_float)
                                                -> HRESULT>,
    pub SetRenderState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   State: D3DRENDERSTATETYPE,
                                                   Value: DWORD) -> HRESULT>,
    pub GetRenderState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   State: D3DRENDERSTATETYPE,
                                                   pValue: *mut DWORD)
                                                  -> HRESULT>,
    pub CreateStateBlock: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirect3DDevice9,
                                                     Type: D3DSTATEBLOCKTYPE,
                                                     ppSB:
                                                         *mut *mut IDirect3DStateBlock9)
                                                    -> HRESULT>,
    pub BeginStateBlock: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9)
                                                   -> HRESULT>,
    pub EndStateBlock: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  ppSB:
                                                      *mut *mut IDirect3DStateBlock9)
                                                 -> HRESULT>,
    pub SetClipStatus: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  pClipStatus:
                                                      *const D3DCLIPSTATUS9)
                                                 -> HRESULT>,
    pub GetClipStatus: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  pClipStatus:
                                                      *mut D3DCLIPSTATUS9)
                                                 -> HRESULT>,
    pub GetTexture: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9,
                                               Stage: DWORD,
                                               ppTexture:
                                                   *mut *mut IDirect3DBaseTexture9)
                                              -> HRESULT>,
    pub SetTexture: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9,
                                               Stage: DWORD,
                                               pTexture:
                                                   *mut IDirect3DBaseTexture9)
                                              -> HRESULT>,
    pub GetTextureStageState: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9,
                                                         Stage: DWORD,
                                                         Type:
                                                             D3DTEXTURESTAGESTATETYPE,
                                                         pValue: *mut DWORD)
                                                        -> HRESULT>,
    pub SetTextureStageState: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9,
                                                         Stage: DWORD,
                                                         Type:
                                                             D3DTEXTURESTAGESTATETYPE,
                                                         Value: DWORD)
                                                        -> HRESULT>,
    pub GetSamplerState: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    Sampler: DWORD,
                                                    Type: D3DSAMPLERSTATETYPE,
                                                    pValue: *mut DWORD)
                                                   -> HRESULT>,
    pub SetSamplerState: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    Sampler: DWORD,
                                                    Type: D3DSAMPLERSTATETYPE,
                                                    Value: DWORD) -> HRESULT>,
    pub ValidateDevice: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   pNumPasses: *mut DWORD)
                                                  -> HRESULT>,
    pub SetPaletteEntries: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9,
                                                      PaletteNumber: UINT,
                                                      pEntries:
                                                          *const PALETTEENTRY)
                                                     -> HRESULT>,
    pub GetPaletteEntries: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9,
                                                      PaletteNumber: UINT,
                                                      pEntries:
                                                          *mut PALETTEENTRY)
                                                     -> HRESULT>,
    pub SetCurrentTexturePalette: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             PaletteNumber:
                                                                 UINT)
                                                            -> HRESULT>,
    pub GetCurrentTexturePalette: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             PaletteNumber:
                                                                 *mut UINT)
                                                            -> HRESULT>,
    pub SetScissorRect: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   pRect: *const RECT)
                                                  -> HRESULT>,
    pub GetScissorRect: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   pRect: *mut RECT)
                                                  -> HRESULT>,
    pub SetSoftwareVertexProcessing: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3DDevice9,
                                                                bSoftware:
                                                                    BOOL)
                                                               -> HRESULT>,
    pub GetSoftwareVertexProcessing: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3DDevice9)
                                                               -> BOOL>,
    pub SetNPatchMode: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  nSegments: ::libc::c_float)
                                                 -> HRESULT>,
    pub GetNPatchMode: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9)
                                                 -> ::libc::c_float>,
    pub DrawPrimitive: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  PrimitiveType:
                                                      D3DPRIMITIVETYPE,
                                                  StartVertex: UINT,
                                                  PrimitiveCount: UINT)
                                                 -> HRESULT>,
    pub DrawIndexedPrimitive: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9,
                                                         arg1:
                                                             D3DPRIMITIVETYPE,
                                                         BaseVertexIndex: INT,
                                                         MinVertexIndex: UINT,
                                                         NumVertices: UINT,
                                                         startIndex: UINT,
                                                         primCount: UINT)
                                                        -> HRESULT>,
    pub DrawPrimitiveUP: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    PrimitiveType:
                                                        D3DPRIMITIVETYPE,
                                                    PrimitiveCount: UINT,
                                                    pVertexStreamZeroData:
                                                        *const ::libc::c_void,
                                                    VertexStreamZeroStride:
                                                        UINT) -> HRESULT>,
    pub DrawIndexedPrimitiveUP: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9,
                                                           PrimitiveType:
                                                               D3DPRIMITIVETYPE,
                                                           MinVertexIndex:
                                                               UINT,
                                                           NumVertices: UINT,
                                                           PrimitiveCount:
                                                               UINT,
                                                           pIndexData:
                                                               *const ::libc::c_void,
                                                           IndexDataFormat:
                                                               D3DFORMAT,
                                                           pVertexStreamZeroData:
                                                               *const ::libc::c_void,
                                                           VertexStreamZeroStride:
                                                               UINT)
                                                          -> HRESULT>,
    pub ProcessVertices: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    SrcStartIndex: UINT,
                                                    DestIndex: UINT,
                                                    VertexCount: UINT,
                                                    pDestBuffer:
                                                        *mut IDirect3DVertexBuffer9,
                                                    pVertexDecl:
                                                        *mut IDirect3DVertexDeclaration9,
                                                    Flags: DWORD) -> HRESULT>,
    pub CreateVertexDeclaration: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9,
                                                            pVertexElements:
                                                                *const D3DVERTEXELEMENT9,
                                                            ppDecl:
                                                                *mut *mut IDirect3DVertexDeclaration9)
                                                           -> HRESULT>,
    pub SetVertexDeclaration: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9,
                                                         pDecl:
                                                             *mut IDirect3DVertexDeclaration9)
                                                        -> HRESULT>,
    pub GetVertexDeclaration: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9,
                                                         ppDecl:
                                                             *mut *mut IDirect3DVertexDeclaration9)
                                                        -> HRESULT>,
    pub SetFVF: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DDevice9,
                                           FVF: DWORD) -> HRESULT>,
    pub GetFVF: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DDevice9,
                                           pFVF: *mut DWORD) -> HRESULT>,
    pub CreateVertexShader: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9,
                                                       pFunction:
                                                           *const DWORD,
                                                       ppShader:
                                                           *mut *mut IDirect3DVertexShader9)
                                                      -> HRESULT>,
    pub SetVertexShader: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    pShader:
                                                        *mut IDirect3DVertexShader9)
                                                   -> HRESULT>,
    pub GetVertexShader: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    ppShader:
                                                        *mut *mut IDirect3DVertexShader9)
                                                   -> HRESULT>,
    pub SetVertexShaderConstantF: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *const ::libc::c_float,
                                                             Vector4fCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub GetVertexShaderConstantF: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *mut ::libc::c_float,
                                                             Vector4fCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub SetVertexShaderConstantI: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *const ::libc::c_int,
                                                             Vector4iCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub GetVertexShaderConstantI: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *mut ::libc::c_int,
                                                             Vector4iCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub SetVertexShaderConstantB: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *const BOOL,
                                                             BoolCount: UINT)
                                                            -> HRESULT>,
    pub GetVertexShaderConstantB: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *mut BOOL,
                                                             BoolCount: UINT)
                                                            -> HRESULT>,
    pub SetStreamSource: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    StreamNumber: UINT,
                                                    pStreamData:
                                                        *mut IDirect3DVertexBuffer9,
                                                    OffsetInBytes: UINT,
                                                    Stride: UINT) -> HRESULT>,
    pub GetStreamSource: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9,
                                                    StreamNumber: UINT,
                                                    ppStreamData:
                                                        *mut *mut IDirect3DVertexBuffer9,
                                                    pOffsetInBytes: *mut UINT,
                                                    pStride: *mut UINT)
                                                   -> HRESULT>,
    pub SetStreamSourceFreq: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9,
                                                        StreamNumber: UINT,
                                                        Setting: UINT)
                                                       -> HRESULT>,
    pub GetStreamSourceFreq: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9,
                                                        StreamNumber: UINT,
                                                        pSetting: *mut UINT)
                                                       -> HRESULT>,
    pub SetIndices: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9,
                                               pIndexData:
                                                   *mut IDirect3DIndexBuffer9)
                                              -> HRESULT>,
    pub GetIndices: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9,
                                               ppIndexData:
                                                   *mut *mut IDirect3DIndexBuffer9)
                                              -> HRESULT>,
    pub CreatePixelShader: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9,
                                                      pFunction: *const DWORD,
                                                      ppShader:
                                                          *mut *mut IDirect3DPixelShader9)
                                                     -> HRESULT>,
    pub SetPixelShader: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   pShader:
                                                       *mut IDirect3DPixelShader9)
                                                  -> HRESULT>,
    pub GetPixelShader: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9,
                                                   ppShader:
                                                       *mut *mut IDirect3DPixelShader9)
                                                  -> HRESULT>,
    pub SetPixelShaderConstantF: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *const ::libc::c_float,
                                                            Vector4fCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub GetPixelShaderConstantF: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *mut ::libc::c_float,
                                                            Vector4fCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub SetPixelShaderConstantI: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *const ::libc::c_int,
                                                            Vector4iCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub GetPixelShaderConstantI: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *mut ::libc::c_int,
                                                            Vector4iCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub SetPixelShaderConstantB: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *const BOOL,
                                                            BoolCount: UINT)
                                                           -> HRESULT>,
    pub GetPixelShaderConstantB: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *mut BOOL,
                                                            BoolCount: UINT)
                                                           -> HRESULT>,
    pub DrawRectPatch: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3DDevice9,
                                                  Handle: UINT,
                                                  pNumSegs:
                                                      *const ::libc::c_float,
                                                  pRectPatchInfo:
                                                      *const D3DRECTPATCH_INFO)
                                                 -> HRESULT>,
    pub DrawTriPatch: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DDevice9,
                                                 Handle: UINT,
                                                 pNumSegs:
                                                     *const ::libc::c_float,
                                                 pTriPatchInfo:
                                                     *const D3DTRIPATCH_INFO)
                                                -> HRESULT>,
    pub DeletePatch: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                Handle: UINT) -> HRESULT>,
    pub CreateQuery: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9,
                                                Type: D3DQUERYTYPE,
                                                ppQuery:
                                                    *mut *mut IDirect3DQuery9)
                                               -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DDevice9Vtbl {
    fn default() -> Struct_IDirect3DDevice9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DDEVICE9 = *mut Struct_IDirect3DDevice9;
pub type PDIRECT3DDEVICE9 = *mut Struct_IDirect3DDevice9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DStateBlock9 {
    pub lpVtbl: *mut Struct_IDirect3DStateBlock9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DStateBlock9 {
    fn default() -> Struct_IDirect3DStateBlock9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DStateBlock9Vtbl = Struct_IDirect3DStateBlock9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DStateBlock9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DStateBlock9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DStateBlock9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DStateBlock9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DStateBlock9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub Capture: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DStateBlock9)
                                           -> HRESULT>,
    pub Apply: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirect3DStateBlock9)
                                         -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DStateBlock9Vtbl {
    fn default() -> Struct_IDirect3DStateBlock9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DSTATEBLOCK9 = *mut Struct_IDirect3DStateBlock9;
pub type PDIRECT3DSTATEBLOCK9 = *mut Struct_IDirect3DStateBlock9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DSwapChain9 {
    pub lpVtbl: *mut Struct_IDirect3DSwapChain9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DSwapChain9 {
    fn default() -> Struct_IDirect3DSwapChain9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DSwapChain9Vtbl = Struct_IDirect3DSwapChain9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DSwapChain9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DSwapChain9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DSwapChain9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSwapChain9)
                                           -> ULONG>,
    pub Present: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSwapChain9,
                                            pSourceRect: *const RECT,
                                            pDestRect: *const RECT,
                                            hDestWindowOverride: HWND,
                                            pDirtyRegion: *const RGNDATA,
                                            dwFlags: DWORD) -> HRESULT>,
    pub GetFrontBufferData: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DSwapChain9,
                                                       pDestSurface:
                                                           *mut IDirect3DSurface9)
                                                      -> HRESULT>,
    pub GetBackBuffer: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DSwapChain9,
                                                  iBackBuffer: UINT,
                                                  Type: D3DBACKBUFFER_TYPE,
                                                  ppBackBuffer:
                                                      *mut *mut IDirect3DSurface9)
                                                 -> HRESULT>,
    pub GetRasterStatus: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DSwapChain9,
                                                    pRasterStatus:
                                                        *mut D3DRASTER_STATUS)
                                                   -> HRESULT>,
    pub GetDisplayMode: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DSwapChain9,
                                                   pMode: *mut D3DDISPLAYMODE)
                                                  -> HRESULT>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DSwapChain9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub GetPresentParameters: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DSwapChain9,
                                                         pPresentationParameters:
                                                             *mut D3DPRESENT_PARAMETERS)
                                                        -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DSwapChain9Vtbl {
    fn default() -> Struct_IDirect3DSwapChain9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DSWAPCHAIN9 = *mut Struct_IDirect3DSwapChain9;
pub type PDIRECT3DSWAPCHAIN9 = *mut Struct_IDirect3DSwapChain9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DResource9 {
    pub lpVtbl: *mut Struct_IDirect3DResource9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DResource9 {
    fn default() -> Struct_IDirect3DResource9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DResource9Vtbl = Struct_IDirect3DResource9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DResource9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DResource9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DResource9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DResource9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DResource9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DResource9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DResource9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DResource9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DResource9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DResource9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DResource9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DResource9)
                                           -> D3DRESOURCETYPE>,
}
impl ::std::default::Default for Struct_IDirect3DResource9Vtbl {
    fn default() -> Struct_IDirect3DResource9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DRESOURCE9 = *mut Struct_IDirect3DResource9;
pub type PDIRECT3DRESOURCE9 = *mut Struct_IDirect3DResource9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVertexDeclaration9 {
    pub lpVtbl: *mut Struct_IDirect3DVertexDeclaration9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DVertexDeclaration9 {
    fn default() -> Struct_IDirect3DVertexDeclaration9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DVertexDeclaration9Vtbl =
    Struct_IDirect3DVertexDeclaration9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVertexDeclaration9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVertexDeclaration9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This:
                                               *mut IDirect3DVertexDeclaration9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3DVertexDeclaration9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DVertexDeclaration9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub GetDeclaration: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVertexDeclaration9,
                                                   pElement:
                                                       *mut D3DVERTEXELEMENT9,
                                                   pNumElements: *mut UINT)
                                                  -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DVertexDeclaration9Vtbl {
    fn default() -> Struct_IDirect3DVertexDeclaration9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DVERTEXDECLARATION9 =
    *mut Struct_IDirect3DVertexDeclaration9;
pub type PDIRECT3DVERTEXDECLARATION9 =
    *mut Struct_IDirect3DVertexDeclaration9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVertexShader9 {
    pub lpVtbl: *mut Struct_IDirect3DVertexShader9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DVertexShader9 {
    fn default() -> Struct_IDirect3DVertexShader9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DVertexShader9Vtbl = Struct_IDirect3DVertexShader9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVertexShader9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVertexShader9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DVertexShader9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVertexShader9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DVertexShader9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub GetFunction: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DVertexShader9,
                                                arg1: *mut ::libc::c_void,
                                                pSizeOfData: *mut UINT)
                                               -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DVertexShader9Vtbl {
    fn default() -> Struct_IDirect3DVertexShader9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DVERTEXSHADER9 = *mut Struct_IDirect3DVertexShader9;
pub type PDIRECT3DVERTEXSHADER9 = *mut Struct_IDirect3DVertexShader9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DPixelShader9 {
    pub lpVtbl: *mut Struct_IDirect3DPixelShader9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DPixelShader9 {
    fn default() -> Struct_IDirect3DPixelShader9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DPixelShader9Vtbl = Struct_IDirect3DPixelShader9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DPixelShader9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DPixelShader9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DPixelShader9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DPixelShader9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DPixelShader9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub GetFunction: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DPixelShader9,
                                                arg1: *mut ::libc::c_void,
                                                pSizeOfData: *mut UINT)
                                               -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DPixelShader9Vtbl {
    fn default() -> Struct_IDirect3DPixelShader9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DPIXELSHADER9 = *mut Struct_IDirect3DPixelShader9;
pub type PDIRECT3DPIXELSHADER9 = *mut Struct_IDirect3DPixelShader9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DBaseTexture9 {
    pub lpVtbl: *mut Struct_IDirect3DBaseTexture9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DBaseTexture9 {
    fn default() -> Struct_IDirect3DBaseTexture9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DBaseTexture9Vtbl = Struct_IDirect3DBaseTexture9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DBaseTexture9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DBaseTexture9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DBaseTexture9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DBaseTexture9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DBaseTexture9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DBaseTexture9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DBaseTexture9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DBaseTexture9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DBaseTexture9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DBaseTexture9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DBaseTexture9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DBaseTexture9)
                                           -> D3DRESOURCETYPE>,
    pub SetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DBaseTexture9,
                                           LODNew: DWORD) -> DWORD>,
    pub GetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DBaseTexture9)
                                          -> DWORD>,
    pub GetLevelCount: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DBaseTexture9)
                                                 -> DWORD>,
    pub SetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DBaseTexture9,
                                                         FilterType:
                                                             D3DTEXTUREFILTERTYPE)
                                                        -> HRESULT>,
    pub GetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DBaseTexture9)
                                                        ->
                                                            D3DTEXTUREFILTERTYPE>,
    pub GenerateMipSubLevels: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DBaseTexture9)
                                                        -> ()>,
}
impl ::std::default::Default for Struct_IDirect3DBaseTexture9Vtbl {
    fn default() -> Struct_IDirect3DBaseTexture9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DBASETEXTURE9 = *mut Struct_IDirect3DBaseTexture9;
pub type PDIRECT3DBASETEXTURE9 = *mut Struct_IDirect3DBaseTexture9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DTexture9 {
    pub lpVtbl: *mut Struct_IDirect3DTexture9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DTexture9 {
    fn default() -> Struct_IDirect3DTexture9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DTexture9Vtbl = Struct_IDirect3DTexture9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DTexture9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DTexture9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DTexture9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DTexture9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DTexture9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DTexture9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DTexture9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DTexture9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DTexture9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DTexture9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DTexture9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DTexture9)
                                           -> D3DRESOURCETYPE>,
    pub SetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DTexture9,
                                           LODNew: DWORD) -> DWORD>,
    pub GetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DTexture9)
                                          -> DWORD>,
    pub GetLevelCount: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DTexture9)
                                                 -> DWORD>,
    pub SetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DTexture9,
                                                         FilterType:
                                                             D3DTEXTUREFILTERTYPE)
                                                        -> HRESULT>,
    pub GetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DTexture9)
                                                        ->
                                                            D3DTEXTUREFILTERTYPE>,
    pub GenerateMipSubLevels: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DTexture9)
                                                        -> ()>,
    pub GetLevelDesc: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DTexture9,
                                                 Level: UINT,
                                                 pDesc: *mut D3DSURFACE_DESC)
                                                -> HRESULT>,
    pub GetSurfaceLevel: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DTexture9,
                                                    Level: UINT,
                                                    ppSurfaceLevel:
                                                        *mut *mut IDirect3DSurface9)
                                                   -> HRESULT>,
    pub LockRect: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DTexture9,
                                             Level: UINT,
                                             pLockedRect: *mut D3DLOCKED_RECT,
                                             pRect: *const RECT, Flags: DWORD)
                                            -> HRESULT>,
    pub UnlockRect: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DTexture9,
                                               Level: UINT) -> HRESULT>,
    pub AddDirtyRect: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DTexture9,
                                                 pDirtyRect: *const RECT)
                                                -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DTexture9Vtbl {
    fn default() -> Struct_IDirect3DTexture9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DTEXTURE9 = *mut Struct_IDirect3DTexture9;
pub type PDIRECT3DTEXTURE9 = *mut Struct_IDirect3DTexture9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVolumeTexture9 {
    pub lpVtbl: *mut Struct_IDirect3DVolumeTexture9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DVolumeTexture9 {
    fn default() -> Struct_IDirect3DVolumeTexture9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DVolumeTexture9Vtbl = Struct_IDirect3DVolumeTexture9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVolumeTexture9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVolumeTexture9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DVolumeTexture9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3DVolumeTexture9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DVolumeTexture9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVolumeTexture9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVolumeTexture9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DVolumeTexture9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DVolumeTexture9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DVolumeTexture9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3DVolumeTexture9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3DVolumeTexture9)
                                           -> D3DRESOURCETYPE>,
    pub SetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DVolumeTexture9,
                                           LODNew: DWORD) -> DWORD>,
    pub GetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DVolumeTexture9)
                                          -> DWORD>,
    pub GetLevelCount: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DVolumeTexture9)
                                                 -> DWORD>,
    pub SetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DVolumeTexture9,
                                                         FilterType:
                                                             D3DTEXTUREFILTERTYPE)
                                                        -> HRESULT>,
    pub GetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DVolumeTexture9)
                                                        ->
                                                            D3DTEXTUREFILTERTYPE>,
    pub GenerateMipSubLevels: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DVolumeTexture9)
                                                        -> ()>,
    pub GetLevelDesc: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DVolumeTexture9,
                                                 Level: UINT,
                                                 pDesc: *mut D3DVOLUME_DESC)
                                                -> HRESULT>,
    pub GetVolumeLevel: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVolumeTexture9,
                                                   Level: UINT,
                                                   ppVolumeLevel:
                                                       *mut *mut IDirect3DVolume9)
                                                  -> HRESULT>,
    pub LockBox: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3DVolumeTexture9,
                                            Level: UINT,
                                            pLockedVolume: *mut D3DLOCKED_BOX,
                                            pBox: *const D3DBOX, Flags: DWORD)
                                           -> HRESULT>,
    pub UnlockBox: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DVolumeTexture9,
                                              Level: UINT) -> HRESULT>,
    pub AddDirtyBox: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DVolumeTexture9,
                                                pDirtyBox: *const D3DBOX)
                                               -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DVolumeTexture9Vtbl {
    fn default() -> Struct_IDirect3DVolumeTexture9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DVOLUMETEXTURE9 = *mut Struct_IDirect3DVolumeTexture9;
pub type PDIRECT3DVOLUMETEXTURE9 = *mut Struct_IDirect3DVolumeTexture9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DCubeTexture9 {
    pub lpVtbl: *mut Struct_IDirect3DCubeTexture9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DCubeTexture9 {
    fn default() -> Struct_IDirect3DCubeTexture9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DCubeTexture9Vtbl = Struct_IDirect3DCubeTexture9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DCubeTexture9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DCubeTexture9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DCubeTexture9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DCubeTexture9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DCubeTexture9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DCubeTexture9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DCubeTexture9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DCubeTexture9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DCubeTexture9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DCubeTexture9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DCubeTexture9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DCubeTexture9)
                                           -> D3DRESOURCETYPE>,
    pub SetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DCubeTexture9,
                                           LODNew: DWORD) -> DWORD>,
    pub GetLOD: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DCubeTexture9)
                                          -> DWORD>,
    pub GetLevelCount: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DCubeTexture9)
                                                 -> DWORD>,
    pub SetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DCubeTexture9,
                                                         FilterType:
                                                             D3DTEXTUREFILTERTYPE)
                                                        -> HRESULT>,
    pub GetAutoGenFilterType: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DCubeTexture9)
                                                        ->
                                                            D3DTEXTUREFILTERTYPE>,
    pub GenerateMipSubLevels: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DCubeTexture9)
                                                        -> ()>,
    pub GetLevelDesc: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DCubeTexture9,
                                                 Level: UINT,
                                                 pDesc: *mut D3DSURFACE_DESC)
                                                -> HRESULT>,
    pub GetCubeMapSurface: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DCubeTexture9,
                                                      FaceType:
                                                          D3DCUBEMAP_FACES,
                                                      Level: UINT,
                                                      ppCubeMapSurface:
                                                          *mut *mut IDirect3DSurface9)
                                                     -> HRESULT>,
    pub LockRect: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DCubeTexture9,
                                             FaceType: D3DCUBEMAP_FACES,
                                             Level: UINT,
                                             pLockedRect: *mut D3DLOCKED_RECT,
                                             pRect: *const RECT, Flags: DWORD)
                                            -> HRESULT>,
    pub UnlockRect: ::std::option::Option<extern "C" fn
                                              (This:
                                                   *mut IDirect3DCubeTexture9,
                                               FaceType: D3DCUBEMAP_FACES,
                                               Level: UINT) -> HRESULT>,
    pub AddDirtyRect: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DCubeTexture9,
                                                 FaceType: D3DCUBEMAP_FACES,
                                                 pDirtyRect: *const RECT)
                                                -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DCubeTexture9Vtbl {
    fn default() -> Struct_IDirect3DCubeTexture9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DCUBETEXTURE9 = *mut Struct_IDirect3DCubeTexture9;
pub type PDIRECT3DCUBETEXTURE9 = *mut Struct_IDirect3DCubeTexture9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVertexBuffer9 {
    pub lpVtbl: *mut Struct_IDirect3DVertexBuffer9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DVertexBuffer9 {
    fn default() -> Struct_IDirect3DVertexBuffer9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DVertexBuffer9Vtbl = Struct_IDirect3DVertexBuffer9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVertexBuffer9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVertexBuffer9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DVertexBuffer9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVertexBuffer9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DVertexBuffer9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVertexBuffer9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVertexBuffer9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DVertexBuffer9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DVertexBuffer9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DVertexBuffer9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVertexBuffer9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVertexBuffer9)
                                           -> D3DRESOURCETYPE>,
    pub Lock: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirect3DVertexBuffer9,
                                         OffsetToLock: UINT, SizeToLock: UINT,
                                         ppbData: *mut *mut ::libc::c_void,
                                         Flags: DWORD) -> HRESULT>,
    pub Unlock: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DVertexBuffer9)
                                          -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVertexBuffer9,
                                            pDesc: *mut D3DVERTEXBUFFER_DESC)
                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DVertexBuffer9Vtbl {
    fn default() -> Struct_IDirect3DVertexBuffer9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DVERTEXBUFFER9 = *mut Struct_IDirect3DVertexBuffer9;
pub type PDIRECT3DVERTEXBUFFER9 = *mut Struct_IDirect3DVertexBuffer9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DIndexBuffer9 {
    pub lpVtbl: *mut Struct_IDirect3DIndexBuffer9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DIndexBuffer9 {
    fn default() -> Struct_IDirect3DIndexBuffer9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DIndexBuffer9Vtbl = Struct_IDirect3DIndexBuffer9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DIndexBuffer9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DIndexBuffer9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DIndexBuffer9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DIndexBuffer9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DIndexBuffer9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DIndexBuffer9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DIndexBuffer9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DIndexBuffer9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DIndexBuffer9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This:
                                                    *mut IDirect3DIndexBuffer9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DIndexBuffer9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DIndexBuffer9)
                                           -> D3DRESOURCETYPE>,
    pub Lock: ::std::option::Option<extern "C" fn
                                        (This: *mut IDirect3DIndexBuffer9,
                                         OffsetToLock: UINT, SizeToLock: UINT,
                                         ppbData: *mut *mut ::libc::c_void,
                                         Flags: DWORD) -> HRESULT>,
    pub Unlock: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DIndexBuffer9)
                                          -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DIndexBuffer9,
                                            pDesc: *mut D3DINDEXBUFFER_DESC)
                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DIndexBuffer9Vtbl {
    fn default() -> Struct_IDirect3DIndexBuffer9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DINDEXBUFFER9 = *mut Struct_IDirect3DIndexBuffer9;
pub type PDIRECT3DINDEXBUFFER9 = *mut Struct_IDirect3DIndexBuffer9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DSurface9 {
    pub lpVtbl: *mut Struct_IDirect3DSurface9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DSurface9 {
    fn default() -> Struct_IDirect3DSurface9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DSurface9Vtbl = Struct_IDirect3DSurface9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DSurface9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DSurface9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DSurface9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSurface9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DSurface9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DSurface9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DSurface9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DSurface9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub SetPriority: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DSurface9,
                                                PriorityNew: DWORD) -> DWORD>,
    pub GetPriority: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DSurface9)
                                               -> DWORD>,
    pub PreLoad: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSurface9)
                                           -> ()>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSurface9)
                                           -> D3DRESOURCETYPE>,
    pub GetContainer: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DSurface9,
                                                 riid: *const IID,
                                                 ppContainer:
                                                     *mut *mut ::libc::c_void)
                                                -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSurface9,
                                            pDesc: *mut D3DSURFACE_DESC)
                                           -> HRESULT>,
    pub LockRect: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DSurface9,
                                             pLockedRect: *mut D3DLOCKED_RECT,
                                             pRect: *const RECT, Flags: DWORD)
                                            -> HRESULT>,
    pub UnlockRect: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DSurface9)
                                              -> HRESULT>,
    pub GetDC: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirect3DSurface9,
                                          phdc: *mut HDC) -> HRESULT>,
    pub ReleaseDC: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DSurface9,
                                              hdc: HDC) -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DSurface9Vtbl {
    fn default() -> Struct_IDirect3DSurface9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DSURFACE9 = *mut Struct_IDirect3DSurface9;
pub type PDIRECT3DSURFACE9 = *mut Struct_IDirect3DSurface9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVolume9 {
    pub lpVtbl: *mut Struct_IDirect3DVolume9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DVolume9 {
    fn default() -> Struct_IDirect3DVolume9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DVolume9Vtbl = Struct_IDirect3DVolume9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DVolume9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVolume9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DVolume9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVolume9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DVolume9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub SetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVolume9,
                                                   refguid: *const GUID,
                                                   pData:
                                                       *const ::libc::c_void,
                                                   SizeOfData: DWORD,
                                                   Flags: DWORD) -> HRESULT>,
    pub GetPrivateData: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DVolume9,
                                                   refguid: *const GUID,
                                                   pData: *mut ::libc::c_void,
                                                   pSizeOfData: *mut DWORD)
                                                  -> HRESULT>,
    pub FreePrivateData: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DVolume9,
                                                    refguid: *const GUID)
                                                   -> HRESULT>,
    pub GetContainer: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3DVolume9,
                                                 riid: *const IID,
                                                 ppContainer:
                                                     *mut *mut ::libc::c_void)
                                                -> HRESULT>,
    pub GetDesc: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVolume9,
                                            pDesc: *mut D3DVOLUME_DESC)
                                           -> HRESULT>,
    pub LockBox: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DVolume9,
                                            pLockedVolume: *mut D3DLOCKED_BOX,
                                            pBox: *const D3DBOX, Flags: DWORD)
                                           -> HRESULT>,
    pub UnlockBox: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DVolume9)
                                             -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DVolume9Vtbl {
    fn default() -> Struct_IDirect3DVolume9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DVOLUME9 = *mut Struct_IDirect3DVolume9;
pub type PDIRECT3DVOLUME9 = *mut Struct_IDirect3DVolume9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DQuery9 {
    pub lpVtbl: *mut Struct_IDirect3DQuery9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DQuery9 {
    fn default() -> Struct_IDirect3DQuery9 { unsafe { ::std::mem::zeroed() } }
}
pub type IDirect3DQuery9Vtbl = Struct_IDirect3DQuery9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DQuery9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirect3DQuery9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DQuery9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DQuery9)
                                           -> ULONG>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DQuery9,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub GetType: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DQuery9)
                                           -> D3DQUERYTYPE>,
    pub GetDataSize: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DQuery9)
                                               -> DWORD>,
    pub Issue: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirect3DQuery9,
                                          dwIssueFlags: DWORD) -> HRESULT>,
    pub GetData: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DQuery9,
                                            pData: *mut ::libc::c_void,
                                            dwSize: DWORD,
                                            dwGetDataFlags: DWORD)
                                           -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DQuery9Vtbl {
    fn default() -> Struct_IDirect3DQuery9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DQUERY9 = *mut Struct_IDirect3DQuery9;
pub type PDIRECT3DQUERY9 = *mut Struct_IDirect3DQuery9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3D9Ex {
    pub lpVtbl: *mut Struct_IDirect3D9ExVtbl,
}
impl ::std::default::Default for Struct_IDirect3D9Ex {
    fn default() -> Struct_IDirect3D9Ex { unsafe { ::std::mem::zeroed() } }
}
pub type IDirect3D9ExVtbl = Struct_IDirect3D9ExVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3D9ExVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirect3D9Ex,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn(This: *mut IDirect3D9Ex)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn(This: *mut IDirect3D9Ex)
                                           -> ULONG>,
    pub GetAdapterCount: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirect3D9Ex)
                                                   -> UINT>,
    pub GetAdapterIdentifier: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3D9Ex,
                                                         Adapter: UINT,
                                                         Flags: DWORD,
                                                         pIdentifier:
                                                             *mut D3DADAPTER_IDENTIFIER9)
                                                        -> HRESULT>,
    pub GetAdapterModeCount: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3D9Ex,
                                                        Adapter: UINT,
                                                        Format: D3DFORMAT)
                                                       -> UINT>,
    pub EnumAdapterModes: ::std::option::Option<extern "C" fn
                                                    (This: *mut IDirect3D9Ex,
                                                     Adapter: UINT,
                                                     Format: D3DFORMAT,
                                                     Mode: UINT,
                                                     pMode:
                                                         *mut D3DDISPLAYMODE)
                                                    -> HRESULT>,
    pub GetAdapterDisplayMode: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3D9Ex,
                                                          Adapter: UINT,
                                                          pMode:
                                                              *mut D3DDISPLAYMODE)
                                                         -> HRESULT>,
    pub CheckDeviceType: ::std::option::Option<extern "C" fn
                                                   (This: *mut IDirect3D9Ex,
                                                    Adapter: UINT,
                                                    DevType: D3DDEVTYPE,
                                                    AdapterFormat: D3DFORMAT,
                                                    BackBufferFormat:
                                                        D3DFORMAT,
                                                    bWindowed: BOOL)
                                                   -> HRESULT>,
    pub CheckDeviceFormat: ::std::option::Option<extern "C" fn
                                                     (This: *mut IDirect3D9Ex,
                                                      Adapter: UINT,
                                                      DeviceType: D3DDEVTYPE,
                                                      AdapterFormat:
                                                          D3DFORMAT,
                                                      Usage: DWORD,
                                                      RType: D3DRESOURCETYPE,
                                                      CheckFormat: D3DFORMAT)
                                                     -> HRESULT>,
    pub CheckDeviceMultiSampleType: ::std::option::Option<extern "C" fn
                                                              (This:
                                                                   *mut IDirect3D9Ex,
                                                               Adapter: UINT,
                                                               DeviceType:
                                                                   D3DDEVTYPE,
                                                               SurfaceFormat:
                                                                   D3DFORMAT,
                                                               Windowed: BOOL,
                                                               MultiSampleType:
                                                                   D3DMULTISAMPLE_TYPE,
                                                               pQualityLevels:
                                                                   *mut DWORD)
                                                              -> HRESULT>,
    pub CheckDepthStencilMatch: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3D9Ex,
                                                           Adapter: UINT,
                                                           DeviceType:
                                                               D3DDEVTYPE,
                                                           AdapterFormat:
                                                               D3DFORMAT,
                                                           RenderTargetFormat:
                                                               D3DFORMAT,
                                                           DepthStencilFormat:
                                                               D3DFORMAT)
                                                          -> HRESULT>,
    pub CheckDeviceFormatConversion: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3D9Ex,
                                                                Adapter: UINT,
                                                                DeviceType:
                                                                    D3DDEVTYPE,
                                                                SourceFormat:
                                                                    D3DFORMAT,
                                                                TargetFormat:
                                                                    D3DFORMAT)
                                                               -> HRESULT>,
    pub GetDeviceCaps: ::std::option::Option<extern "C" fn
                                                 (This: *mut IDirect3D9Ex,
                                                  Adapter: UINT,
                                                  DeviceType: D3DDEVTYPE,
                                                  pCaps: *mut D3DCAPS9)
                                                 -> HRESULT>,
    pub GetAdapterMonitor: ::std::option::Option<extern "C" fn
                                                     (This: *mut IDirect3D9Ex,
                                                      Adapter: UINT)
                                                     -> HMONITOR>,
    pub CreateDevice: ::std::option::Option<extern "C" fn
                                                (This: *mut IDirect3D9Ex,
                                                 Adapter: UINT,
                                                 DeviceType: D3DDEVTYPE,
                                                 hFocusWindow: HWND,
                                                 BehaviorFlags: DWORD,
                                                 pPresentationParameters:
                                                     *mut D3DPRESENT_PARAMETERS,
                                                 ppReturnedDeviceInterface:
                                                     *mut *mut IDirect3DDevice9)
                                                -> HRESULT>,
    pub GetAdapterModeCountEx: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3D9Ex,
                                                          Adapter: UINT,
                                                          pFilter:
                                                              *const D3DDISPLAYMODEFILTER)
                                                         -> UINT>,
    pub EnumAdapterModesEx: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3D9Ex,
                                                       Adapter: UINT,
                                                       pFilter:
                                                           *const D3DDISPLAYMODEFILTER,
                                                       Mode: UINT,
                                                       pMode:
                                                           *mut D3DDISPLAYMODEEX)
                                                      -> HRESULT>,
    pub GetAdapterDisplayModeEx: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3D9Ex,
                                                            Adapter: UINT,
                                                            pMode:
                                                                *mut D3DDISPLAYMODEEX,
                                                            pRotation:
                                                                *mut D3DDISPLAYROTATION)
                                                           -> HRESULT>,
    pub CreateDeviceEx: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirect3D9Ex,
                                                   Adapter: UINT,
                                                   DeviceType: D3DDEVTYPE,
                                                   hFocusWindow: HWND,
                                                   BehaviorFlags: DWORD,
                                                   pPresentationParameters:
                                                       *mut D3DPRESENT_PARAMETERS,
                                                   pFullscreenDisplayMode:
                                                       *mut D3DDISPLAYMODEEX,
                                                   ppReturnedDeviceInterface:
                                                       *mut *mut IDirect3DDevice9Ex)
                                                  -> HRESULT>,
    pub GetAdapterLUID: ::std::option::Option<extern "C" fn
                                                  (This: *mut IDirect3D9Ex,
                                                   Adapter: UINT,
                                                   pLUID: *mut LUID)
                                                  -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3D9ExVtbl {
    fn default() -> Struct_IDirect3D9ExVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3D9EX = *mut Struct_IDirect3D9Ex;
pub type PDIRECT3D9EX = *mut Struct_IDirect3D9Ex;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DDevice9Ex {
    pub lpVtbl: *mut Struct_IDirect3DDevice9ExVtbl,
}
impl ::std::default::Default for Struct_IDirect3DDevice9Ex {
    fn default() -> Struct_IDirect3DDevice9Ex {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DDevice9ExVtbl = Struct_IDirect3DDevice9ExVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DDevice9ExVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DDevice9Ex)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DDevice9Ex)
                                           -> ULONG>,
    pub TestCooperativeLevel: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex)
                                                        -> HRESULT>,
    pub GetAvailableTextureMem: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9Ex)
                                                          -> UINT>,
    pub EvictManagedResources: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3DDevice9Ex)
                                                         -> HRESULT>,
    pub GetDirect3D: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                ppD3D9: *mut *mut IDirect3D9)
                                               -> HRESULT>,
    pub GetDeviceCaps: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  pCaps: *mut D3DCAPS9)
                                                 -> HRESULT>,
    pub GetDisplayMode: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   iSwapChain: UINT,
                                                   pMode: *mut D3DDISPLAYMODE)
                                                  -> HRESULT>,
    pub GetCreationParameters: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3DDevice9Ex,
                                                          pParameters:
                                                              *mut D3DDEVICE_CREATION_PARAMETERS)
                                                         -> HRESULT>,
    pub SetCursorProperties: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9Ex,
                                                        XHotSpot: UINT,
                                                        YHotSpot: UINT,
                                                        pCursorBitmap:
                                                            *mut IDirect3DSurface9)
                                                       -> HRESULT>,
    pub SetCursorPosition: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9Ex,
                                                      X: ::libc::c_int,
                                                      Y: ::libc::c_int,
                                                      Flags: DWORD) -> ()>,
    pub ShowCursor: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9Ex,
                                               bShow: BOOL) -> BOOL>,
    pub CreateAdditionalSwapChain: ::std::option::Option<extern "C" fn
                                                             (This:
                                                                  *mut IDirect3DDevice9Ex,
                                                              pPresentationParameters:
                                                                  *mut D3DPRESENT_PARAMETERS,
                                                              pSwapChain:
                                                                  *mut *mut IDirect3DSwapChain9)
                                                             -> HRESULT>,
    pub GetSwapChain: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 iSwapChain: UINT,
                                                 pSwapChain:
                                                     *mut *mut IDirect3DSwapChain9)
                                                -> HRESULT>,
    pub GetNumberOfSwapChains: ::std::option::Option<extern "C" fn
                                                         (This:
                                                              *mut IDirect3DDevice9Ex)
                                                         -> UINT>,
    pub Reset: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirect3DDevice9Ex,
                                          pPresentationParameters:
                                              *mut D3DPRESENT_PARAMETERS)
                                         -> HRESULT>,
    pub Present: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DDevice9Ex,
                                            pSourceRect: *const RECT,
                                            pDestRect: *const RECT,
                                            hDestWindowOverride: HWND,
                                            pDirtyRegion: *const RGNDATA)
                                           -> HRESULT>,
    pub GetBackBuffer: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  iSwapChain: UINT,
                                                  iBackBuffer: UINT,
                                                  Type: D3DBACKBUFFER_TYPE,
                                                  ppBackBuffer:
                                                      *mut *mut IDirect3DSurface9)
                                                 -> HRESULT>,
    pub GetRasterStatus: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    iSwapChain: UINT,
                                                    pRasterStatus:
                                                        *mut D3DRASTER_STATUS)
                                                   -> HRESULT>,
    pub SetDialogBoxMode: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirect3DDevice9Ex,
                                                     bEnableDialogs: BOOL)
                                                    -> HRESULT>,
    pub SetGammaRamp: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 iSwapChain: UINT,
                                                 Flags: DWORD,
                                                 pRamp: *const D3DGAMMARAMP)
                                                -> ()>,
    pub GetGammaRamp: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 iSwapChain: UINT,
                                                 pRamp: *mut D3DGAMMARAMP)
                                                -> ()>,
    pub CreateTexture: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  Width: UINT, Height: UINT,
                                                  Levels: UINT, Usage: DWORD,
                                                  Format: D3DFORMAT,
                                                  Pool: D3DPOOL,
                                                  ppTexture:
                                                      *mut *mut IDirect3DTexture9,
                                                  pSharedHandle: *mut HANDLE)
                                                 -> HRESULT>,
    pub CreateVolumeTexture: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9Ex,
                                                        Width: UINT,
                                                        Height: UINT,
                                                        Depth: UINT,
                                                        Levels: UINT,
                                                        Usage: DWORD,
                                                        Format: D3DFORMAT,
                                                        Pool: D3DPOOL,
                                                        ppVolumeTexture:
                                                            *mut *mut IDirect3DVolumeTexture9,
                                                        pSharedHandle:
                                                            *mut HANDLE)
                                                       -> HRESULT>,
    pub CreateCubeTexture: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9Ex,
                                                      EdgeLength: UINT,
                                                      Levels: UINT,
                                                      Usage: DWORD,
                                                      Format: D3DFORMAT,
                                                      Pool: D3DPOOL,
                                                      ppCubeTexture:
                                                          *mut *mut IDirect3DCubeTexture9,
                                                      pSharedHandle:
                                                          *mut HANDLE)
                                                     -> HRESULT>,
    pub CreateVertexBuffer: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9Ex,
                                                       Length: UINT,
                                                       Usage: DWORD,
                                                       FVF: DWORD,
                                                       Pool: D3DPOOL,
                                                       ppVertexBuffer:
                                                           *mut *mut IDirect3DVertexBuffer9,
                                                       pSharedHandle:
                                                           *mut HANDLE)
                                                      -> HRESULT>,
    pub CreateIndexBuffer: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9Ex,
                                                      Length: UINT,
                                                      Usage: DWORD,
                                                      Format: D3DFORMAT,
                                                      Pool: D3DPOOL,
                                                      ppIndexBuffer:
                                                          *mut *mut IDirect3DIndexBuffer9,
                                                      pSharedHandle:
                                                          *mut HANDLE)
                                                     -> HRESULT>,
    pub CreateRenderTarget: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9Ex,
                                                       Width: UINT,
                                                       Height: UINT,
                                                       Format: D3DFORMAT,
                                                       MultiSample:
                                                           D3DMULTISAMPLE_TYPE,
                                                       MultisampleQuality:
                                                           DWORD,
                                                       Lockable: BOOL,
                                                       ppSurface:
                                                           *mut *mut IDirect3DSurface9,
                                                       pSharedHandle:
                                                           *mut HANDLE)
                                                      -> HRESULT>,
    pub CreateDepthStencilSurface: ::std::option::Option<extern "C" fn
                                                             (This:
                                                                  *mut IDirect3DDevice9Ex,
                                                              Width: UINT,
                                                              Height: UINT,
                                                              Format:
                                                                  D3DFORMAT,
                                                              MultiSample:
                                                                  D3DMULTISAMPLE_TYPE,
                                                              MultisampleQuality:
                                                                  DWORD,
                                                              Discard: BOOL,
                                                              ppSurface:
                                                                  *mut *mut IDirect3DSurface9,
                                                              pSharedHandle:
                                                                  *mut HANDLE)
                                                             -> HRESULT>,
    pub UpdateSurface: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  pSourceSurface:
                                                      *mut IDirect3DSurface9,
                                                  pSourceRect: *const RECT,
                                                  pDestinationSurface:
                                                      *mut IDirect3DSurface9,
                                                  pDestPoint: *const POINT)
                                                 -> HRESULT>,
    pub UpdateTexture: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  pSourceTexture:
                                                      *mut IDirect3DBaseTexture9,
                                                  pDestinationTexture:
                                                      *mut IDirect3DBaseTexture9)
                                                 -> HRESULT>,
    pub GetRenderTargetData: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9Ex,
                                                        pRenderTarget:
                                                            *mut IDirect3DSurface9,
                                                        pDestSurface:
                                                            *mut IDirect3DSurface9)
                                                       -> HRESULT>,
    pub GetFrontBufferData: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9Ex,
                                                       iSwapChain: UINT,
                                                       pDestSurface:
                                                           *mut IDirect3DSurface9)
                                                      -> HRESULT>,
    pub StretchRect: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                pSourceSurface:
                                                    *mut IDirect3DSurface9,
                                                pSourceRect: *const RECT,
                                                pDestSurface:
                                                    *mut IDirect3DSurface9,
                                                pDestRect: *const RECT,
                                                Filter: D3DTEXTUREFILTERTYPE)
                                               -> HRESULT>,
    pub ColorFill: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DDevice9Ex,
                                              pSurface:
                                                  *mut IDirect3DSurface9,
                                              pRect: *const RECT,
                                              color: D3DCOLOR) -> HRESULT>,
    pub CreateOffscreenPlainSurface: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3DDevice9Ex,
                                                                Width: UINT,
                                                                Height: UINT,
                                                                Format:
                                                                    D3DFORMAT,
                                                                Pool: D3DPOOL,
                                                                ppSurface:
                                                                    *mut *mut IDirect3DSurface9,
                                                                pSharedHandle:
                                                                    *mut HANDLE)
                                                               -> HRESULT>,
    pub SetRenderTarget: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    RenderTargetIndex: DWORD,
                                                    pRenderTarget:
                                                        *mut IDirect3DSurface9)
                                                   -> HRESULT>,
    pub GetRenderTarget: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    RenderTargetIndex: DWORD,
                                                    ppRenderTarget:
                                                        *mut *mut IDirect3DSurface9)
                                                   -> HRESULT>,
    pub SetDepthStencilSurface: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9Ex,
                                                           pNewZStencil:
                                                               *mut IDirect3DSurface9)
                                                          -> HRESULT>,
    pub GetDepthStencilSurface: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9Ex,
                                                           ppZStencilSurface:
                                                               *mut *mut IDirect3DSurface9)
                                                          -> HRESULT>,
    pub BeginScene: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9Ex)
                                              -> HRESULT>,
    pub EndScene: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DDevice9Ex)
                                            -> HRESULT>,
    pub Clear: ::std::option::Option<extern "C" fn
                                         (This: *mut IDirect3DDevice9Ex,
                                          Count: DWORD,
                                          pRects: *const D3DRECT,
                                          Flags: DWORD, Color: D3DCOLOR,
                                          Z: ::libc::c_float, Stencil: DWORD)
                                         -> HRESULT>,
    pub SetTransform: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 State: D3DTRANSFORMSTATETYPE,
                                                 pMatrix: *const D3DMATRIX)
                                                -> HRESULT>,
    pub GetTransform: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 State: D3DTRANSFORMSTATETYPE,
                                                 pMatrix: *mut D3DMATRIX)
                                                -> HRESULT>,
    pub MultiplyTransform: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9Ex,
                                                      arg1:
                                                          D3DTRANSFORMSTATETYPE,
                                                      arg2: *const D3DMATRIX)
                                                     -> HRESULT>,
    pub SetViewport: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                pViewport:
                                                    *const D3DVIEWPORT9)
                                               -> HRESULT>,
    pub GetViewport: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                pViewport: *mut D3DVIEWPORT9)
                                               -> HRESULT>,
    pub SetMaterial: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                pMaterial:
                                                    *const D3DMATERIAL9)
                                               -> HRESULT>,
    pub GetMaterial: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                pMaterial: *mut D3DMATERIAL9)
                                               -> HRESULT>,
    pub SetLight: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DDevice9Ex,
                                             Index: DWORD,
                                             arg1: *const D3DLIGHT9)
                                            -> HRESULT>,
    pub GetLight: ::std::option::Option<extern "C" fn
                                            (This: *mut IDirect3DDevice9Ex,
                                             Index: DWORD,
                                             arg1: *mut D3DLIGHT9)
                                            -> HRESULT>,
    pub LightEnable: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                Index: DWORD, Enable: BOOL)
                                               -> HRESULT>,
    pub GetLightEnable: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   Index: DWORD,
                                                   pEnable: *mut BOOL)
                                                  -> HRESULT>,
    pub SetClipPlane: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 Index: DWORD,
                                                 pPlane:
                                                     *const ::libc::c_float)
                                                -> HRESULT>,
    pub GetClipPlane: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 Index: DWORD,
                                                 pPlane: *mut ::libc::c_float)
                                                -> HRESULT>,
    pub SetRenderState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   State: D3DRENDERSTATETYPE,
                                                   Value: DWORD) -> HRESULT>,
    pub GetRenderState: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   State: D3DRENDERSTATETYPE,
                                                   pValue: *mut DWORD)
                                                  -> HRESULT>,
    pub CreateStateBlock: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirect3DDevice9Ex,
                                                     Type: D3DSTATEBLOCKTYPE,
                                                     ppSB:
                                                         *mut *mut IDirect3DStateBlock9)
                                                    -> HRESULT>,
    pub BeginStateBlock: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex)
                                                   -> HRESULT>,
    pub EndStateBlock: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  ppSB:
                                                      *mut *mut IDirect3DStateBlock9)
                                                 -> HRESULT>,
    pub SetClipStatus: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  pClipStatus:
                                                      *const D3DCLIPSTATUS9)
                                                 -> HRESULT>,
    pub GetClipStatus: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  pClipStatus:
                                                      *mut D3DCLIPSTATUS9)
                                                 -> HRESULT>,
    pub GetTexture: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9Ex,
                                               Stage: DWORD,
                                               ppTexture:
                                                   *mut *mut IDirect3DBaseTexture9)
                                              -> HRESULT>,
    pub SetTexture: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9Ex,
                                               Stage: DWORD,
                                               pTexture:
                                                   *mut IDirect3DBaseTexture9)
                                              -> HRESULT>,
    pub GetTextureStageState: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         Stage: DWORD,
                                                         Type:
                                                             D3DTEXTURESTAGESTATETYPE,
                                                         pValue: *mut DWORD)
                                                        -> HRESULT>,
    pub SetTextureStageState: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         Stage: DWORD,
                                                         Type:
                                                             D3DTEXTURESTAGESTATETYPE,
                                                         Value: DWORD)
                                                        -> HRESULT>,
    pub GetSamplerState: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    Sampler: DWORD,
                                                    Type: D3DSAMPLERSTATETYPE,
                                                    pValue: *mut DWORD)
                                                   -> HRESULT>,
    pub SetSamplerState: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    Sampler: DWORD,
                                                    Type: D3DSAMPLERSTATETYPE,
                                                    Value: DWORD) -> HRESULT>,
    pub ValidateDevice: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   pNumPasses: *mut DWORD)
                                                  -> HRESULT>,
    pub SetPaletteEntries: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9Ex,
                                                      PaletteNumber: UINT,
                                                      pEntries:
                                                          *const PALETTEENTRY)
                                                     -> HRESULT>,
    pub GetPaletteEntries: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9Ex,
                                                      PaletteNumber: UINT,
                                                      pEntries:
                                                          *mut PALETTEENTRY)
                                                     -> HRESULT>,
    pub SetCurrentTexturePalette: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             PaletteNumber:
                                                                 UINT)
                                                            -> HRESULT>,
    pub GetCurrentTexturePalette: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             PaletteNumber:
                                                                 *mut UINT)
                                                            -> HRESULT>,
    pub SetScissorRect: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   pRect: *const RECT)
                                                  -> HRESULT>,
    pub GetScissorRect: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   pRect: *mut RECT)
                                                  -> HRESULT>,
    pub SetSoftwareVertexProcessing: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3DDevice9Ex,
                                                                bSoftware:
                                                                    BOOL)
                                                               -> HRESULT>,
    pub GetSoftwareVertexProcessing: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3DDevice9Ex)
                                                               -> BOOL>,
    pub SetNPatchMode: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  nSegments: ::libc::c_float)
                                                 -> HRESULT>,
    pub GetNPatchMode: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex)
                                                 -> ::libc::c_float>,
    pub DrawPrimitive: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  PrimitiveType:
                                                      D3DPRIMITIVETYPE,
                                                  StartVertex: UINT,
                                                  PrimitiveCount: UINT)
                                                 -> HRESULT>,
    pub DrawIndexedPrimitive: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         arg1:
                                                             D3DPRIMITIVETYPE,
                                                         BaseVertexIndex: INT,
                                                         MinVertexIndex: UINT,
                                                         NumVertices: UINT,
                                                         startIndex: UINT,
                                                         primCount: UINT)
                                                        -> HRESULT>,
    pub DrawPrimitiveUP: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    PrimitiveType:
                                                        D3DPRIMITIVETYPE,
                                                    PrimitiveCount: UINT,
                                                    pVertexStreamZeroData:
                                                        *const ::libc::c_void,
                                                    VertexStreamZeroStride:
                                                        UINT) -> HRESULT>,
    pub DrawIndexedPrimitiveUP: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9Ex,
                                                           PrimitiveType:
                                                               D3DPRIMITIVETYPE,
                                                           MinVertexIndex:
                                                               UINT,
                                                           NumVertices: UINT,
                                                           PrimitiveCount:
                                                               UINT,
                                                           pIndexData:
                                                               *const ::libc::c_void,
                                                           IndexDataFormat:
                                                               D3DFORMAT,
                                                           pVertexStreamZeroData:
                                                               *const ::libc::c_void,
                                                           VertexStreamZeroStride:
                                                               UINT)
                                                          -> HRESULT>,
    pub ProcessVertices: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    SrcStartIndex: UINT,
                                                    DestIndex: UINT,
                                                    VertexCount: UINT,
                                                    pDestBuffer:
                                                        *mut IDirect3DVertexBuffer9,
                                                    pVertexDecl:
                                                        *mut IDirect3DVertexDeclaration9,
                                                    Flags: DWORD) -> HRESULT>,
    pub CreateVertexDeclaration: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9Ex,
                                                            pVertexElements:
                                                                *const D3DVERTEXELEMENT9,
                                                            ppDecl:
                                                                *mut *mut IDirect3DVertexDeclaration9)
                                                           -> HRESULT>,
    pub SetVertexDeclaration: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         pDecl:
                                                             *mut IDirect3DVertexDeclaration9)
                                                        -> HRESULT>,
    pub GetVertexDeclaration: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         ppDecl:
                                                             *mut *mut IDirect3DVertexDeclaration9)
                                                        -> HRESULT>,
    pub SetFVF: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DDevice9Ex,
                                           FVF: DWORD) -> HRESULT>,
    pub GetFVF: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DDevice9Ex,
                                           pFVF: *mut DWORD) -> HRESULT>,
    pub CreateVertexShader: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DDevice9Ex,
                                                       pFunction:
                                                           *const DWORD,
                                                       ppShader:
                                                           *mut *mut IDirect3DVertexShader9)
                                                      -> HRESULT>,
    pub SetVertexShader: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    pShader:
                                                        *mut IDirect3DVertexShader9)
                                                   -> HRESULT>,
    pub GetVertexShader: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    ppShader:
                                                        *mut *mut IDirect3DVertexShader9)
                                                   -> HRESULT>,
    pub SetVertexShaderConstantF: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *const ::libc::c_float,
                                                             Vector4fCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub GetVertexShaderConstantF: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *mut ::libc::c_float,
                                                             Vector4fCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub SetVertexShaderConstantI: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *const ::libc::c_int,
                                                             Vector4iCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub GetVertexShaderConstantI: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *mut ::libc::c_int,
                                                             Vector4iCount:
                                                                 UINT)
                                                            -> HRESULT>,
    pub SetVertexShaderConstantB: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *const BOOL,
                                                             BoolCount: UINT)
                                                            -> HRESULT>,
    pub GetVertexShaderConstantB: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             StartRegister:
                                                                 UINT,
                                                             pConstantData:
                                                                 *mut BOOL,
                                                             BoolCount: UINT)
                                                            -> HRESULT>,
    pub SetStreamSource: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    StreamNumber: UINT,
                                                    pStreamData:
                                                        *mut IDirect3DVertexBuffer9,
                                                    OffsetInBytes: UINT,
                                                    Stride: UINT) -> HRESULT>,
    pub GetStreamSource: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DDevice9Ex,
                                                    StreamNumber: UINT,
                                                    ppStreamData:
                                                        *mut *mut IDirect3DVertexBuffer9,
                                                    pOffsetInBytes: *mut UINT,
                                                    pStride: *mut UINT)
                                                   -> HRESULT>,
    pub SetStreamSourceFreq: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9Ex,
                                                        StreamNumber: UINT,
                                                        Setting: UINT)
                                                       -> HRESULT>,
    pub GetStreamSourceFreq: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9Ex,
                                                        StreamNumber: UINT,
                                                        pSetting: *mut UINT)
                                                       -> HRESULT>,
    pub SetIndices: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9Ex,
                                               pIndexData:
                                                   *mut IDirect3DIndexBuffer9)
                                              -> HRESULT>,
    pub GetIndices: ::std::option::Option<extern "C" fn
                                              (This: *mut IDirect3DDevice9Ex,
                                               ppIndexData:
                                                   *mut *mut IDirect3DIndexBuffer9)
                                              -> HRESULT>,
    pub CreatePixelShader: ::std::option::Option<extern "C" fn
                                                     (This:
                                                          *mut IDirect3DDevice9Ex,
                                                      pFunction: *const DWORD,
                                                      ppShader:
                                                          *mut *mut IDirect3DPixelShader9)
                                                     -> HRESULT>,
    pub SetPixelShader: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   pShader:
                                                       *mut IDirect3DPixelShader9)
                                                  -> HRESULT>,
    pub GetPixelShader: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Ex,
                                                   ppShader:
                                                       *mut *mut IDirect3DPixelShader9)
                                                  -> HRESULT>,
    pub SetPixelShaderConstantF: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9Ex,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *const ::libc::c_float,
                                                            Vector4fCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub GetPixelShaderConstantF: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9Ex,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *mut ::libc::c_float,
                                                            Vector4fCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub SetPixelShaderConstantI: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9Ex,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *const ::libc::c_int,
                                                            Vector4iCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub GetPixelShaderConstantI: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9Ex,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *mut ::libc::c_int,
                                                            Vector4iCount:
                                                                UINT)
                                                           -> HRESULT>,
    pub SetPixelShaderConstantB: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9Ex,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *const BOOL,
                                                            BoolCount: UINT)
                                                           -> HRESULT>,
    pub GetPixelShaderConstantB: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DDevice9Ex,
                                                            StartRegister:
                                                                UINT,
                                                            pConstantData:
                                                                *mut BOOL,
                                                            BoolCount: UINT)
                                                           -> HRESULT>,
    pub DrawRectPatch: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  Handle: UINT,
                                                  pNumSegs:
                                                      *const ::libc::c_float,
                                                  pRectPatchInfo:
                                                      *const D3DRECTPATCH_INFO)
                                                 -> HRESULT>,
    pub DrawTriPatch: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 Handle: UINT,
                                                 pNumSegs:
                                                     *const ::libc::c_float,
                                                 pTriPatchInfo:
                                                     *const D3DTRIPATCH_INFO)
                                                -> HRESULT>,
    pub DeletePatch: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                Handle: UINT) -> HRESULT>,
    pub CreateQuery: ::std::option::Option<extern "C" fn
                                               (This: *mut IDirect3DDevice9Ex,
                                                Type: D3DQUERYTYPE,
                                                ppQuery:
                                                    *mut *mut IDirect3DQuery9)
                                               -> HRESULT>,
    pub SetConvolutionMonoKernel: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Ex,
                                                             width: UINT,
                                                             height: UINT,
                                                             rows:
                                                                 *mut ::libc::c_float,
                                                             columns:
                                                                 *mut ::libc::c_float)
                                                            -> HRESULT>,
    pub ComposeRects: ::std::option::Option<extern "C" fn
                                                (This:
                                                     *mut IDirect3DDevice9Ex,
                                                 pSrc: *mut IDirect3DSurface9,
                                                 pDst: *mut IDirect3DSurface9,
                                                 pSrcRectDescs:
                                                     *mut IDirect3DVertexBuffer9,
                                                 NumRects: UINT,
                                                 pDstRectDescs:
                                                     *mut IDirect3DVertexBuffer9,
                                                 Operation: D3DCOMPOSERECTSOP,
                                                 Xoffset: ::libc::c_int,
                                                 Yoffset: ::libc::c_int)
                                                -> HRESULT>,
    pub PresentEx: ::std::option::Option<extern "C" fn
                                             (This: *mut IDirect3DDevice9Ex,
                                              pSourceRect: *const RECT,
                                              pDestRect: *const RECT,
                                              hDestWindowOverride: HWND,
                                              pDirtyRegion: *const RGNDATA,
                                              dwFlags: DWORD) -> HRESULT>,
    pub GetGPUThreadPriority: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         pPriority: *mut INT)
                                                        -> HRESULT>,
    pub SetGPUThreadPriority: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         Priority: INT)
                                                        -> HRESULT>,
    pub WaitForVBlank: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DDevice9Ex,
                                                  iSwapChain: UINT)
                                                 -> HRESULT>,
    pub CheckResourceResidency: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9Ex,
                                                           pResourceArray:
                                                               *mut *mut IDirect3DResource9,
                                                           NumResources:
                                                               UINT32)
                                                          -> HRESULT>,
    pub SetMaximumFrameLatency: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9Ex,
                                                           MaxLatency: UINT)
                                                          -> HRESULT>,
    pub GetMaximumFrameLatency: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DDevice9Ex,
                                                           pMaxLatency:
                                                               *mut UINT)
                                                          -> HRESULT>,
    pub CheckDeviceState: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirect3DDevice9Ex,
                                                     hDestinationWindow: HWND)
                                                    -> HRESULT>,
    pub CreateRenderTargetEx: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DDevice9Ex,
                                                         Width: UINT,
                                                         Height: UINT,
                                                         Format: D3DFORMAT,
                                                         MultiSample:
                                                             D3DMULTISAMPLE_TYPE,
                                                         MultisampleQuality:
                                                             DWORD,
                                                         Lockable: BOOL,
                                                         ppSurface:
                                                             *mut *mut IDirect3DSurface9,
                                                         pSharedHandle:
                                                             *mut HANDLE,
                                                         Usage: DWORD)
                                                        -> HRESULT>,
    pub CreateOffscreenPlainSurfaceEx: ::std::option::Option<extern "C" fn
                                                                 (This:
                                                                      *mut IDirect3DDevice9Ex,
                                                                  Width: UINT,
                                                                  Height:
                                                                      UINT,
                                                                  Format:
                                                                      D3DFORMAT,
                                                                  Pool:
                                                                      D3DPOOL,
                                                                  ppSurface:
                                                                      *mut *mut IDirect3DSurface9,
                                                                  pSharedHandle:
                                                                      *mut HANDLE,
                                                                  Usage:
                                                                      DWORD)
                                                                 -> HRESULT>,
    pub CreateDepthStencilSurfaceEx: ::std::option::Option<extern "C" fn
                                                               (This:
                                                                    *mut IDirect3DDevice9Ex,
                                                                Width: UINT,
                                                                Height: UINT,
                                                                Format:
                                                                    D3DFORMAT,
                                                                MultiSample:
                                                                    D3DMULTISAMPLE_TYPE,
                                                                MultisampleQuality:
                                                                    DWORD,
                                                                Discard: BOOL,
                                                                ppSurface:
                                                                    *mut *mut IDirect3DSurface9,
                                                                pSharedHandle:
                                                                    *mut HANDLE,
                                                                Usage: DWORD)
                                                               -> HRESULT>,
    pub ResetEx: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DDevice9Ex,
                                            pPresentationParameters:
                                                *mut D3DPRESENT_PARAMETERS,
                                            pFullscreenDisplayMode:
                                                *mut D3DDISPLAYMODEEX)
                                           -> HRESULT>,
    pub GetDisplayModeEx: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirect3DDevice9Ex,
                                                     iSwapChain: UINT,
                                                     pMode:
                                                         *mut D3DDISPLAYMODEEX,
                                                     pRotation:
                                                         *mut D3DDISPLAYROTATION)
                                                    -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DDevice9ExVtbl {
    fn default() -> Struct_IDirect3DDevice9ExVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DDEVICE9EX = *mut Struct_IDirect3DDevice9Ex;
pub type PDIRECT3DDEVICE9EX = *mut Struct_IDirect3DDevice9Ex;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DSwapChain9Ex {
    pub lpVtbl: *mut Struct_IDirect3DSwapChain9ExVtbl,
}
impl ::std::default::Default for Struct_IDirect3DSwapChain9Ex {
    fn default() -> Struct_IDirect3DSwapChain9Ex {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DSwapChain9ExVtbl = Struct_IDirect3DSwapChain9ExVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DSwapChain9ExVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DSwapChain9Ex,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DSwapChain9Ex)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSwapChain9Ex)
                                           -> ULONG>,
    pub Present: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DSwapChain9Ex,
                                            pSourceRect: *const RECT,
                                            pDestRect: *const RECT,
                                            hDestWindowOverride: HWND,
                                            pDirtyRegion: *const RGNDATA,
                                            dwFlags: DWORD) -> HRESULT>,
    pub GetFrontBufferData: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DSwapChain9Ex,
                                                       pDestSurface:
                                                           *mut IDirect3DSurface9)
                                                      -> HRESULT>,
    pub GetBackBuffer: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DSwapChain9Ex,
                                                  iBackBuffer: UINT,
                                                  Type: D3DBACKBUFFER_TYPE,
                                                  ppBackBuffer:
                                                      *mut *mut IDirect3DSurface9)
                                                 -> HRESULT>,
    pub GetRasterStatus: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DSwapChain9Ex,
                                                    pRasterStatus:
                                                        *mut D3DRASTER_STATUS)
                                                   -> HRESULT>,
    pub GetDisplayMode: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DSwapChain9Ex,
                                                   pMode: *mut D3DDISPLAYMODE)
                                                  -> HRESULT>,
    pub GetDevice: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DSwapChain9Ex,
                                              ppDevice:
                                                  *mut *mut IDirect3DDevice9)
                                             -> HRESULT>,
    pub GetPresentParameters: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DSwapChain9Ex,
                                                         pPresentationParameters:
                                                             *mut D3DPRESENT_PARAMETERS)
                                                        -> HRESULT>,
    pub GetLastPresentCount: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DSwapChain9Ex,
                                                        pLastPresentCount:
                                                            *mut UINT)
                                                       -> HRESULT>,
    pub GetPresentStats: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DSwapChain9Ex,
                                                    pPresentationStatistics:
                                                        *mut D3DPRESENTSTATS)
                                                   -> HRESULT>,
    pub GetDisplayModeEx: ::std::option::Option<extern "C" fn
                                                    (This:
                                                         *mut IDirect3DSwapChain9Ex,
                                                     pMode:
                                                         *mut D3DDISPLAYMODEEX,
                                                     pRotation:
                                                         *mut D3DDISPLAYROTATION)
                                                    -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DSwapChain9ExVtbl {
    fn default() -> Struct_IDirect3DSwapChain9ExVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DSWAPCHAIN9EX = *mut Struct_IDirect3DSwapChain9Ex;
pub type PDIRECT3DSWAPCHAIN9EX = *mut Struct_IDirect3DSwapChain9Ex;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3D9ExOverlayExtension {
    pub lpVtbl: *mut Struct_IDirect3D9ExOverlayExtensionVtbl,
}
impl ::std::default::Default for Struct_IDirect3D9ExOverlayExtension {
    fn default() -> Struct_IDirect3D9ExOverlayExtension {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3D9ExOverlayExtensionVtbl =
    Struct_IDirect3D9ExOverlayExtensionVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3D9ExOverlayExtensionVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3D9ExOverlayExtension,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This:
                                               *mut IDirect3D9ExOverlayExtension)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3D9ExOverlayExtension)
                                           -> ULONG>,
    pub CheckDeviceOverlayType: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3D9ExOverlayExtension,
                                                           Adapter: UINT,
                                                           DevType:
                                                               D3DDEVTYPE,
                                                           OverlayWidth: UINT,
                                                           OverlayHeight:
                                                               UINT,
                                                           OverlayFormat:
                                                               D3DFORMAT,
                                                           pDisplayMode:
                                                               *mut D3DDISPLAYMODEEX,
                                                           DisplayRotation:
                                                               D3DDISPLAYROTATION,
                                                           pOverlayCaps:
                                                               *mut D3DOVERLAYCAPS)
                                                          -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3D9ExOverlayExtensionVtbl {
    fn default() -> Struct_IDirect3D9ExOverlayExtensionVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3D9EXOVERLAYEXTENSION =
    *mut Struct_IDirect3D9ExOverlayExtension;
pub type PDIRECT3D9EXOVERLAYEXTENSION =
    *mut Struct_IDirect3D9ExOverlayExtension;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DDevice9Video {
    pub lpVtbl: *mut Struct_IDirect3DDevice9VideoVtbl,
}
impl ::std::default::Default for Struct_IDirect3DDevice9Video {
    fn default() -> Struct_IDirect3DDevice9Video {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DDevice9VideoVtbl = Struct_IDirect3DDevice9VideoVtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DDevice9VideoVtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DDevice9Video,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DDevice9Video)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This: *mut IDirect3DDevice9Video)
                                           -> ULONG>,
    pub GetContentProtectionCaps: ::std::option::Option<extern "C" fn
                                                            (This:
                                                                 *mut IDirect3DDevice9Video,
                                                             pCryptoType:
                                                                 *const GUID,
                                                             pDecodeProfile:
                                                                 *const GUID,
                                                             pCaps:
                                                                 *mut D3DCONTENTPROTECTIONCAPS)
                                                            -> HRESULT>,
    pub CreateAuthenticatedChannel: ::std::option::Option<extern "C" fn
                                                              (This:
                                                                   *mut IDirect3DDevice9Video,
                                                               ChannelType:
                                                                   D3DAUTHENTICATEDCHANNELTYPE,
                                                               ppAuthenticatedChannel:
                                                                   *mut *mut IDirect3DAuthenticatedChannel9,
                                                               pChannelHandle:
                                                                   *mut HANDLE)
                                                              -> HRESULT>,
    pub CreateCryptoSession: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DDevice9Video,
                                                        pCryptoType:
                                                            *const GUID,
                                                        pDecodeProfile:
                                                            *const GUID,
                                                        ppCryptoSession:
                                                            *mut *mut IDirect3DCryptoSession9,
                                                        pCryptoHandle:
                                                            *mut HANDLE)
                                                       -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DDevice9VideoVtbl {
    fn default() -> Struct_IDirect3DDevice9VideoVtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DDEVICE9VIDEO = *mut Struct_IDirect3DDevice9Video;
pub type PDIRECT3DDEVICE9VIDEO = *mut Struct_IDirect3DDevice9Video;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DAuthenticatedChannel9 {
    pub lpVtbl: *mut Struct_IDirect3DAuthenticatedChannel9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DAuthenticatedChannel9 {
    fn default() -> Struct_IDirect3DAuthenticatedChannel9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DAuthenticatedChannel9Vtbl =
    Struct_IDirect3DAuthenticatedChannel9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DAuthenticatedChannel9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DAuthenticatedChannel9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This:
                                               *mut IDirect3DAuthenticatedChannel9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3DAuthenticatedChannel9)
                                           -> ULONG>,
    pub GetCertificateSize: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DAuthenticatedChannel9,
                                                       pCertificateSize:
                                                           *mut UINT)
                                                      -> HRESULT>,
    pub GetCertificate: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DAuthenticatedChannel9,
                                                   CertifacteSize: UINT,
                                                   ppCertificate: *mut BYTE)
                                                  -> HRESULT>,
    pub NegotiateKeyExchange: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DAuthenticatedChannel9,
                                                         DataSize: UINT,
                                                         pData:
                                                             *mut ::libc::c_void)
                                                        -> HRESULT>,
    pub Query: ::std::option::Option<extern "C" fn
                                         (This:
                                              *mut IDirect3DAuthenticatedChannel9,
                                          InputSize: UINT,
                                          pInput: *const ::libc::c_void,
                                          OutputSize: UINT,
                                          pOutput: *mut ::libc::c_void)
                                         -> HRESULT>,
    pub Configure: ::std::option::Option<extern "C" fn
                                             (This:
                                                  *mut IDirect3DAuthenticatedChannel9,
                                              InputSize: UINT,
                                              pInput: *const ::libc::c_void,
                                              pOutput:
                                                  *mut D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT)
                                             -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DAuthenticatedChannel9Vtbl {
    fn default() -> Struct_IDirect3DAuthenticatedChannel9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DAUTHENTICATEDCHANNEL9 =
    *mut Struct_IDirect3DAuthenticatedChannel9;
pub type PDIRECT3DAUTHENTICATEDCHANNEL9 =
    *mut Struct_IDirect3DAuthenticatedChannel9;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DCryptoSession9 {
    pub lpVtbl: *mut Struct_IDirect3DCryptoSession9Vtbl,
}
impl ::std::default::Default for Struct_IDirect3DCryptoSession9 {
    fn default() -> Struct_IDirect3DCryptoSession9 {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type IDirect3DCryptoSession9Vtbl = Struct_IDirect3DCryptoSession9Vtbl;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_IDirect3DCryptoSession9Vtbl {
    pub QueryInterface: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DCryptoSession9,
                                                   riid: *const IID,
                                                   ppvObj:
                                                       *mut *mut ::libc::c_void)
                                                  -> HRESULT>,
    pub AddRef: ::std::option::Option<extern "C" fn
                                          (This: *mut IDirect3DCryptoSession9)
                                          -> ULONG>,
    pub Release: ::std::option::Option<extern "C" fn
                                           (This:
                                                *mut IDirect3DCryptoSession9)
                                           -> ULONG>,
    pub GetCertificateSize: ::std::option::Option<extern "C" fn
                                                      (This:
                                                           *mut IDirect3DCryptoSession9,
                                                       pCertificateSize:
                                                           *mut UINT)
                                                      -> HRESULT>,
    pub GetCertificate: ::std::option::Option<extern "C" fn
                                                  (This:
                                                       *mut IDirect3DCryptoSession9,
                                                   CertifacteSize: UINT,
                                                   ppCertificate: *mut BYTE)
                                                  -> HRESULT>,
    pub NegotiateKeyExchange: ::std::option::Option<extern "C" fn
                                                        (This:
                                                             *mut IDirect3DCryptoSession9,
                                                         DataSize: UINT,
                                                         pData:
                                                             *mut ::libc::c_void)
                                                        -> HRESULT>,
    pub EncryptionBlt: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DCryptoSession9,
                                                  pSrcSurface:
                                                      *mut IDirect3DSurface9,
                                                  pDstSurface:
                                                      *mut IDirect3DSurface9,
                                                  DstSurfaceSize: UINT,
                                                  pIV: *mut ::libc::c_void)
                                                 -> HRESULT>,
    pub DecryptionBlt: ::std::option::Option<extern "C" fn
                                                 (This:
                                                      *mut IDirect3DCryptoSession9,
                                                  pSrcSurface:
                                                      *mut IDirect3DSurface9,
                                                  pDstSurface:
                                                      *mut IDirect3DSurface9,
                                                  SrcSurfaceSize: UINT,
                                                  pEncryptedBlockInfo:
                                                      *mut D3DENCRYPTED_BLOCK_INFO,
                                                  pContentKey:
                                                      *mut ::libc::c_void,
                                                  pIV: *mut ::libc::c_void)
                                                 -> HRESULT>,
    pub GetSurfacePitch: ::std::option::Option<extern "C" fn
                                                   (This:
                                                        *mut IDirect3DCryptoSession9,
                                                    pSrcSurface:
                                                        *mut IDirect3DSurface9,
                                                    pSurfacePitch: *mut UINT)
                                                   -> HRESULT>,
    pub StartSessionKeyRefresh: ::std::option::Option<extern "C" fn
                                                          (This:
                                                               *mut IDirect3DCryptoSession9,
                                                           pRandomNumber:
                                                               *mut ::libc::c_void,
                                                           RandomNumberSize:
                                                               UINT)
                                                          -> HRESULT>,
    pub FinishSessionKeyRefresh: ::std::option::Option<extern "C" fn
                                                           (This:
                                                                *mut IDirect3DCryptoSession9)
                                                           -> HRESULT>,
    pub GetEncryptionBltKey: ::std::option::Option<extern "C" fn
                                                       (This:
                                                            *mut IDirect3DCryptoSession9,
                                                        pReadbackKey:
                                                            *mut ::libc::c_void,
                                                        KeySize: UINT)
                                                       -> HRESULT>,
}
impl ::std::default::Default for Struct_IDirect3DCryptoSession9Vtbl {
    fn default() -> Struct_IDirect3DCryptoSession9Vtbl {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type LPDIRECT3DCRYPTOSESSION9 = *mut Struct_IDirect3DCryptoSession9;
pub type PDIRECT3DCRYPTOSESSION9 = *mut Struct_IDirect3DCryptoSession9;
extern "C" {
    pub static IID_IDirect3D9: GUID;
    pub static IID_IDirect3DDevice9: GUID;
    pub static IID_IDirect3DResource9: GUID;
    pub static IID_IDirect3DBaseTexture9: GUID;
    pub static IID_IDirect3DTexture9: GUID;
    pub static IID_IDirect3DCubeTexture9: GUID;
    pub static IID_IDirect3DVolumeTexture9: GUID;
    pub static IID_IDirect3DVertexBuffer9: GUID;
    pub static IID_IDirect3DIndexBuffer9: GUID;
    pub static IID_IDirect3DSurface9: GUID;
    pub static IID_IDirect3DVolume9: GUID;
    pub static IID_IDirect3DSwapChain9: GUID;
    pub static IID_IDirect3DVertexDeclaration9: GUID;
    pub static IID_IDirect3DVertexShader9: GUID;
    pub static IID_IDirect3DPixelShader9: GUID;
    pub static IID_IDirect3DStateBlock9: GUID;
    pub static IID_IDirect3DQuery9: GUID;
    pub static IID_HelperName: GUID;
    pub static IID_IDirect3D9Ex: GUID;
    pub static IID_IDirect3DDevice9Ex: GUID;
    pub static IID_IDirect3DSwapChain9Ex: GUID;
    pub static IID_IDirect3D9ExOverlayExtension: GUID;
    pub static IID_IDirect3DDevice9Video: GUID;
    pub static IID_IDirect3DAuthenticatedChannel9: GUID;
    pub static IID_IDirect3DCryptoSession9: GUID;
}
extern "C" {
    pub fn Direct3DCreate9(SDKVersion: UINT) -> *mut IDirect3D9;
    pub fn D3DPERF_BeginEvent(col: D3DCOLOR, wszName: LPCWSTR)
     -> ::libc::c_int;
    pub fn D3DPERF_EndEvent() -> ::libc::c_int;
    pub fn D3DPERF_SetMarker(col: D3DCOLOR, wszName: LPCWSTR) -> ();
    pub fn D3DPERF_SetRegion(col: D3DCOLOR, wszName: LPCWSTR) -> ();
    pub fn D3DPERF_QueryRepeatFrame() -> BOOL;
    pub fn D3DPERF_SetOptions(dwOptions: DWORD) -> ();
    pub fn D3DPERF_GetStatus() -> DWORD;
    pub fn Direct3DCreate9Ex(SDKVersion: UINT, arg1: *mut *mut IDirect3D9Ex)
     -> HRESULT;
}
